{"version":3,"sources":["webpack:///app.987702c990d6a66b3e1f.bundle.js","webpack:///./src/dtos.ts","webpack:///./src/main.module.ts","webpack:///./src/modules/app/home/hello.ts","webpack:///./src/modules/app/home/home.ts","webpack:///./src/modules/app/products/products.ts","webpack:///./src/modules/app/technology/technology.ts","webpack:///./src/shared/footer.ts","webpack:///./src/shared/header.ts","webpack:///./src/assets/img/logo.png","webpack:///./src/modules/app/home/hello.html","webpack:///./src/modules/app/home/hello.css","webpack:///./src/modules/app/products/products.scss","webpack:///./~/tslib/tslib.es6.js","webpack:///tabs.js","webpack:///layout.js","webpack:///mdlComponentHandler.js","webpack:///rAF.js","webpack:///button.js","webpack:///checkbox.js","webpack:///icon-toggle.js","webpack:///menu.js","webpack:///progress.js","webpack:///radio.js","webpack:///slider.js","webpack:///snackbar.js","webpack:///spinner.js","webpack:///switch.js","webpack:///textfield.js","webpack:///tooltip.js","webpack:///data-table.js","webpack:///ripple.js","webpack:///./src/modules/app/app.module.ts","webpack:///./src/shared/utils.ts","webpack:///../../../../packages/forms/src/validators.ts","webpack:///../../../../packages/forms/src/directives/control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/normalize_validator.ts","webpack:///../../../../packages/forms/src/directives/select_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/shared.ts","webpack:///../../../../packages/forms/src/model.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_group_name.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_control_name.ts","webpack:///../../../../packages/forms/src/directives/abstract_control_directive.ts","webpack:///../../../../packages/forms/src/directives/control_container.ts","webpack:///../../../../packages/forms/src/directives/checkbox_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/default_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/number_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/ng_control.ts","webpack:///../../../../packages/forms/src/directives/radio_control_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/range_value_accessor.ts","webpack:///../../../../packages/forms/src/directives/abstract_form_group_directive.ts","webpack:///../../../../packages/forms/src/directives/ng_control_status.ts","webpack:///../../../../packages/forms/src/directives/ng_form.ts","webpack:///../../../../packages/forms/src/directives/error_examples.ts","webpack:///../../../../packages/forms/src/directives/template_driven_errors.ts","webpack:///../../../../packages/forms/src/directives/ng_model_group.ts","webpack:///../../../../packages/forms/src/directives/ng_model.ts","webpack:///../../../../packages/forms/src/directives/reactive_errors.ts","webpack:///../../../../packages/forms/src/directives/reactive_directives/form_control_directive.ts","webpack:///../../../../packages/forms/src/directives/validators.ts","webpack:///../../../../packages/forms/src/form_builder.ts","webpack:///../../../../packages/forms/src/directives/ng_no_validate_directive.ts","webpack:///../../../../packages/forms/src/directives.ts","webpack:///../../../../packages/forms/src/form_providers.ts","webpack:///./src/main.ts","webpack:///./src/app.component.ts"],"names":["webpackJsonp","100","module","exports","__webpack_require__","Object","defineProperty","value","HelloResponse","Hello","prototype","createResponse","getTypeName","101","tslib_1","core_1","platform_browser_1","forms_1","http_1","router_1","app_component_1","header_1","footer_1","app_module_1","utils_1","routes","path","redirectTo","pathMatch","MainModule","__decorate","NgModule","declarations","MDL","AppComponent","HeaderComponent","FooterComponent","imports","BrowserModule","FormsModule","HttpModule","RouterModule","forRoot","AppModule","providers","bootstrap","102","dtos_1","HelloComponent","cdref","this","ngOnInit","nameChanged","name","__awaiter","req","r","__generator","_a","label","client","get","sent","result","detectChanges","Input","__metadata","String","Component","selector","template","styles","ChangeDetectorRef","103","HomeComponent","route","heading","_this","data","subscribe","x","ActivatedRoute","104","ProductsComponent","105","TechnologyComponent","106","107","router","title","filter","val","isActive","url","substring","Router","108","109","110","p","111","112","113","12","__webpack_exports__","__extends","d","b","__","constructor","extendStatics","create","__rest","s","e","t","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","decorators","target","key","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","throw","done","then","apply","body","verb","n","v","op","f","TypeError","_","y","ops","pop","trys","push","g","return","Symbol","iterator","__exportStar","m","__values","o","__read","ar","error","__spread","concat","__await","__asyncGenerator","a","q","resume","settle","fulfill","shift","asyncIterator","__asyncDelegator","__asyncValues","__assign","setPrototypeOf","__proto__","Array","assign","121","MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","getAttribute","charAt","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","TAB_MANUAL_SWITCH","show","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","optReplace","registeredComponents_","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","upgradedList","classesToUpgrade","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","callbacks","widget","upgradedEv","upgradeElementsInternal","isArray","slice","HTMLElement","children","registerInternal","widgetMissing","newConfig","classAsString","item","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","NodeList","Node","ComponentConfigPublic","ComponentConfig","documentElement","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","fraction","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","message","actionHandler","actionText","timeout","checkQueue_","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","labelClasses","firstHeader","bodyRows","footRows","rows","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","getFrameCount","setFrameCount","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","offset","webkitTransform","msTransform","transform","386","52","home_1","hello_1","products_1","technology_1","53","global","servicestack_client_1","JsonServiceClient","BaseUrl","ngAfterViewInit","Directive","54","isEmptyInputValue","isPresent","toObservable","obs","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_fromPromise__","_executeValidators","control","validators","map","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","keys","_isAndroid","__WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__","getUserAgent","toLowerCase","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","_buildValueString","id","_extractId","valueString","_buildValueString$1","_extractId$1","controlPath","parent","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","messageEnd","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","FormGroup","controls","FormArray","at","coerceToValidator","coerceToAsyncValidator","list","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","AbstractFormGroupDirective","CheckboxControlValueAccessor","ControlContainer","NG_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","NgControl","NgControlStatus","NgControlStatusGroup","NgForm","NgModel","NgModelGroup","RadioControlValueAccessor","FormControlDirective","FormControlName","NgSelectOption","SelectControlValueAccessor","SelectMultipleControlValueAccessor","CheckboxRequiredValidator","EmailValidator","MaxLengthValidator","MinLengthValidator","PatternValidator","RequiredValidator","FormBuilder","AbstractControl","FormControl","NG_ASYNC_VALIDATORS","NG_VALIDATORS","VERSION","ReactiveFormsModule","InternalFormsSharedModule","REACTIVE_DRIVEN_DIRECTIVES","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","CHECKBOX_VALUE_ACCESSOR","DEFAULT_VALUE_ACCESSOR","AbstractControlStatus","ngControlStatusHost","formDirectiveProvider","formControlBinding","modelGroupProvider","NgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlRegistry","RANGE_VALUE_ACCESSOR","RangeValueAccessor","formControlBinding$1","controlNameBinding","formDirectiveProvider$1","formArrayNameProvider","formGroupNameProvider","SELECT_VALUE_ACCESSOR","NgSelectMultipleOption","SELECT_MULTIPLE_VALUE_ACCESSOR","CHECKBOX_REQUIRED_VALIDATOR","EMAIL_VALIDATOR","MAX_LENGTH_VALIDATOR","MIN_LENGTH_VALIDATOR","PATTERN_VALIDATOR","REQUIRED_VALIDATOR","__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_forkJoin__","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_map__","enumerable","configurable","pending","pristine","dirty","touched","untouched","enabled","statusChanges","valueChanges","reset","hasError","errorCode","getError","_super","EMAIL_REGEXP","required","requiredTrue","email","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","requiredPattern","actualValue","presentValidators","observables","provide","useExisting","multi","_renderer","_elementRef","onChange","onTouched","setElementProperty","nativeElement","fn","args","host","(change)","(blur)","ctorParameters","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","(input)","(compositionstart)","(compositionend)","parseFloat","_parent","_accessors","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","propDecorators","_optionMap","Map","_idCounter","_compareWith","set","JSON","stringify","_getOptionId","_getOptionValue","_registerOption","_i","from","has","compareWith","_element","_select","_setElementValue","delete","ngValue","optionSelectedStateSetter","ids_1","opt","_setSelected","selected","options","selectedOptions","_value","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","cd","_cd","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","_b","emitEvent","_updateValue","emit","_updateAncestors","changeFn","setParent","patchValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","_initObservables","_anyControlsHaveStatus","cb","_anyControls","condition","status","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","_onChange","_applyFormState","emitViewToModelChange","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","resolvedPromise","asyncValidators","_submitted","ngSubmit","form","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","(submit)","(reset)","outputs","exportAs","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","Examples","missingNameException","modelGroupParentException","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","_isControlChanged","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","_added","_required","[attr.required]","_enabled","_createValidator","_validator","[attr.minlength]","[attr.maxlength]","[attr.pattern]","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","novalidate","94","platform_browser_dynamic_1","main_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","MODULE_REF","99","logoUrl"],"mappings":"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","file":"app.987702c990d6a66b3e1f.bundle.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 100:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n/* Options:\r\nDate: 2017-01-01 12:00:00\r\nVersion: 4\r\nTip: To override a DTO option, remove \"//\" prefix before updating\r\nBaseUrl: http://localhost:61322/\r\n\r\n//GlobalNamespace:\r\nExportAsTypes: True\r\n//MakePropertiesOptional: True\r\n//AddServiceStackTypes: True\r\n//AddResponseStatus: False\r\n//AddImplicitVersion:\r\n//AddDescriptionAsComments: True\r\n//IncludeTypes:\r\n//ExcludeTypes:\r\n//DefaultImports:\r\n*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HelloResponse = (function () {\r\n    function HelloResponse() {\r\n    }\r\n    return HelloResponse;\r\n}());\r\nexports.HelloResponse = HelloResponse;\r\n// @Route(\"/hello\")\r\n// @Route(\"/hello/{Name}\")\r\nvar Hello = (function () {\r\n    function Hello() {\r\n    }\r\n    Hello.prototype.createResponse = function () { return new HelloResponse(); };\r\n    Hello.prototype.getTypeName = function () { return \"Hello\"; };\r\n    return Hello;\r\n}());\r\nexports.Hello = Hello;\r\n\n\n/***/ }),\n\n/***/ 101:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar platform_browser_1 = __webpack_require__(17);\r\nvar forms_1 = __webpack_require__(54);\r\nvar http_1 = __webpack_require__(47);\r\nvar router_1 = __webpack_require__(19);\r\nvar app_component_1 = __webpack_require__(99);\r\nvar header_1 = __webpack_require__(107);\r\nvar footer_1 = __webpack_require__(106);\r\nvar app_module_1 = __webpack_require__(52);\r\nvar utils_1 = __webpack_require__(53);\r\nvar routes = [\r\n    { path: '', redirectTo: 'main/0', pathMatch: 'full' },\r\n];\r\nvar MainModule = (function () {\r\n    function MainModule() {\r\n    }\r\n    return MainModule;\r\n}());\r\nMainModule = tslib_1.__decorate([\r\n    core_1.NgModule({\r\n        declarations: [\r\n            utils_1.MDL,\r\n            app_component_1.AppComponent,\r\n            header_1.HeaderComponent,\r\n            footer_1.FooterComponent\r\n        ],\r\n        imports: [\r\n            platform_browser_1.BrowserModule,\r\n            forms_1.FormsModule,\r\n            http_1.HttpModule,\r\n            router_1.RouterModule.forRoot(routes),\r\n            app_module_1.AppModule\r\n        ],\r\n        providers: [],\r\n        bootstrap: [app_component_1.AppComponent]\r\n    })\r\n], MainModule);\r\nexports.MainModule = MainModule;\r\n\n\n/***/ }),\n\n/***/ 102:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar utils_1 = __webpack_require__(53);\r\nvar dtos_1 = __webpack_require__(100);\r\nvar HelloComponent = (function () {\r\n    function HelloComponent(cdref) {\r\n        this.cdref = cdref;\r\n    }\r\n    HelloComponent.prototype.ngOnInit = function () {\r\n        this.nameChanged(this.name);\r\n    };\r\n    HelloComponent.prototype.nameChanged = function (name) {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var req, r;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!name) return [3 /*break*/, 2];\r\n                        req = new dtos_1.Hello();\r\n                        req.name = name;\r\n                        return [4 /*yield*/, utils_1.client.get(req)];\r\n                    case 1:\r\n                        r = _a.sent();\r\n                        this.result = r.result;\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        this.result = '';\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        this.cdref.detectChanges();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return HelloComponent;\r\n}());\r\ntslib_1.__decorate([\r\n    core_1.Input(),\r\n    tslib_1.__metadata(\"design:type\", String)\r\n], HelloComponent.prototype, \"name\", void 0);\r\nHelloComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'hello',\r\n        template: __webpack_require__(111),\r\n        styles: [__webpack_require__(112)]\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [core_1.ChangeDetectorRef])\r\n], HelloComponent);\r\nexports.HelloComponent = HelloComponent;\r\n\n\n/***/ }),\n\n/***/ 103:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar router_1 = __webpack_require__(19);\r\nvar HomeComponent = (function () {\r\n    function HomeComponent(route) {\r\n        this.route = route;\r\n        this.heading = \"Home\";\r\n    }\r\n    HomeComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.route.data.subscribe(function (x) { return _this.name = x.name; });\r\n    };\r\n    return HomeComponent;\r\n}());\r\nHomeComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'home',\r\n        template: \"\\n        <section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\n            <header class=\\\"section__play-btn mdl-cell mdl-cell--3-col-desktop mdl-cell--2-col-tablet mdl-cell--4-col-phone mdl-color--teal-100 mdl-color-text--white\\\">\\n                <i class=\\\"material-icons\\\">play_circle_filled</i>\\n            </header>\\n\\n            <div class=\\\"mdl-card mdl-cell mdl-cell--9-col-desktop mdl-cell--6-col-tablet mdl-cell--4-col-phone\\\">\\n\\n                <hello [name]=\\\"name\\\"></hello> \\n\\n                <div class=\\\"mdl-card__actions\\\">\\n                    <a href=\\\"http://docs.servicestack.net/typescript-add-servicestack-reference\\\" class=\\\"mdl-button\\\">More info on TypeScript ServiceStack Reference</a>\\n                </div>\\n            </div>\\n        </section>\\n    \"\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [router_1.ActivatedRoute])\r\n], HomeComponent);\r\nexports.HomeComponent = HomeComponent;\r\n\n\n/***/ }),\n\n/***/ 104:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar ProductsComponent = (function () {\r\n    function ProductsComponent() {\r\n        this.heading = \"Products\";\r\n    }\r\n    return ProductsComponent;\r\n}());\r\nProductsComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'products',\r\n        template: \"\\n        <section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\n            <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\n                <div class=\\\"mdl-card__supporting-text mdl-grid mdl-grid--no-spacing\\\">\\n                <h4 class=\\\"mdl-cell mdl-cell--12-col\\\">{{heading}}</h4>\\n                <div class=\\\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\\\">\\n                    <div class=\\\"section__circle-container__circle mdl-color--primary\\\"></div>\\n                </div>\\n                <div class=\\\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\\\">\\n                    <h5>Lorem ipsum dolor sit amet</h5>\\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\\\"#\\\">proident minim</a>.\\n                </div>\\n                <div class=\\\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\\\">\\n                    <div class=\\\"section__circle-container__circle mdl-color--primary\\\"></div>\\n                </div>\\n                <div class=\\\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\\\">\\n                    <h5>Lorem ipsum dolor sit amet</h5>\\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\\\"#\\\">proident minim</a>.\\n                </div>\\n                <div class=\\\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\\\">\\n                    <div class=\\\"section__circle-container__circle mdl-color--primary\\\"></div>\\n                </div>\\n                <div class=\\\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\\\">\\n                    <h5>Lorem ipsum dolor sit amet</h5>\\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\\\"#\\\">proident minim</a>.\\n                </div>\\n                </div>\\n                <div class=\\\"mdl-card__actions\\\">\\n                <a href=\\\"#\\\" class=\\\"mdl-button\\\">Read our features</a>\\n                </div>\\n            </div>\\n        </section>\\n    \",\r\n        styles: [__webpack_require__(113)]\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], ProductsComponent);\r\nexports.ProductsComponent = ProductsComponent;\r\n\n\n/***/ }),\n\n/***/ 105:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar TechnologyComponent = (function () {\r\n    function TechnologyComponent() {\r\n        this.heading = \"Technology\";\r\n    }\r\n    return TechnologyComponent;\r\n}());\r\nTechnologyComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'technology',\r\n        template: \"\\n        <section class=\\\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\\\">\\n            <div class=\\\"mdl-card mdl-cell mdl-cell--12-col\\\">\\n                <div class=\\\"mdl-card__supporting-text\\\">\\n                    <h4>{{heading}}</h4>\\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. \\n                    Nostrud in laboris labore nisi amet do dolor eu fugiat consectetur elit cillum esse. \\n                    Pariatur occaecat nisi laboris tempor laboris eiusmod qui id Lorem esse commodo in. \\n                    Exercitation aute dolore deserunt culpa consequat elit labore incididunt elit anim.\\n                </div>\\n                <div class=\\\"mdl-card__actions\\\">\\n                    <a href=\\\"#\\\" class=\\\"mdl-button\\\">Read our features</a>\\n                </div>\\n            </div>\\n        </section>\\n    \"\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], TechnologyComponent);\r\nexports.TechnologyComponent = TechnologyComponent;\r\n\n\n/***/ }),\n\n/***/ 106:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar FooterComponent = (function () {\r\n    function FooterComponent() {\r\n    }\r\n    return FooterComponent;\r\n}());\r\nFooterComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'app-footer',\r\n        template: \"\\n        <section class=\\\"section--footer mdl-grid\\\"></section>\\n        <footer class=\\\"mdl-mega-footer\\\">\\n            <div class=\\\"mdl-mega-footer--middle-section\\\">\\n                <div class=\\\"mdl-mega-footer--drop-down-section\\\">\\n                    <input class=\\\"mdl-mega-footer--heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n                    <h1 class=\\\"mdl-mega-footer--heading\\\">Features</h1>\\n                    <ul class=\\\"mdl-mega-footer--link-list\\\">\\n                        <li><a href=\\\"#\\\">About</a></li>\\n                        <li><a href=\\\"#\\\">Terms</a></li>\\n                        <li><a href=\\\"#\\\">Partners</a></li>\\n                        <li><a href=\\\"#\\\">Updates</a></li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"mdl-mega-footer--drop-down-section\\\">\\n                    <input class=\\\"mdl-mega-footer--heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n                    <h1 class=\\\"mdl-mega-footer--heading\\\">Details</h1>\\n                    <ul class=\\\"mdl-mega-footer--link-list\\\">\\n                        <li><a href=\\\"#\\\">Spec</a></li>\\n                        <li><a href=\\\"#\\\">Tools</a></li>\\n                        <li><a href=\\\"#\\\">Resources</a></li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"mdl-mega-footer--drop-down-section\\\">\\n                    <input class=\\\"mdl-mega-footer--heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n                    <h1 class=\\\"mdl-mega-footer--heading\\\">Technology</h1>\\n                    <ul class=\\\"mdl-mega-footer--link-list\\\">\\n                        <li><a href=\\\"#\\\">How it works</a></li>\\n                        <li><a href=\\\"#\\\">Patterns</a></li>\\n                        <li><a href=\\\"#\\\">Usage</a></li>\\n                        <li><a href=\\\"#\\\">Products</a></li>\\n                        <li><a href=\\\"#\\\">Contracts</a></li>\\n                    </ul>\\n                </div>\\n                <div class=\\\"mdl-mega-footer--drop-down-section\\\">\\n                    <input class=\\\"mdl-mega-footer--heading-checkbox\\\" type=\\\"checkbox\\\" checked>\\n                    <h1 class=\\\"mdl-mega-footer--heading\\\">FAQ</h1>\\n                    <ul class=\\\"mdl-mega-footer--link-list\\\">\\n                        <li><a href=\\\"#\\\">Questions</a></li>\\n                        <li><a href=\\\"#\\\">Answers</a></li>\\n                        <li><a href=\\\"#\\\">Contact us</a></li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"mdl-mega-footer--bottom-section\\\">\\n                <div class=\\\"mdl-logo\\\">\\n                    More Information\\n                </div>\\n                <ul class=\\\"mdl-mega-footer--link-list\\\">\\n                    <li><a href=\\\"https://github.com/ServiceStack/ServiceStackVS\\\">ServiceStack VS.NET Templates</a></li>\\n                </ul>\\n            </div>\\n        </footer>\\n    \"\r\n    })\r\n], FooterComponent);\r\nexports.FooterComponent = FooterComponent;\r\n\n\n/***/ }),\n\n/***/ 107:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar router_1 = __webpack_require__(19);\r\nvar app_module_1 = __webpack_require__(52);\r\nvar HeaderComponent = (function () {\r\n    function HeaderComponent(route, router) {\r\n        this.route = route;\r\n        this.router = router;\r\n        this.title = 'Angular4 App';\r\n        this.routes = app_module_1.routes.filter(function (val) { return val.path != ''; });\r\n    }\r\n    HeaderComponent.prototype.isActive = function (path) {\r\n        return this.router.url.substring(1) === path;\r\n    };\r\n    return HeaderComponent;\r\n}());\r\nHeaderComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'app-header',\r\n        template: \"\\n        <header class=\\\"mdl-layout__header mdl-layout__header--scroll mdl-color--primary\\\">\\n            <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\n            <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\">\\n                <h3>{{title}}</h3>\\n            </div>\\n            <div class=\\\"mdl-layout--large-screen-only mdl-layout__header-row\\\"></div>\\n            <div class=\\\"mdl-layout__tab-bar mdl-js-ripple-effect mdl-color--primary-dark\\\">\\n\\n                <span *ngFor=\\\"let route of routes\\\">\\n                    <a *ngIf=\\\"route.data\\\" class=\\\"mdl-layout__tab\\\" [class.is-active]=\\\"isActive(route.path)\\\"\\n                        routerLink=\\\"{{route.path}}\\\">{{route.data.title}}</a>\\n                </span>\\n\\n                <button class=\\\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored mdl-shadow--4dp mdl-color--accent\\\" id=\\\"add\\\">\\n                    <i class=\\\"material-icons\\\" role=\\\"presentation\\\">add</i>\\n                    <span class=\\\"visuallyhidden\\\">Add</span>\\n                </button>\\n            </div>\\n        </header>\\n    \"\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [router_1.ActivatedRoute, router_1.Router])\r\n], HeaderComponent);\r\nexports.HeaderComponent = HeaderComponent;\r\n\n\n/***/ }),\n\n/***/ 108:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 109:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 110:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"img/logo.36166adfacf0c8cc11d493f2161164fd.png\";\n\n/***/ }),\n\n/***/ 111:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"mdl-card__supporting-text\\\">\\n    <h4>Welcome</h4>\\n\\n    Ajax request using ServiceStack's TypeScript JsonServiceClient and Typed DTOs:\\n\\n    <div class=\\\"mdl-textfield mdl-js-textfield\\\" style=\\\"width:auto\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"mdl-textfield__input\\\" id=\\\"Name\\\"\\n               placeholder=\\\"Type your name\\\" autocomplete=\\\"off\\\"\\n               [(ngModel)]=\\\"name\\\"\\n               (ngModelChange)=\\\"nameChanged($event)\\\" />\\n\\n        <span class=\\\"result\\\">{{result}}</span>\\n    </div>\\n\\n</div>\\n\";\n\n/***/ }),\n\n/***/ 112:\n/***/ (function(module, exports) {\n\nmodule.exports = \"input[type=text] {\\n  display: inline-block;\\n  width: auto;\\n  margin: 0 10px 0 0; }\\n\\n.result {\\n  font-size: 20px;\\n  color: #7a1ea1; }\\n\"\n\n/***/ }),\n\n/***/ 113:\n/***/ (function(module, exports) {\n\nmodule.exports = \"div {\\n  background: #3e2280;\\n  color: #fff; }\\n\\na {\\n  color: #ff73a3; }\\n\"\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"__extends\"] = __extends;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__assign\", function() { return __assign; });\n/* harmony export (immutable) */ __webpack_exports__[\"__rest\"] = __rest;\n/* harmony export (immutable) */ __webpack_exports__[\"__decorate\"] = __decorate;\n/* harmony export (immutable) */ __webpack_exports__[\"__param\"] = __param;\n/* harmony export (immutable) */ __webpack_exports__[\"__metadata\"] = __metadata;\n/* harmony export (immutable) */ __webpack_exports__[\"__awaiter\"] = __awaiter;\n/* harmony export (immutable) */ __webpack_exports__[\"__generator\"] = __generator;\n/* harmony export (immutable) */ __webpack_exports__[\"__exportStar\"] = __exportStar;\n/* harmony export (immutable) */ __webpack_exports__[\"__values\"] = __values;\n/* harmony export (immutable) */ __webpack_exports__[\"__read\"] = __read;\n/* harmony export (immutable) */ __webpack_exports__[\"__spread\"] = __spread;\n/* harmony export (immutable) */ __webpack_exports__[\"__await\"] = __await;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncGenerator\"] = __asyncGenerator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncDelegator\"] = __asyncDelegator;\n/* harmony export (immutable) */ __webpack_exports__[\"__asyncValues\"] = __asyncValues;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n/***/ }),\n\n/***/ 121:\n/***/ (function(module, exports) {\n\n/**\n * material-design-lite - Material Design Components in CSS, JS and HTML\n * @version v1.3.0\n * @license Apache-2.0\n * @copyright 2015 Google, Inc.\n * @link https://github.com/google/material-design-lite\n */\n!function(){\"use strict\";function e(e,t){if(e){if(t.element_.classList.contains(t.CssClasses_.MDL_JS_RIPPLE_EFFECT)){var s=document.createElement(\"span\");s.classList.add(t.CssClasses_.MDL_RIPPLE_CONTAINER),s.classList.add(t.CssClasses_.MDL_JS_RIPPLE_EFFECT);var i=document.createElement(\"span\");i.classList.add(t.CssClasses_.MDL_RIPPLE),s.appendChild(i),e.appendChild(s)}e.addEventListener(\"click\",function(s){if(\"#\"===e.getAttribute(\"href\").charAt(0)){s.preventDefault();var i=e.href.split(\"#\")[1],n=t.element_.querySelector(\"#\"+i);t.resetTabState_(),t.resetPanelState_(),e.classList.add(t.CssClasses_.ACTIVE_CLASS),n.classList.add(t.CssClasses_.ACTIVE_CLASS)}})}}function t(e,t,s,i){function n(){var n=e.href.split(\"#\")[1],a=i.content_.querySelector(\"#\"+n);i.resetTabState_(t),i.resetPanelState_(s),e.classList.add(i.CssClasses_.IS_ACTIVE),a.classList.add(i.CssClasses_.IS_ACTIVE)}if(i.tabBar_.classList.contains(i.CssClasses_.JS_RIPPLE_EFFECT)){var a=document.createElement(\"span\");a.classList.add(i.CssClasses_.RIPPLE_CONTAINER),a.classList.add(i.CssClasses_.JS_RIPPLE_EFFECT);var l=document.createElement(\"span\");l.classList.add(i.CssClasses_.RIPPLE),a.appendChild(l),e.appendChild(a)}i.tabBar_.classList.contains(i.CssClasses_.TAB_MANUAL_SWITCH)||e.addEventListener(\"click\",function(t){\"#\"===e.getAttribute(\"href\").charAt(0)&&(t.preventDefault(),n())}),e.show=n}var s={upgradeDom:function(e,t){},upgradeElement:function(e,t){},upgradeElements:function(e){},upgradeAllRegistered:function(){},registerUpgradedCallback:function(e,t){},register:function(e){},downgradeElements:function(e){}};s=function(){function e(e,t){for(var s=0;s<c.length;s++)if(c[s].className===e)return\"undefined\"!=typeof t&&(c[s]=t),c[s];return!1}function t(e){var t=e.getAttribute(\"data-upgraded\");return null===t?[\"\"]:t.split(\",\")}function s(e,s){var i=t(e);return i.indexOf(s)!==-1}function i(e,t,s){if(\"CustomEvent\"in window&&\"function\"==typeof window.CustomEvent)return new CustomEvent(e,{bubbles:t,cancelable:s});var i=document.createEvent(\"Events\");return i.initEvent(e,t,s),i}function n(t,s){if(\"undefined\"==typeof t&&\"undefined\"==typeof s)for(var i=0;i<c.length;i++)n(c[i].className,c[i].cssClass);else{var l=t;if(\"undefined\"==typeof s){var o=e(l);o&&(s=o.cssClass)}for(var r=document.querySelectorAll(\".\"+s),_=0;_<r.length;_++)a(r[_],l)}}function a(n,a){if(!(\"object\"==typeof n&&n instanceof Element))throw new Error(\"Invalid argument provided to upgrade MDL element.\");var l=i(\"mdl-componentupgrading\",!0,!0);if(n.dispatchEvent(l),!l.defaultPrevented){var o=t(n),r=[];if(a)s(n,a)||r.push(e(a));else{var _=n.classList;c.forEach(function(e){_.contains(e.cssClass)&&r.indexOf(e)===-1&&!s(n,e.className)&&r.push(e)})}for(var d,h=0,u=r.length;h<u;h++){if(d=r[h],!d)throw new Error(\"Unable to find a registered component for the given class.\");o.push(d.className),n.setAttribute(\"data-upgraded\",o.join(\",\"));var E=new d.classConstructor(n);E[C]=d,p.push(E);for(var m=0,L=d.callbacks.length;m<L;m++)d.callbacks[m](n);d.widget&&(n[d.className]=E);var I=i(\"mdl-componentupgraded\",!0,!1);n.dispatchEvent(I)}}}function l(e){Array.isArray(e)||(e=e instanceof Element?[e]:Array.prototype.slice.call(e));for(var t,s=0,i=e.length;s<i;s++)t=e[s],t instanceof HTMLElement&&(a(t),t.children.length>0&&l(t.children))}function o(t){var s=\"undefined\"==typeof t.widget&&\"undefined\"==typeof t.widget,i=!0;s||(i=t.widget||t.widget);var n={classConstructor:t.constructor||t.constructor,className:t.classAsString||t.classAsString,cssClass:t.cssClass||t.cssClass,widget:i,callbacks:[]};if(c.forEach(function(e){if(e.cssClass===n.cssClass)throw new Error(\"The provided cssClass has already been registered: \"+e.cssClass);if(e.className===n.className)throw new Error(\"The provided className has already been registered\")}),t.constructor.prototype.hasOwnProperty(C))throw new Error(\"MDL component classes must not have \"+C+\" defined as a property.\");var a=e(t.classAsString,n);a||c.push(n)}function r(t,s){var i=e(t);i&&i.callbacks.push(s)}function _(){for(var e=0;e<c.length;e++)n(c[e].className)}function d(e){if(e){var t=p.indexOf(e);p.splice(t,1);var s=e.element_.getAttribute(\"data-upgraded\").split(\",\"),n=s.indexOf(e[C].classAsString);s.splice(n,1),e.element_.setAttribute(\"data-upgraded\",s.join(\",\"));var a=i(\"mdl-componentdowngraded\",!0,!1);e.element_.dispatchEvent(a)}}function h(e){var t=function(e){p.filter(function(t){return t.element_===e}).forEach(d)};if(e instanceof Array||e instanceof NodeList)for(var s=0;s<e.length;s++)t(e[s]);else{if(!(e instanceof Node))throw new Error(\"Invalid argument provided to downgrade MDL nodes.\");t(e)}}var c=[],p=[],C=\"mdlComponentConfigInternal_\";return{upgradeDom:n,upgradeElement:a,upgradeElements:l,upgradeAllRegistered:_,registerUpgradedCallback:r,register:o,downgradeElements:h}}(),s.ComponentConfigPublic,s.ComponentConfig,s.Component,s.upgradeDom=s.upgradeDom,s.upgradeElement=s.upgradeElement,s.upgradeElements=s.upgradeElements,s.upgradeAllRegistered=s.upgradeAllRegistered,s.registerUpgradedCallback=s.registerUpgradedCallback,s.register=s.register,s.downgradeElements=s.downgradeElements,window.componentHandler=s,window.componentHandler=s,window.addEventListener(\"load\",function(){\"classList\"in document.createElement(\"div\")&&\"querySelector\"in document&&\"addEventListener\"in window&&Array.prototype.forEach?(document.documentElement.classList.add(\"mdl-js\"),s.upgradeAllRegistered()):(s.upgradeElement=function(){},s.register=function(){})}),Date.now||(Date.now=function(){return(new Date).getTime()},Date.now=Date.now);for(var i=[\"webkit\",\"moz\"],n=0;n<i.length&&!window.requestAnimationFrame;++n){var a=i[n];window.requestAnimationFrame=window[a+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[a+\"CancelAnimationFrame\"]||window[a+\"CancelRequestAnimationFrame\"],window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var l=0;window.requestAnimationFrame=function(e){var t=Date.now(),s=Math.max(l+16,t);return setTimeout(function(){e(l=s)},s-t)},window.cancelAnimationFrame=clearTimeout,window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}var o=function(e){this.element_=e,this.init()};window.MaterialButton=o,o.prototype.Constant_={},o.prototype.CssClasses_={RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_CONTAINER:\"mdl-button__ripple-container\",RIPPLE:\"mdl-ripple\"},o.prototype.blurHandler_=function(e){e&&this.element_.blur()},o.prototype.disable=function(){this.element_.disabled=!0},o.prototype.disable=o.prototype.disable,o.prototype.enable=function(){this.element_.disabled=!1},o.prototype.enable=o.prototype.enable,o.prototype.init=function(){if(this.element_){if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleElement_=document.createElement(\"span\"),this.rippleElement_.classList.add(this.CssClasses_.RIPPLE),e.appendChild(this.rippleElement_),this.boundRippleBlurHandler=this.blurHandler_.bind(this),this.rippleElement_.addEventListener(\"mouseup\",this.boundRippleBlurHandler),this.element_.appendChild(e)}this.boundButtonBlurHandler=this.blurHandler_.bind(this),this.element_.addEventListener(\"mouseup\",this.boundButtonBlurHandler),this.element_.addEventListener(\"mouseleave\",this.boundButtonBlurHandler)}},s.register({constructor:o,classAsString:\"MaterialButton\",cssClass:\"mdl-js-button\",widget:!0});var r=function(e){this.element_=e,this.init()};window.MaterialCheckbox=r,r.prototype.Constant_={TINY_TIMEOUT:.001},r.prototype.CssClasses_={INPUT:\"mdl-checkbox__input\",BOX_OUTLINE:\"mdl-checkbox__box-outline\",FOCUS_HELPER:\"mdl-checkbox__focus-helper\",TICK_OUTLINE:\"mdl-checkbox__tick-outline\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-checkbox__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\",IS_UPGRADED:\"is-upgraded\"},r.prototype.onChange_=function(e){this.updateClasses_()},r.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},r.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},r.prototype.onMouseUp_=function(e){this.blur_()},r.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},r.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},r.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},r.prototype.checkToggleState=r.prototype.checkToggleState,r.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},r.prototype.checkDisabled=r.prototype.checkDisabled,r.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},r.prototype.disable=r.prototype.disable,r.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},r.prototype.enable=r.prototype.enable,r.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},r.prototype.check=r.prototype.check,r.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},r.prototype.uncheck=r.prototype.uncheck,r.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.BOX_OUTLINE);var t=document.createElement(\"span\");t.classList.add(this.CssClasses_.FOCUS_HELPER);var s=document.createElement(\"span\");if(s.classList.add(this.CssClasses_.TICK_OUTLINE),e.appendChild(s),this.element_.appendChild(t),this.element_.appendChild(e),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundRippleMouseUp);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(i),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundInputOnChange),this.inputElement_.addEventListener(\"focus\",this.boundInputOnFocus),this.inputElement_.addEventListener(\"blur\",this.boundInputOnBlur),this.element_.addEventListener(\"mouseup\",this.boundElementMouseUp),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:r,classAsString:\"MaterialCheckbox\",cssClass:\"mdl-js-checkbox\",widget:!0});var _=function(e){this.element_=e,this.init()};window.MaterialIconToggle=_,_.prototype.Constant_={TINY_TIMEOUT:.001},_.prototype.CssClasses_={INPUT:\"mdl-icon-toggle__input\",JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-icon-toggle__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\"},_.prototype.onChange_=function(e){this.updateClasses_()},_.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},_.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},_.prototype.onMouseUp_=function(e){this.blur_()},_.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},_.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},_.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},_.prototype.checkToggleState=_.prototype.checkToggleState,_.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},_.prototype.checkDisabled=_.prototype.checkDisabled,_.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},_.prototype.disable=_.prototype.disable,_.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},_.prototype.enable=_.prototype.enable,_.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},_.prototype.check=_.prototype.check,_.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},_.prototype.uncheck=_.prototype.uncheck,_.prototype.init=function(){if(this.element_){if(this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT),this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundRippleMouseUp);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(e),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementOnMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundInputOnChange),this.inputElement_.addEventListener(\"focus\",this.boundInputOnFocus),this.inputElement_.addEventListener(\"blur\",this.boundInputOnBlur),this.element_.addEventListener(\"mouseup\",this.boundElementOnMouseUp),this.updateClasses_(),this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:_,classAsString:\"MaterialIconToggle\",cssClass:\"mdl-js-icon-toggle\",widget:!0});var d=function(e){this.element_=e,this.init()};window.MaterialMenu=d,d.prototype.Constant_={TRANSITION_DURATION_SECONDS:.3,TRANSITION_DURATION_FRACTION:.8,CLOSE_TIMEOUT:150},d.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32,UP_ARROW:38,DOWN_ARROW:40},d.prototype.CssClasses_={CONTAINER:\"mdl-menu__container\",OUTLINE:\"mdl-menu__outline\",ITEM:\"mdl-menu__item\",ITEM_RIPPLE_CONTAINER:\"mdl-menu__item-ripple-container\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE:\"mdl-ripple\",IS_UPGRADED:\"is-upgraded\",IS_VISIBLE:\"is-visible\",IS_ANIMATING:\"is-animating\",BOTTOM_LEFT:\"mdl-menu--bottom-left\",BOTTOM_RIGHT:\"mdl-menu--bottom-right\",TOP_LEFT:\"mdl-menu--top-left\",TOP_RIGHT:\"mdl-menu--top-right\",UNALIGNED:\"mdl-menu--unaligned\"},d.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_),this.container_=e;var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.OUTLINE),this.outline_=t,e.insertBefore(t,this.element_);var s=this.element_.getAttribute(\"for\")||this.element_.getAttribute(\"data-mdl-for\"),i=null;s&&(i=document.getElementById(s),i&&(this.forElement_=i,i.addEventListener(\"click\",this.handleForClick_.bind(this)),i.addEventListener(\"keydown\",this.handleForKeyboardEvent_.bind(this))));var n=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM);this.boundItemKeydown_=this.handleItemKeyboardEvent_.bind(this),this.boundItemClick_=this.handleItemClick_.bind(this);for(var a=0;a<n.length;a++)n[a].addEventListener(\"click\",this.boundItemClick_),n[a].tabIndex=\"-1\",n[a].addEventListener(\"keydown\",this.boundItemKeydown_);if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT))for(this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),a=0;a<n.length;a++){var l=n[a],o=document.createElement(\"span\");o.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);var r=document.createElement(\"span\");r.classList.add(this.CssClasses_.RIPPLE),o.appendChild(r),l.appendChild(o),l.classList.add(this.CssClasses_.RIPPLE_EFFECT)}this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT),this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT),this.element_.classList.contains(this.CssClasses_.TOP_LEFT)&&this.outline_.classList.add(this.CssClasses_.TOP_LEFT),this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)&&this.outline_.classList.add(this.CssClasses_.TOP_RIGHT),this.element_.classList.contains(this.CssClasses_.UNALIGNED)&&this.outline_.classList.add(this.CssClasses_.UNALIGNED),e.classList.add(this.CssClasses_.IS_UPGRADED)}},d.prototype.handleForClick_=function(e){if(this.element_&&this.forElement_){var t=this.forElement_.getBoundingClientRect(),s=this.forElement_.parentElement.getBoundingClientRect();this.element_.classList.contains(this.CssClasses_.UNALIGNED)||(this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?(this.container_.style.right=s.right-t.right+\"px\",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+\"px\"):this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?(this.container_.style.left=this.forElement_.offsetLeft+\"px\",this.container_.style.bottom=s.bottom-t.top+\"px\"):this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(this.container_.style.right=s.right-t.right+\"px\",this.container_.style.bottom=s.bottom-t.top+\"px\"):(this.container_.style.left=this.forElement_.offsetLeft+\"px\",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+\"px\"))}this.toggle(e)},d.prototype.handleForKeyboardEvent_=function(e){if(this.element_&&this.container_&&this.forElement_){var t=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM+\":not([disabled])\");t&&t.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)&&(e.keyCode===this.Keycodes_.UP_ARROW?(e.preventDefault(),t[t.length-1].focus()):e.keyCode===this.Keycodes_.DOWN_ARROW&&(e.preventDefault(),t[0].focus()))}},d.prototype.handleItemKeyboardEvent_=function(e){if(this.element_&&this.container_){var t=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM+\":not([disabled])\");if(t&&t.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)){var s=Array.prototype.slice.call(t).indexOf(e.target);if(e.keyCode===this.Keycodes_.UP_ARROW)e.preventDefault(),s>0?t[s-1].focus():t[t.length-1].focus();else if(e.keyCode===this.Keycodes_.DOWN_ARROW)e.preventDefault(),t.length>s+1?t[s+1].focus():t[0].focus();else if(e.keyCode===this.Keycodes_.SPACE||e.keyCode===this.Keycodes_.ENTER){e.preventDefault();var i=new MouseEvent(\"mousedown\");e.target.dispatchEvent(i),i=new MouseEvent(\"mouseup\"),e.target.dispatchEvent(i),e.target.click()}else e.keyCode===this.Keycodes_.ESCAPE&&(e.preventDefault(),this.hide())}}},d.prototype.handleItemClick_=function(e){e.target.hasAttribute(\"disabled\")?e.stopPropagation():(this.closing_=!0,window.setTimeout(function(e){this.hide(),this.closing_=!1}.bind(this),this.Constant_.CLOSE_TIMEOUT))},d.prototype.applyClip_=function(e,t){this.element_.classList.contains(this.CssClasses_.UNALIGNED)?this.element_.style.clip=\"\":this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?this.element_.style.clip=\"rect(0 \"+t+\"px 0 \"+t+\"px)\":this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?this.element_.style.clip=\"rect(\"+e+\"px 0 \"+e+\"px 0)\":this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?this.element_.style.clip=\"rect(\"+e+\"px \"+t+\"px \"+e+\"px \"+t+\"px)\":this.element_.style.clip=\"\"},d.prototype.removeAnimationEndListener_=function(e){e.target.classList.remove(d.prototype.CssClasses_.IS_ANIMATING)},d.prototype.addAnimationEndListener_=function(){this.element_.addEventListener(\"transitionend\",this.removeAnimationEndListener_),this.element_.addEventListener(\"webkitTransitionEnd\",this.removeAnimationEndListener_)},d.prototype.show=function(e){if(this.element_&&this.container_&&this.outline_){var t=this.element_.getBoundingClientRect().height,s=this.element_.getBoundingClientRect().width;this.container_.style.width=s+\"px\",this.container_.style.height=t+\"px\",this.outline_.style.width=s+\"px\",this.outline_.style.height=t+\"px\";for(var i=this.Constant_.TRANSITION_DURATION_SECONDS*this.Constant_.TRANSITION_DURATION_FRACTION,n=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM),a=0;a<n.length;a++){var l=null;l=this.element_.classList.contains(this.CssClasses_.TOP_LEFT)||this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(t-n[a].offsetTop-n[a].offsetHeight)/t*i+\"s\":n[a].offsetTop/t*i+\"s\",n[a].style.transitionDelay=l}this.applyClip_(t,s),window.requestAnimationFrame(function(){this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.element_.style.clip=\"rect(0 \"+s+\"px \"+t+\"px 0)\",this.container_.classList.add(this.CssClasses_.IS_VISIBLE)}.bind(this)),this.addAnimationEndListener_();var o=function(t){t===e||this.closing_||t.target.parentNode===this.element_||(document.removeEventListener(\"click\",o),this.hide())}.bind(this);document.addEventListener(\"click\",o)}},d.prototype.show=d.prototype.show,d.prototype.hide=function(){if(this.element_&&this.container_&&this.outline_){for(var e=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM),t=0;t<e.length;t++)e[t].style.removeProperty(\"transition-delay\");var s=this.element_.getBoundingClientRect(),i=s.height,n=s.width;this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.applyClip_(i,n),this.container_.classList.remove(this.CssClasses_.IS_VISIBLE),this.addAnimationEndListener_()}},d.prototype.hide=d.prototype.hide,d.prototype.toggle=function(e){this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)?this.hide():this.show(e)},d.prototype.toggle=d.prototype.toggle,s.register({constructor:d,classAsString:\"MaterialMenu\",cssClass:\"mdl-js-menu\",widget:!0});var h=function(e){this.element_=e,this.init()};window.MaterialProgress=h,h.prototype.Constant_={},h.prototype.CssClasses_={INDETERMINATE_CLASS:\"mdl-progress__indeterminate\"},h.prototype.setProgress=function(e){this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)||(this.progressbar_.style.width=e+\"%\")},h.prototype.setProgress=h.prototype.setProgress,h.prototype.setBuffer=function(e){this.bufferbar_.style.width=e+\"%\",this.auxbar_.style.width=100-e+\"%\"},h.prototype.setBuffer=h.prototype.setBuffer,h.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.className=\"progressbar bar bar1\",this.element_.appendChild(e),this.progressbar_=e,e=document.createElement(\"div\"),e.className=\"bufferbar bar bar2\",this.element_.appendChild(e),this.bufferbar_=e,e=document.createElement(\"div\"),e.className=\"auxbar bar bar3\",this.element_.appendChild(e),this.auxbar_=e,this.progressbar_.style.width=\"0%\",this.bufferbar_.style.width=\"100%\",this.auxbar_.style.width=\"0%\",this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:h,classAsString:\"MaterialProgress\",cssClass:\"mdl-js-progress\",widget:!0});var c=function(e){this.element_=e,this.init()};window.MaterialRadio=c,c.prototype.Constant_={TINY_TIMEOUT:.001},c.prototype.CssClasses_={IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\",IS_UPGRADED:\"is-upgraded\",JS_RADIO:\"mdl-js-radio\",RADIO_BTN:\"mdl-radio__button\",RADIO_OUTER_CIRCLE:\"mdl-radio__outer-circle\",RADIO_INNER_CIRCLE:\"mdl-radio__inner-circle\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-radio__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\"},c.prototype.onChange_=function(e){for(var t=document.getElementsByClassName(this.CssClasses_.JS_RADIO),s=0;s<t.length;s++){var i=t[s].querySelector(\".\"+this.CssClasses_.RADIO_BTN);i.getAttribute(\"name\")===this.btnElement_.getAttribute(\"name\")&&\"undefined\"!=typeof t[s].MaterialRadio&&t[s].MaterialRadio.updateClasses_()}},c.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},c.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},c.prototype.onMouseup_=function(e){this.blur_()},c.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},c.prototype.blur_=function(){window.setTimeout(function(){this.btnElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},c.prototype.checkDisabled=function(){this.btnElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},c.prototype.checkDisabled=c.prototype.checkDisabled,c.prototype.checkToggleState=function(){this.btnElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},c.prototype.checkToggleState=c.prototype.checkToggleState,c.prototype.disable=function(){this.btnElement_.disabled=!0,this.updateClasses_()},c.prototype.disable=c.prototype.disable,c.prototype.enable=function(){this.btnElement_.disabled=!1,this.updateClasses_()},c.prototype.enable=c.prototype.enable,c.prototype.check=function(){this.btnElement_.checked=!0,this.onChange_(null)},c.prototype.check=c.prototype.check,c.prototype.uncheck=function(){this.btnElement_.checked=!1,this.onChange_(null)},c.prototype.uncheck=c.prototype.uncheck,c.prototype.init=function(){if(this.element_){this.btnElement_=this.element_.querySelector(\".\"+this.CssClasses_.RADIO_BTN),this.boundChangeHandler_=this.onChange_.bind(this),this.boundFocusHandler_=this.onChange_.bind(this),this.boundBlurHandler_=this.onBlur_.bind(this),this.boundMouseUpHandler_=this.onMouseup_.bind(this);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);var t=document.createElement(\"span\");t.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE),this.element_.appendChild(e),this.element_.appendChild(t);var s;if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),s=document.createElement(\"span\"),s.classList.add(this.CssClasses_.RIPPLE_CONTAINER),s.classList.add(this.CssClasses_.RIPPLE_EFFECT),s.classList.add(this.CssClasses_.RIPPLE_CENTER),s.addEventListener(\"mouseup\",this.boundMouseUpHandler_);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),s.appendChild(i),this.element_.appendChild(s)}this.btnElement_.addEventListener(\"change\",this.boundChangeHandler_),this.btnElement_.addEventListener(\"focus\",this.boundFocusHandler_),this.btnElement_.addEventListener(\"blur\",this.boundBlurHandler_),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler_),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:c,classAsString:\"MaterialRadio\",cssClass:\"mdl-js-radio\",widget:!0});var p=function(e){this.element_=e,this.isIE_=window.navigator.msPointerEnabled,this.init()};window.MaterialSlider=p,p.prototype.Constant_={},p.prototype.CssClasses_={IE_CONTAINER:\"mdl-slider__ie-container\",SLIDER_CONTAINER:\"mdl-slider__container\",BACKGROUND_FLEX:\"mdl-slider__background-flex\",BACKGROUND_LOWER:\"mdl-slider__background-lower\",BACKGROUND_UPPER:\"mdl-slider__background-upper\",IS_LOWEST_VALUE:\"is-lowest-value\",IS_UPGRADED:\"is-upgraded\"},p.prototype.onInput_=function(e){this.updateValueStyles_()},p.prototype.onChange_=function(e){this.updateValueStyles_()},p.prototype.onMouseUp_=function(e){e.target.blur()},p.prototype.onContainerMouseDown_=function(e){if(e.target===this.element_.parentElement){e.preventDefault();var t=new MouseEvent(\"mousedown\",{target:e.target,buttons:e.buttons,clientX:e.clientX,clientY:this.element_.getBoundingClientRect().y});this.element_.dispatchEvent(t)}},p.prototype.updateValueStyles_=function(){var e=(this.element_.value-this.element_.min)/(this.element_.max-this.element_.min);0===e?this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE):this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE),this.isIE_||(this.backgroundLower_.style.flex=e,this.backgroundLower_.style.webkitFlex=e,this.backgroundUpper_.style.flex=1-e,this.backgroundUpper_.style.webkitFlex=1-e)},p.prototype.disable=function(){this.element_.disabled=!0},p.prototype.disable=p.prototype.disable,p.prototype.enable=function(){this.element_.disabled=!1},p.prototype.enable=p.prototype.enable,p.prototype.change=function(e){\"undefined\"!=typeof e&&(this.element_.value=e),this.updateValueStyles_()},p.prototype.change=p.prototype.change,p.prototype.init=function(){if(this.element_){if(this.isIE_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.IE_CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_)}else{var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.SLIDER_CONTAINER),this.element_.parentElement.insertBefore(t,this.element_),this.element_.parentElement.removeChild(this.element_),t.appendChild(this.element_);var s=document.createElement(\"div\");s.classList.add(this.CssClasses_.BACKGROUND_FLEX),t.appendChild(s),this.backgroundLower_=document.createElement(\"div\"),this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER),s.appendChild(this.backgroundLower_),this.backgroundUpper_=document.createElement(\"div\"),this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER),s.appendChild(this.backgroundUpper_)}this.boundInputHandler=this.onInput_.bind(this),this.boundChangeHandler=this.onChange_.bind(this),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.boundContainerMouseDownHandler=this.onContainerMouseDown_.bind(this),this.element_.addEventListener(\"input\",this.boundInputHandler),this.element_.addEventListener(\"change\",this.boundChangeHandler),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler),this.element_.parentElement.addEventListener(\"mousedown\",this.boundContainerMouseDownHandler),this.updateValueStyles_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:p,classAsString:\"MaterialSlider\",cssClass:\"mdl-js-slider\",widget:!0});var C=function(e){if(this.element_=e,this.textElement_=this.element_.querySelector(\".\"+this.cssClasses_.MESSAGE),this.actionElement_=this.element_.querySelector(\".\"+this.cssClasses_.ACTION),!this.textElement_)throw new Error(\"There must be a message element for a snackbar.\");if(!this.actionElement_)throw new Error(\"There must be an action element for a snackbar.\");this.active=!1,this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.queuedNotifications_=[],this.setActionHidden_(!0)};window.MaterialSnackbar=C,C.prototype.Constant_={ANIMATION_LENGTH:250},C.prototype.cssClasses_={SNACKBAR:\"mdl-snackbar\",MESSAGE:\"mdl-snackbar__text\",ACTION:\"mdl-snackbar__action\",ACTIVE:\"mdl-snackbar--active\"},C.prototype.displaySnackbar_=function(){this.element_.setAttribute(\"aria-hidden\",\"true\"),\nthis.actionHandler_&&(this.actionElement_.textContent=this.actionText_,this.actionElement_.addEventListener(\"click\",this.actionHandler_),this.setActionHidden_(!1)),this.textElement_.textContent=this.message_,this.element_.classList.add(this.cssClasses_.ACTIVE),this.element_.setAttribute(\"aria-hidden\",\"false\"),setTimeout(this.cleanup_.bind(this),this.timeout_)},C.prototype.showSnackbar=function(e){if(void 0===e)throw new Error(\"Please provide a data object with at least a message to display.\");if(void 0===e.message)throw new Error(\"Please provide a message to be displayed.\");if(e.actionHandler&&!e.actionText)throw new Error(\"Please provide action text with the handler.\");this.active?this.queuedNotifications_.push(e):(this.active=!0,this.message_=e.message,e.timeout?this.timeout_=e.timeout:this.timeout_=2750,e.actionHandler&&(this.actionHandler_=e.actionHandler),e.actionText&&(this.actionText_=e.actionText),this.displaySnackbar_())},C.prototype.showSnackbar=C.prototype.showSnackbar,C.prototype.checkQueue_=function(){this.queuedNotifications_.length>0&&this.showSnackbar(this.queuedNotifications_.shift())},C.prototype.cleanup_=function(){this.element_.classList.remove(this.cssClasses_.ACTIVE),setTimeout(function(){this.element_.setAttribute(\"aria-hidden\",\"true\"),this.textElement_.textContent=\"\",Boolean(this.actionElement_.getAttribute(\"aria-hidden\"))||(this.setActionHidden_(!0),this.actionElement_.textContent=\"\",this.actionElement_.removeEventListener(\"click\",this.actionHandler_)),this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.active=!1,this.checkQueue_()}.bind(this),this.Constant_.ANIMATION_LENGTH)},C.prototype.setActionHidden_=function(e){e?this.actionElement_.setAttribute(\"aria-hidden\",\"true\"):this.actionElement_.removeAttribute(\"aria-hidden\")},s.register({constructor:C,classAsString:\"MaterialSnackbar\",cssClass:\"mdl-js-snackbar\",widget:!0});var u=function(e){this.element_=e,this.init()};window.MaterialSpinner=u,u.prototype.Constant_={MDL_SPINNER_LAYER_COUNT:4},u.prototype.CssClasses_={MDL_SPINNER_LAYER:\"mdl-spinner__layer\",MDL_SPINNER_CIRCLE_CLIPPER:\"mdl-spinner__circle-clipper\",MDL_SPINNER_CIRCLE:\"mdl-spinner__circle\",MDL_SPINNER_GAP_PATCH:\"mdl-spinner__gap-patch\",MDL_SPINNER_LEFT:\"mdl-spinner__left\",MDL_SPINNER_RIGHT:\"mdl-spinner__right\"},u.prototype.createLayer=function(e){var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER),t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER+\"-\"+e);var s=document.createElement(\"div\");s.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),s.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);var i=document.createElement(\"div\");i.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);var n=document.createElement(\"div\");n.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),n.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);for(var a=[s,i,n],l=0;l<a.length;l++){var o=document.createElement(\"div\");o.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE),a[l].appendChild(o)}t.appendChild(s),t.appendChild(i),t.appendChild(n),this.element_.appendChild(t)},u.prototype.createLayer=u.prototype.createLayer,u.prototype.stop=function(){this.element_.classList.remove(\"is-active\")},u.prototype.stop=u.prototype.stop,u.prototype.start=function(){this.element_.classList.add(\"is-active\")},u.prototype.start=u.prototype.start,u.prototype.init=function(){if(this.element_){for(var e=1;e<=this.Constant_.MDL_SPINNER_LAYER_COUNT;e++)this.createLayer(e);this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:u,classAsString:\"MaterialSpinner\",cssClass:\"mdl-js-spinner\",widget:!0});var E=function(e){this.element_=e,this.init()};window.MaterialSwitch=E,E.prototype.Constant_={TINY_TIMEOUT:.001},E.prototype.CssClasses_={INPUT:\"mdl-switch__input\",TRACK:\"mdl-switch__track\",THUMB:\"mdl-switch__thumb\",FOCUS_HELPER:\"mdl-switch__focus-helper\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-switch__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\"},E.prototype.onChange_=function(e){this.updateClasses_()},E.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},E.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},E.prototype.onMouseUp_=function(e){this.blur_()},E.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},E.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},E.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},E.prototype.checkDisabled=E.prototype.checkDisabled,E.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},E.prototype.checkToggleState=E.prototype.checkToggleState,E.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},E.prototype.disable=E.prototype.disable,E.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},E.prototype.enable=E.prototype.enable,E.prototype.on=function(){this.inputElement_.checked=!0,this.updateClasses_()},E.prototype.on=E.prototype.on,E.prototype.off=function(){this.inputElement_.checked=!1,this.updateClasses_()},E.prototype.off=E.prototype.off,E.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT);var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.TRACK);var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.THUMB);var s=document.createElement(\"span\");if(s.classList.add(this.CssClasses_.FOCUS_HELPER),t.appendChild(s),this.element_.appendChild(e),this.element_.appendChild(t),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundMouseUpHandler);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(i),this.element_.appendChild(this.rippleContainerElement_)}this.boundChangeHandler=this.onChange_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundChangeHandler),this.inputElement_.addEventListener(\"focus\",this.boundFocusHandler),this.inputElement_.addEventListener(\"blur\",this.boundBlurHandler),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler),this.updateClasses_(),this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:E,classAsString:\"MaterialSwitch\",cssClass:\"mdl-js-switch\",widget:!0});var m=function(e){this.element_=e,this.init()};window.MaterialTabs=m,m.prototype.Constant_={},m.prototype.CssClasses_={TAB_CLASS:\"mdl-tabs__tab\",PANEL_CLASS:\"mdl-tabs__panel\",ACTIVE_CLASS:\"is-active\",UPGRADED_CLASS:\"is-upgraded\",MDL_JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",MDL_RIPPLE_CONTAINER:\"mdl-tabs__ripple-container\",MDL_RIPPLE:\"mdl-ripple\",MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\"},m.prototype.initTabs_=function(){this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)&&this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS),this.tabs_=this.element_.querySelectorAll(\".\"+this.CssClasses_.TAB_CLASS),this.panels_=this.element_.querySelectorAll(\".\"+this.CssClasses_.PANEL_CLASS);for(var t=0;t<this.tabs_.length;t++)new e(this.tabs_[t],this);this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS)},m.prototype.resetTabState_=function(){for(var e=0;e<this.tabs_.length;e++)this.tabs_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS)},m.prototype.resetPanelState_=function(){for(var e=0;e<this.panels_.length;e++)this.panels_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS)},m.prototype.init=function(){this.element_&&this.initTabs_()},s.register({constructor:m,classAsString:\"MaterialTabs\",cssClass:\"mdl-js-tabs\"});var L=function(e){this.element_=e,this.maxRows=this.Constant_.NO_MAX_ROWS,this.init()};window.MaterialTextfield=L,L.prototype.Constant_={NO_MAX_ROWS:-1,MAX_ROWS_ATTRIBUTE:\"maxrows\"},L.prototype.CssClasses_={LABEL:\"mdl-textfield__label\",INPUT:\"mdl-textfield__input\",IS_DIRTY:\"is-dirty\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_INVALID:\"is-invalid\",IS_UPGRADED:\"is-upgraded\",HAS_PLACEHOLDER:\"has-placeholder\"},L.prototype.onKeyDown_=function(e){var t=e.target.value.split(\"\\n\").length;13===e.keyCode&&t>=this.maxRows&&e.preventDefault()},L.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},L.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},L.prototype.onReset_=function(e){this.updateClasses_()},L.prototype.updateClasses_=function(){this.checkDisabled(),this.checkValidity(),this.checkDirty(),this.checkFocus()},L.prototype.checkDisabled=function(){this.input_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},L.prototype.checkDisabled=L.prototype.checkDisabled,L.prototype.checkFocus=function(){Boolean(this.element_.querySelector(\":focus\"))?this.element_.classList.add(this.CssClasses_.IS_FOCUSED):this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},L.prototype.checkFocus=L.prototype.checkFocus,L.prototype.checkValidity=function(){this.input_.validity&&(this.input_.validity.valid?this.element_.classList.remove(this.CssClasses_.IS_INVALID):this.element_.classList.add(this.CssClasses_.IS_INVALID))},L.prototype.checkValidity=L.prototype.checkValidity,L.prototype.checkDirty=function(){this.input_.value&&this.input_.value.length>0?this.element_.classList.add(this.CssClasses_.IS_DIRTY):this.element_.classList.remove(this.CssClasses_.IS_DIRTY)},L.prototype.checkDirty=L.prototype.checkDirty,L.prototype.disable=function(){this.input_.disabled=!0,this.updateClasses_()},L.prototype.disable=L.prototype.disable,L.prototype.enable=function(){this.input_.disabled=!1,this.updateClasses_()},L.prototype.enable=L.prototype.enable,L.prototype.change=function(e){this.input_.value=e||\"\",this.updateClasses_()},L.prototype.change=L.prototype.change,L.prototype.init=function(){if(this.element_&&(this.label_=this.element_.querySelector(\".\"+this.CssClasses_.LABEL),this.input_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT),this.input_)){this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)&&(this.maxRows=parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE),10),isNaN(this.maxRows)&&(this.maxRows=this.Constant_.NO_MAX_ROWS)),this.input_.hasAttribute(\"placeholder\")&&this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER),this.boundUpdateClassesHandler=this.updateClasses_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.boundResetHandler=this.onReset_.bind(this),this.input_.addEventListener(\"input\",this.boundUpdateClassesHandler),this.input_.addEventListener(\"focus\",this.boundFocusHandler),this.input_.addEventListener(\"blur\",this.boundBlurHandler),this.input_.addEventListener(\"reset\",this.boundResetHandler),this.maxRows!==this.Constant_.NO_MAX_ROWS&&(this.boundKeyDownHandler=this.onKeyDown_.bind(this),this.input_.addEventListener(\"keydown\",this.boundKeyDownHandler));var e=this.element_.classList.contains(this.CssClasses_.IS_INVALID);this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED),e&&this.element_.classList.add(this.CssClasses_.IS_INVALID),this.input_.hasAttribute(\"autofocus\")&&(this.element_.focus(),this.checkFocus())}},s.register({constructor:L,classAsString:\"MaterialTextfield\",cssClass:\"mdl-js-textfield\",widget:!0});var I=function(e){this.element_=e,this.init()};window.MaterialTooltip=I,I.prototype.Constant_={},I.prototype.CssClasses_={IS_ACTIVE:\"is-active\",BOTTOM:\"mdl-tooltip--bottom\",LEFT:\"mdl-tooltip--left\",RIGHT:\"mdl-tooltip--right\",TOP:\"mdl-tooltip--top\"},I.prototype.handleMouseEnter_=function(e){var t=e.target.getBoundingClientRect(),s=t.left+t.width/2,i=t.top+t.height/2,n=-1*(this.element_.offsetWidth/2),a=-1*(this.element_.offsetHeight/2);this.element_.classList.contains(this.CssClasses_.LEFT)||this.element_.classList.contains(this.CssClasses_.RIGHT)?(s=t.width/2,i+a<0?(this.element_.style.top=\"0\",this.element_.style.marginTop=\"0\"):(this.element_.style.top=i+\"px\",this.element_.style.marginTop=a+\"px\")):s+n<0?(this.element_.style.left=\"0\",this.element_.style.marginLeft=\"0\"):(this.element_.style.left=s+\"px\",this.element_.style.marginLeft=n+\"px\"),this.element_.classList.contains(this.CssClasses_.TOP)?this.element_.style.top=t.top-this.element_.offsetHeight-10+\"px\":this.element_.classList.contains(this.CssClasses_.RIGHT)?this.element_.style.left=t.left+t.width+10+\"px\":this.element_.classList.contains(this.CssClasses_.LEFT)?this.element_.style.left=t.left-this.element_.offsetWidth-10+\"px\":this.element_.style.top=t.top+t.height+10+\"px\",this.element_.classList.add(this.CssClasses_.IS_ACTIVE)},I.prototype.hideTooltip_=function(){this.element_.classList.remove(this.CssClasses_.IS_ACTIVE)},I.prototype.init=function(){if(this.element_){var e=this.element_.getAttribute(\"for\")||this.element_.getAttribute(\"data-mdl-for\");e&&(this.forElement_=document.getElementById(e)),this.forElement_&&(this.forElement_.hasAttribute(\"tabindex\")||this.forElement_.setAttribute(\"tabindex\",\"0\"),this.boundMouseEnterHandler=this.handleMouseEnter_.bind(this),this.boundMouseLeaveAndScrollHandler=this.hideTooltip_.bind(this),this.forElement_.addEventListener(\"mouseenter\",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener(\"touchend\",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener(\"mouseleave\",this.boundMouseLeaveAndScrollHandler,!1),window.addEventListener(\"scroll\",this.boundMouseLeaveAndScrollHandler,!0),window.addEventListener(\"touchstart\",this.boundMouseLeaveAndScrollHandler))}},s.register({constructor:I,classAsString:\"MaterialTooltip\",cssClass:\"mdl-tooltip\"});var f=function(e){this.element_=e,this.init()};window.MaterialLayout=f,f.prototype.Constant_={MAX_WIDTH:\"(max-width: 1024px)\",TAB_SCROLL_PIXELS:100,RESIZE_TIMEOUT:100,MENU_ICON:\"&#xE5D2;\",CHEVRON_LEFT:\"chevron_left\",CHEVRON_RIGHT:\"chevron_right\"},f.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32},f.prototype.Mode_={STANDARD:0,SEAMED:1,WATERFALL:2,SCROLL:3},f.prototype.CssClasses_={CONTAINER:\"mdl-layout__container\",HEADER:\"mdl-layout__header\",DRAWER:\"mdl-layout__drawer\",CONTENT:\"mdl-layout__content\",DRAWER_BTN:\"mdl-layout__drawer-button\",ICON:\"material-icons\",JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_CONTAINER:\"mdl-layout__tab-ripple-container\",RIPPLE:\"mdl-ripple\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",HEADER_SEAMED:\"mdl-layout__header--seamed\",HEADER_WATERFALL:\"mdl-layout__header--waterfall\",HEADER_SCROLL:\"mdl-layout__header--scroll\",FIXED_HEADER:\"mdl-layout--fixed-header\",OBFUSCATOR:\"mdl-layout__obfuscator\",TAB_BAR:\"mdl-layout__tab-bar\",TAB_CONTAINER:\"mdl-layout__tab-bar-container\",TAB:\"mdl-layout__tab\",TAB_BAR_BUTTON:\"mdl-layout__tab-bar-button\",TAB_BAR_LEFT_BUTTON:\"mdl-layout__tab-bar-left-button\",TAB_BAR_RIGHT_BUTTON:\"mdl-layout__tab-bar-right-button\",TAB_MANUAL_SWITCH:\"mdl-layout__tab-manual-switch\",PANEL:\"mdl-layout__tab-panel\",HAS_DRAWER:\"has-drawer\",HAS_TABS:\"has-tabs\",HAS_SCROLLING_HEADER:\"has-scrolling-header\",CASTING_SHADOW:\"is-casting-shadow\",IS_COMPACT:\"is-compact\",IS_SMALL_SCREEN:\"is-small-screen\",IS_DRAWER_OPEN:\"is-visible\",IS_ACTIVE:\"is-active\",IS_UPGRADED:\"is-upgraded\",IS_ANIMATING:\"is-animating\",ON_LARGE_SCREEN:\"mdl-layout--large-screen-only\",ON_SMALL_SCREEN:\"mdl-layout--small-screen-only\"},f.prototype.contentScrollHandler_=function(){if(!this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)){var e=!this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN)||this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);this.content_.scrollTop>0&&!this.header_.classList.contains(this.CssClasses_.IS_COMPACT)?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.header_.classList.add(this.CssClasses_.IS_COMPACT),e&&this.header_.classList.add(this.CssClasses_.IS_ANIMATING)):this.content_.scrollTop<=0&&this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.header_.classList.remove(this.CssClasses_.IS_COMPACT),e&&this.header_.classList.add(this.CssClasses_.IS_ANIMATING))}},f.prototype.keyboardEventHandler_=function(e){e.keyCode===this.Keycodes_.ESCAPE&&this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)&&this.toggleDrawer()},f.prototype.screenSizeHandler_=function(){this.screenSizeMediaQuery_.matches?this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN):(this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN),this.drawer_&&(this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN)))},f.prototype.drawerToggleHandler_=function(e){if(e&&\"keydown\"===e.type){if(e.keyCode!==this.Keycodes_.SPACE&&e.keyCode!==this.Keycodes_.ENTER)return;e.preventDefault()}this.toggleDrawer()},f.prototype.headerTransitionEndHandler_=function(){this.header_.classList.remove(this.CssClasses_.IS_ANIMATING)},f.prototype.headerClickHandler_=function(){this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.IS_COMPACT),this.header_.classList.add(this.CssClasses_.IS_ANIMATING))},f.prototype.resetTabState_=function(e){for(var t=0;t<e.length;t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE)},f.prototype.resetPanelState_=function(e){for(var t=0;t<e.length;t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE)},f.prototype.toggleDrawer=function(){var e=this.element_.querySelector(\".\"+this.CssClasses_.DRAWER_BTN);this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)?(this.drawer_.setAttribute(\"aria-hidden\",\"false\"),e.setAttribute(\"aria-expanded\",\"true\")):(this.drawer_.setAttribute(\"aria-hidden\",\"true\"),e.setAttribute(\"aria-expanded\",\"false\"))},f.prototype.toggleDrawer=f.prototype.toggleDrawer,f.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.CONTAINER);var s=this.element_.querySelector(\":focus\");this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_),s&&s.focus();for(var i=this.element_.childNodes,n=i.length,a=0;a<n;a++){var l=i[a];l.classList&&l.classList.contains(this.CssClasses_.HEADER)&&(this.header_=l),l.classList&&l.classList.contains(this.CssClasses_.DRAWER)&&(this.drawer_=l),l.classList&&l.classList.contains(this.CssClasses_.CONTENT)&&(this.content_=l)}window.addEventListener(\"pageshow\",function(e){e.persisted&&(this.element_.style.overflowY=\"hidden\",requestAnimationFrame(function(){this.element_.style.overflowY=\"\"}.bind(this)))}.bind(this),!1),this.header_&&(this.tabBar_=this.header_.querySelector(\".\"+this.CssClasses_.TAB_BAR));var o=this.Mode_.STANDARD;if(this.header_&&(this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)?o=this.Mode_.SEAMED:this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)?(o=this.Mode_.WATERFALL,this.header_.addEventListener(\"transitionend\",this.headerTransitionEndHandler_.bind(this)),this.header_.addEventListener(\"click\",this.headerClickHandler_.bind(this))):this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)&&(o=this.Mode_.SCROLL,e.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER)),o===this.Mode_.STANDARD?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW)):o===this.Mode_.SEAMED||o===this.Mode_.SCROLL?(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW)):o===this.Mode_.WATERFALL&&(this.content_.addEventListener(\"scroll\",this.contentScrollHandler_.bind(this)),this.contentScrollHandler_())),this.drawer_){var r=this.element_.querySelector(\".\"+this.CssClasses_.DRAWER_BTN);if(!r){r=document.createElement(\"div\"),r.setAttribute(\"aria-expanded\",\"false\"),r.setAttribute(\"role\",\"button\"),r.setAttribute(\"tabindex\",\"0\"),r.classList.add(this.CssClasses_.DRAWER_BTN);var _=document.createElement(\"i\");_.classList.add(this.CssClasses_.ICON),_.innerHTML=this.Constant_.MENU_ICON,r.appendChild(_)}this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)?r.classList.add(this.CssClasses_.ON_LARGE_SCREEN):this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)&&r.classList.add(this.CssClasses_.ON_SMALL_SCREEN),r.addEventListener(\"click\",this.drawerToggleHandler_.bind(this)),r.addEventListener(\"keydown\",this.drawerToggleHandler_.bind(this)),this.element_.classList.add(this.CssClasses_.HAS_DRAWER),this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)?this.header_.insertBefore(r,this.header_.firstChild):this.element_.insertBefore(r,this.content_);var d=document.createElement(\"div\");d.classList.add(this.CssClasses_.OBFUSCATOR),this.element_.appendChild(d),d.addEventListener(\"click\",this.drawerToggleHandler_.bind(this)),this.obfuscator_=d,this.drawer_.addEventListener(\"keydown\",this.keyboardEventHandler_.bind(this)),this.drawer_.setAttribute(\"aria-hidden\",\"true\")}if(this.screenSizeMediaQuery_=window.matchMedia(this.Constant_.MAX_WIDTH),this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this)),this.screenSizeHandler_(),this.header_&&this.tabBar_){this.element_.classList.add(this.CssClasses_.HAS_TABS);var h=document.createElement(\"div\");h.classList.add(this.CssClasses_.TAB_CONTAINER),this.header_.insertBefore(h,this.tabBar_),this.header_.removeChild(this.tabBar_);var c=document.createElement(\"div\");c.classList.add(this.CssClasses_.TAB_BAR_BUTTON),c.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);var p=document.createElement(\"i\");p.classList.add(this.CssClasses_.ICON),p.textContent=this.Constant_.CHEVRON_LEFT,c.appendChild(p),c.addEventListener(\"click\",function(){this.tabBar_.scrollLeft-=this.Constant_.TAB_SCROLL_PIXELS}.bind(this));var C=document.createElement(\"div\");C.classList.add(this.CssClasses_.TAB_BAR_BUTTON),C.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);var u=document.createElement(\"i\");u.classList.add(this.CssClasses_.ICON),u.textContent=this.Constant_.CHEVRON_RIGHT,C.appendChild(u),C.addEventListener(\"click\",function(){this.tabBar_.scrollLeft+=this.Constant_.TAB_SCROLL_PIXELS}.bind(this)),h.appendChild(c),h.appendChild(this.tabBar_),h.appendChild(C);var E=function(){this.tabBar_.scrollLeft>0?c.classList.add(this.CssClasses_.IS_ACTIVE):c.classList.remove(this.CssClasses_.IS_ACTIVE),this.tabBar_.scrollLeft<this.tabBar_.scrollWidth-this.tabBar_.offsetWidth?C.classList.add(this.CssClasses_.IS_ACTIVE):C.classList.remove(this.CssClasses_.IS_ACTIVE)}.bind(this);this.tabBar_.addEventListener(\"scroll\",E),E();var m=function(){this.resizeTimeoutId_&&clearTimeout(this.resizeTimeoutId_),this.resizeTimeoutId_=setTimeout(function(){E(),this.resizeTimeoutId_=null}.bind(this),this.Constant_.RESIZE_TIMEOUT)}.bind(this);window.addEventListener(\"resize\",m),this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)&&this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);for(var L=this.tabBar_.querySelectorAll(\".\"+this.CssClasses_.TAB),I=this.content_.querySelectorAll(\".\"+this.CssClasses_.PANEL),f=0;f<L.length;f++)new t(L[f],L,I,this)}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},window.MaterialLayoutTab=t,s.register({constructor:f,classAsString:\"MaterialLayout\",cssClass:\"mdl-js-layout\"});var b=function(e){this.element_=e,this.init()};window.MaterialDataTable=b,b.prototype.Constant_={},b.prototype.CssClasses_={DATA_TABLE:\"mdl-data-table\",SELECTABLE:\"mdl-data-table--selectable\",SELECT_ELEMENT:\"mdl-data-table__select\",IS_SELECTED:\"is-selected\",IS_UPGRADED:\"is-upgraded\"},b.prototype.selectRow_=function(e,t,s){return t?function(){e.checked?t.classList.add(this.CssClasses_.IS_SELECTED):t.classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):s?function(){var t,i;if(e.checked)for(t=0;t<s.length;t++)i=s[t].querySelector(\"td\").querySelector(\".mdl-checkbox\"),i.MaterialCheckbox.check(),s[t].classList.add(this.CssClasses_.IS_SELECTED);else for(t=0;t<s.length;t++)i=s[t].querySelector(\"td\").querySelector(\".mdl-checkbox\"),i.MaterialCheckbox.uncheck(),s[t].classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):void 0},b.prototype.createCheckbox_=function(e,t){var i=document.createElement(\"label\"),n=[\"mdl-checkbox\",\"mdl-js-checkbox\",\"mdl-js-ripple-effect\",this.CssClasses_.SELECT_ELEMENT];i.className=n.join(\" \");var a=document.createElement(\"input\");return a.type=\"checkbox\",a.classList.add(\"mdl-checkbox__input\"),e?(a.checked=e.classList.contains(this.CssClasses_.IS_SELECTED),a.addEventListener(\"change\",this.selectRow_(a,e))):t&&a.addEventListener(\"change\",this.selectRow_(a,null,t)),i.appendChild(a),s.upgradeElement(i,\"MaterialCheckbox\"),i},b.prototype.init=function(){if(this.element_){var e=this.element_.querySelector(\"th\"),t=Array.prototype.slice.call(this.element_.querySelectorAll(\"tbody tr\")),s=Array.prototype.slice.call(this.element_.querySelectorAll(\"tfoot tr\")),i=t.concat(s);if(this.element_.classList.contains(this.CssClasses_.SELECTABLE)){var n=document.createElement(\"th\"),a=this.createCheckbox_(null,i);n.appendChild(a),e.parentElement.insertBefore(n,e);for(var l=0;l<i.length;l++){var o=i[l].querySelector(\"td\");if(o){var r=document.createElement(\"td\");if(\"TBODY\"===i[l].parentNode.nodeName.toUpperCase()){var _=this.createCheckbox_(i[l]);r.appendChild(_)}i[l].insertBefore(r,o)}}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}}},s.register({constructor:b,classAsString:\"MaterialDataTable\",cssClass:\"mdl-js-data-table\"});var S=function(e){this.element_=e,this.init()};window.MaterialRipple=S,S.prototype.Constant_={INITIAL_SCALE:\"scale(0.0001, 0.0001)\",INITIAL_SIZE:\"1px\",INITIAL_OPACITY:\"0.4\",FINAL_OPACITY:\"0\",FINAL_SCALE:\"\"},S.prototype.CssClasses_={RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE_EFFECT_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE:\"mdl-ripple\",IS_ANIMATING:\"is-animating\",IS_VISIBLE:\"is-visible\"},S.prototype.downHandler_=function(e){if(!this.rippleElement_.style.width&&!this.rippleElement_.style.height){var t=this.element_.getBoundingClientRect();this.boundHeight=t.height,this.boundWidth=t.width,this.rippleSize_=2*Math.sqrt(t.width*t.width+t.height*t.height)+2,this.rippleElement_.style.width=this.rippleSize_+\"px\",this.rippleElement_.style.height=this.rippleSize_+\"px\"}if(this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE),\"mousedown\"===e.type&&this.ignoringMouseDown_)this.ignoringMouseDown_=!1;else{\"touchstart\"===e.type&&(this.ignoringMouseDown_=!0);var s=this.getFrameCount();if(s>0)return;this.setFrameCount(1);var i,n,a=e.currentTarget.getBoundingClientRect();if(0===e.clientX&&0===e.clientY)i=Math.round(a.width/2),n=Math.round(a.height/2);else{var l=void 0!==e.clientX?e.clientX:e.touches[0].clientX,o=void 0!==e.clientY?e.clientY:e.touches[0].clientY;i=Math.round(l-a.left),n=Math.round(o-a.top)}this.setRippleXY(i,n),this.setRippleStyles(!0),window.requestAnimationFrame(this.animFrameHandler.bind(this))}},S.prototype.upHandler_=function(e){e&&2!==e.detail&&window.setTimeout(function(){this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE)}.bind(this),0)},S.prototype.init=function(){if(this.element_){var e=this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)||(this.rippleElement_=this.element_.querySelector(\".\"+this.CssClasses_.RIPPLE),this.frameCount_=0,this.rippleSize_=0,this.x_=0,this.y_=0,this.ignoringMouseDown_=!1,this.boundDownHandler=this.downHandler_.bind(this),this.element_.addEventListener(\"mousedown\",this.boundDownHandler),this.element_.addEventListener(\"touchstart\",this.boundDownHandler),this.boundUpHandler=this.upHandler_.bind(this),this.element_.addEventListener(\"mouseup\",this.boundUpHandler),this.element_.addEventListener(\"mouseleave\",this.boundUpHandler),this.element_.addEventListener(\"touchend\",this.boundUpHandler),this.element_.addEventListener(\"blur\",this.boundUpHandler),this.getFrameCount=function(){return this.frameCount_},this.setFrameCount=function(e){this.frameCount_=e},this.getRippleElement=function(){return this.rippleElement_},this.setRippleXY=function(e,t){this.x_=e,this.y_=t},this.setRippleStyles=function(t){if(null!==this.rippleElement_){var s,i,n,a=\"translate(\"+this.x_+\"px, \"+this.y_+\"px)\";t?(i=this.Constant_.INITIAL_SCALE,n=this.Constant_.INITIAL_SIZE):(i=this.Constant_.FINAL_SCALE,n=this.rippleSize_+\"px\",e&&(a=\"translate(\"+this.boundWidth/2+\"px, \"+this.boundHeight/2+\"px)\")),s=\"translate(-50%, -50%) \"+a+i,this.rippleElement_.style.webkitTransform=s,this.rippleElement_.style.msTransform=s,this.rippleElement_.style.transform=s,t?this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING):this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING)}},this.animFrameHandler=function(){this.frameCount_-- >0?window.requestAnimationFrame(this.animFrameHandler.bind(this)):this.setRippleStyles(!1)})}},s.register({constructor:S,classAsString:\"MaterialRipple\",cssClass:\"mdl-js-ripple-effect\",widget:!1})}();\n\n\n/***/ }),\n\n/***/ 386:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(94);\n\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar platform_browser_1 = __webpack_require__(17);\r\nvar forms_1 = __webpack_require__(54);\r\nvar router_1 = __webpack_require__(19);\r\nvar home_1 = __webpack_require__(103);\r\nvar hello_1 = __webpack_require__(102);\r\nvar products_1 = __webpack_require__(104);\r\nvar technology_1 = __webpack_require__(105);\r\nexports.routes = [\r\n    {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full'\r\n    },\r\n    { path: 'home', component: home_1.HomeComponent, data: { title: 'Home', name: 'Angular4' } },\r\n    { path: 'products', component: products_1.ProductsComponent, data: { title: 'Products' } },\r\n    { path: 'technology', component: technology_1.TechnologyComponent, data: { title: 'Technology' } },\r\n    { path: '**', redirectTo: 'home' },\r\n];\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    return AppModule;\r\n}());\r\nAppModule = tslib_1.__decorate([\r\n    core_1.NgModule({\r\n        declarations: [\r\n            home_1.HomeComponent,\r\n            hello_1.HelloComponent,\r\n            products_1.ProductsComponent,\r\n            technology_1.TechnologyComponent\r\n        ],\r\n        imports: [\r\n            platform_browser_1.BrowserModule,\r\n            forms_1.FormsModule,\r\n            router_1.RouterModule.forRoot(exports.routes)\r\n        ]\r\n    })\r\n], AppModule);\r\nexports.AppModule = AppModule;\r\n\n\n/***/ }),\n\n/***/ 53:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar servicestack_client_1 = __webpack_require__(50);\r\nexports.client = new servicestack_client_1.JsonServiceClient(global.BaseUrl || '/');\r\nvar MDL = (function () {\r\n    function MDL() {\r\n    }\r\n    MDL.prototype.ngAfterViewInit = function () {\r\n        if (typeof componentHandler !== \"undefined\") {\r\n            componentHandler.upgradeDom();\r\n        }\r\n    };\r\n    return MDL;\r\n}());\r\nMDL = tslib_1.__decorate([\r\n    core_1.Directive({\r\n        selector: '[mdl]'\r\n    })\r\n], MDL);\r\nexports.MDL = MDL;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControlDirective\", function() { return AbstractControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractFormGroupDirective\", function() { return AbstractFormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxControlValueAccessor\", function() { return CheckboxControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ControlContainer\", function() { return ControlContainer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALUE_ACCESSOR\", function() { return NG_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMPOSITION_BUFFER_MODE\", function() { return COMPOSITION_BUFFER_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultValueAccessor\", function() { return DefaultValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControl\", function() { return NgControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatus\", function() { return NgControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgControlStatusGroup\", function() { return NgControlStatusGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgForm\", function() { return NgForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModel\", function() { return NgModel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgModelGroup\", function() { return NgModelGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadioControlValueAccessor\", function() { return RadioControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlDirective\", function() { return FormControlDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControlName\", function() { return FormControlName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupDirective\", function() { return FormGroupDirective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArrayName\", function() { return FormArrayName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroupName\", function() { return FormGroupName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NgSelectOption\", function() { return NgSelectOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectControlValueAccessor\", function() { return SelectControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectMultipleControlValueAccessor\", function() { return SelectMultipleControlValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CheckboxRequiredValidator\", function() { return CheckboxRequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmailValidator\", function() { return EmailValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MaxLengthValidator\", function() { return MaxLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MinLengthValidator\", function() { return MinLengthValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PatternValidator\", function() { return PatternValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequiredValidator\", function() { return RequiredValidator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormBuilder\", function() { return FormBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractControl\", function() { return AbstractControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormArray\", function() { return FormArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormControl\", function() { return FormControl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormGroup\", function() { return FormGroup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_ASYNC_VALIDATORS\", function() { return NG_ASYNC_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NG_VALIDATORS\", function() { return NG_VALIDATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Validators\", function() { return Validators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormsModule\", function() { return FormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactiveFormsModule\", function() { return ReactiveFormsModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵba\", function() { return InternalFormsSharedModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵz\", function() { return REACTIVE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵx\", function() { return SHARED_FORM_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵy\", function() { return TEMPLATE_DRIVEN_DIRECTIVES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵa\", function() { return CHECKBOX_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵb\", function() { return DEFAULT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵc\", function() { return AbstractControlStatus; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵd\", function() { return ngControlStatusHost; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵe\", function() { return formDirectiveProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵf\", function() { return formControlBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵg\", function() { return modelGroupProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbf\", function() { return NgNoValidate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbb\", function() { return NUMBER_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbc\", function() { return NumberValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵh\", function() { return RADIO_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵi\", function() { return RadioControlRegistry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbd\", function() { return RANGE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵbe\", function() { return RangeValueAccessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵj\", function() { return formControlBinding$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵk\", function() { return controlNameBinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵl\", function() { return formDirectiveProvider$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵn\", function() { return formArrayNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵm\", function() { return formGroupNameProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵo\", function() { return SELECT_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵq\", function() { return NgSelectMultipleOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵp\", function() { return SELECT_MULTIPLE_VALUE_ACCESSOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵs\", function() { return CHECKBOX_REQUIRED_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵt\", function() { return EMAIL_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵv\", function() { return MAX_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵu\", function() { return MIN_LENGTH_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵw\", function() { return PATTERN_VALIDATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ɵr\", function() { return REQUIRED_VALIDATOR; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_forkJoin__ = __webpack_require__(62);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_forkJoin__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_fromPromise__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_map__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__ = __webpack_require__(17);\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * @license Angular v4.0.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { throw new Error('unimplemented'); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.errors : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.disabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.enabled : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.statusChanges : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.control ? this.control.valueChanges : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (this.control)\n            this.control.reset(value);\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlDirective.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return this.control ? this.control.getError(errorCode, path) : null;\n    };\n    return AbstractControlDirective;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * \\@stable\n */\nvar ControlContainer = (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         * @return {?}\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (undefined && undefined.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * {\\@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * \\@stable\n */\nvar NG_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {\\@link NG_VALIDATORS} for more details.\n *\n * \\@stable\n */\nvar NG_ASYNC_VALIDATORS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('NgAsyncValidators');\nvar EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * \\@stable\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a non-empty value.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.required = function (control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    };\n    /**\n     * Validator that requires control value to be true.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.requiredTrue = function (control) {\n        return control.value === true ? null : { 'required': true };\n    };\n    /**\n     * Validator that performs email validation.\n     * @param {?} control\n     * @return {?}\n     */\n    Validators.email = function (control) {\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     * @param {?} minLength\n     * @return {?}\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     * @param {?} maxLength\n     * @return {?}\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            var /** @type {?} */ length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     * @param {?} pattern\n     * @return {?}\n     */\n    Validators.pattern = function (pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        var /** @type {?} */ regex;\n        var /** @type {?} */ regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = \"^\" + pattern + \"$\";\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return function (control) {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            var /** @type {?} */ value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    };\n    /**\n     * No-op validator.\n     * @param {?} c\n     * @return {?}\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * Compose multiple validators into a single function that returns the union\n     * of the individual error maps.\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.compose = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    Validators.composeAsync = function (validators) {\n        if (!validators)\n            return null;\n        var /** @type {?} */ presentValidators = validators.filter(isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_map__[\"map\"].call(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_forkJoin__[\"forkJoin\"])(observables), _mergeErrors);\n        };\n    };\n    return Validators;\n}());\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    var /** @type {?} */ obs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵisPromise\"])(r) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_rxjs_observable_fromPromise__[\"fromPromise\"])(r) : r;\n    if (!(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵisObservable\"])(obs))) {\n        throw new Error(\"Expected validator to return Promise or Observable.\");\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n        return errors != null ? __assign({}, res, errors) : res;\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n *\n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nvar NG_VALUE_ACCESSOR = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('NgValueAccessor');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return CheckboxControlValueAccessor; }),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar CheckboxControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return CheckboxControlValueAccessor;\n}());\nCheckboxControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return DefaultValueAccessor; }),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    var /** @type {?} */ userAgent = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__[\"ɵgetDOM\"])() ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__angular_platform_browser__[\"ɵgetDOM\"])().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nvar COMPOSITION_BUFFER_MODE = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n *\n *  \\@stable\n */\nvar DefaultValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    function DefaultValueAccessor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._handleInput = function (value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionStart = function () { this._composing = true; };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultValueAccessor.prototype._compositionEnd = function (value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    };\n    return DefaultValueAccessor;\n}());\nDefaultValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '_handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '_compositionStart()',\n                    '(compositionend)': '_compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nDefaultValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [COMPOSITION_BUFFER_MODE,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((validator)).validate) {\n        return function (c) { return ((validator)).validate(c); };\n    }\n    else {\n        return (validator);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NumberValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nvar NumberValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var /** @type {?} */ normalizedValue = value == null ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return NumberValueAccessor;\n}());\nNumberValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nNumberValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * \\@stable\n * @abstract\n */\nvar NgControl = (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        var _this = _super.apply(this, arguments) || this;\n        /**\n         * \\@internal\n         */\n        _this._parent = null;\n        _this.name = null;\n        _this.valueAccessor = null;\n        /**\n         * \\@internal\n         */\n        _this._rawValidators = [];\n        /**\n         * \\@internal\n         */\n        _this._rawAsyncValidators = [];\n        return _this;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return (unimplemented()); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @abstract\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n    return NgControl;\n}(AbstractControlDirective));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    };\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    };\n    return RadioControlRegistry;\n}());\nRadioControlRegistry.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nRadioControlRegistry.ctorParameters = function () { return []; };\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  \\@stable\n */\nvar RadioControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    /**\n     * @return {?}\n     */\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    return RadioControlValueAccessor;\n}());\nRadioControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRadioControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: RadioControlRegistry, },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injector\"], },\n]; };\nRadioControlValueAccessor.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'formControlName': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return RangeValueAccessor; }),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n *\n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nvar RangeValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function RangeValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    return RangeValueAccessor;\n}());\nRangeValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nRangeValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n *\n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n *\n * \\@howToUse\n *\n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar SelectControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var /** @type {?} */ id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        var /** @type {?} */ valueString = _buildValueString(id, value);\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = valueString;\n            fn(_this._getOptionValue(valueString));\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    };\n    return SelectControlValueAccessor;\n}());\nSelectControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nSelectControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@howToUse\n *\n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n *\n * \\@stable\n */\nvar NgSelectOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._setElementValue(value);\n            if (this._select)\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectOption;\n}());\nNgSelectOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: SelectControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] },] },\n]; };\nNgSelectOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return \"\" + value;\n    if (typeof value === 'string')\n        value = \"'\" + value + \"'\";\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return (id + \": \" + value).slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n *  ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * #### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@stable\n */\nvar SelectMultipleControlValueAccessor = (function () {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n        this._compareWith = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵlooseIdentical\"];\n    }\n    Object.defineProperty(SelectMultipleControlValueAccessor.prototype, \"compareWith\", {\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        set: function (fn) {\n            if (typeof fn !== 'function') {\n                throw new Error(\"compareWith must be a function, but received \" + JSON.stringify(fn));\n            }\n            this._compareWith = fn;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        var /** @type {?} */ optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var /** @type {?} */ selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var /** @type {?} */ options = _.selectedOptions;\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var /** @type {?} */ options = (_.options);\n                for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                    var /** @type {?} */ opt = options.item(i);\n                    if (opt.selected) {\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            _this.value = selected;\n            fn(selected);\n        };\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var /** @type {?} */ id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    };\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var /** @type {?} */ id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    };\n    return SelectMultipleControlValueAccessor;\n}());\nSelectMultipleControlValueAccessor.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nSelectMultipleControlValueAccessor.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n]; };\nSelectMultipleControlValueAccessor.propDecorators = {\n    'compareWith': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nvar NgSelectMultipleOption = (function () {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._select) {\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n    };\n    /**\n     * @return {?}\n     */\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    return NgSelectMultipleOption;\n}());\nNgSelectMultipleOption.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: 'option' },] },\n];\n/**\n * @nocollapse\n */\nNgSelectMultipleOption.ctorParameters = function () { return [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer\"], },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] },] },\n]; };\nNgSelectMultipleOption.propDecorators = {\n    'ngValue': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngValue',] },],\n    'value': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['value',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return parent.path.concat([name]);\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    // view -> model\n    dir.valueAccessor.registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    });\n    // touched\n    dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    if (dir.valueAccessor.setDisabledState) {\n        control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (((validator)).registerOnValidatorChange)\n            ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n    dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n    dir._rawValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach(function (validator) {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    var /** @type {?} */ messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n    }\n    else if (dir.path[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(message + \" \" + messageEnd);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    var /** @type {?} */ change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵlooseIdentical\"])(viewModel, change.currentValue);\n}\nvar BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    var /** @type {?} */ defaultAccessor;\n    var /** @type {?} */ builtinAccessor;\n    var /** @type {?} */ customAccessor;\n    valueAccessors.forEach(function (v) {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n *\n * \\@stable\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    };\n    /**\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {\\@link FormGroup} backing this binding.\n         * @return {?}\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {\\@link Form} to which this group belongs.\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(ControlContainer));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar AbstractControlStatus = (function () {\n    /**\n     * @param {?} cd\n     */\n    function AbstractControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.touched : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.valid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._cd.control ? this._cd.control.pending : false; },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractControlStatus;\n}());\nvar ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatus = (function (_super) {\n    __extends(NgControlStatus, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatus(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatus;\n}(AbstractControlStatus));\nNgControlStatus.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatus.ctorParameters = function () { return [\n    { type: NgControl, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] },] },\n]; };\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@stable\n */\nvar NgControlStatusGroup = (function (_super) {\n    __extends(NgControlStatusGroup, _super);\n    /**\n     * @param {?} cd\n     */\n    function NgControlStatusGroup(cd) {\n        return _super.call(this, cd) || this;\n    }\n    return NgControlStatusGroup;\n}(AbstractControlStatus));\nNgControlStatusGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] },\n];\n/**\n * @nocollapse\n */\nNgControlStatusGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nvar VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nvar INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nvar PENDING = 'PENDING';\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nvar DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = ((path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return ((path)).reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return v.controls[name] || null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator;\n}\n/**\n * @param {?} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * \\@stable\n * @abstract\n */\nvar AbstractControl = (function () {\n    /**\n     * @param {?} validator\n     * @param {?} asyncValidator\n     */\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = function () { };\n        this._pristine = true;\n        this._touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        /**\n         * The value of the control.\n         * @return {?}\n         */\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"parent\", {\n        /**\n         * The parent control.\n         * @return {?}\n         */\n        get: function () { return this._parent; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        /**\n         * The validation status of the control. There are four possible\n         * validation statuses:\n         *\n         * * **VALID**:  control has passed all validation checks\n         * * **INVALID**: control has failed at least one validation check\n         * * **PENDING**: control is in the midst of conducting a validation check\n         * * **DISABLED**: control is exempt from validation checks\n         *\n         * These statuses are mutually exclusive, so a control cannot be\n         * both valid AND invalid or invalid AND disabled.\n         * @return {?}\n         */\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        /**\n         * A control is `valid` when its `status === VALID`.\n         *\n         * In order to have this status, the control must have passed all its\n         * validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        /**\n         * A control is `invalid` when its `status === INVALID`.\n         *\n         * In order to have this status, the control must have failed\n         * at least one of its validation checks.\n         * @return {?}\n         */\n        get: function () { return this._status === INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        /**\n         * A control is `pending` when its `status === PENDING`.\n         *\n         * In order to have this status, the control must be in the\n         * middle of conducting a validation check.\n         * @return {?}\n         */\n        get: function () { return this._status == PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n        /**\n         * A control is `disabled` when its `status === DISABLED`.\n         *\n         * Disabled controls are exempt from validation checks and\n         * are not included in the aggregate value of their ancestor\n         * controls.\n         * @return {?}\n         */\n        get: function () { return this._status === DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n        /**\n         * A control is `enabled` as long as its `status !== DISABLED`.\n         *\n         * In other words, it has a status of `VALID`, `INVALID`, or\n         * `PENDING`.\n         * @return {?}\n         */\n        get: function () { return this._status !== DISABLED; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns any errors generated by failing validation. If there\n         * are no errors, it will return null.\n         * @return {?}\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        /**\n         * A control is `dirty` if the user has changed the value\n         * in the UI.\n         *\n         * Note that programmatic changes to a control's value will\n         * *not* mark it dirty.\n         * @return {?}\n         */\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        /**\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        /**\n         * A control is `untouched` if the user has not yet triggered\n         * a `blur` event on it.\n         * @return {?}\n         */\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        /**\n         * Emits an event every time the value of the control changes, in\n         * the UI or programmatically.\n         * @return {?}\n         */\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        /**\n         * Emits an event every time the validation status of the control\n         * is re-calculated.\n         * @return {?}\n         */\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this will overwrite any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * will overwrite any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    /**\n     * Marks the control as `touched`.\n     *\n     * This will also mark all direct ancestors as `touched` to maintain\n     * the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = true;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, it will also mark all children as `untouched`\n     * to maintain the model, and re-calculate the `touched` status of all parent\n     * controls.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsUntouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `dirty`.\n     *\n     * This will also mark all direct ancestors as `dirty` to maintain\n     * the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsDirty = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = false;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsDirty({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, it will also mark all children as `pristine`\n     * to maintain the model, and re-calculate the `pristine` status of all parent\n     * controls.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Marks the control as `pending`.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.markAsPending = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._status = PENDING;\n        if (this._parent && !onlySelf) {\n            this._parent.markAsPending({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * Disables the control. This means the control will be exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children will be disabled to maintain the model.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.disable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._status = DISABLED;\n        this._errors = null;\n        this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n        this._updateValue();\n        if (emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n    };\n    /**\n     * Enables the control. This means the control will be included in validation checks and\n     * the aggregate value of its parent. Its status is re-calculated based on its value and\n     * its validators.\n     *\n     * If the control has children, all children will be enabled.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.enable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._status = VALID;\n        this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        this._updateAncestors(onlySelf);\n        this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n    };\n    /**\n     * @param {?} onlySelf\n     * @return {?}\n     */\n    AbstractControl.prototype._updateAncestors = function (onlySelf) {\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity();\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * Re-calculates the value and validation status of the control.\n     *\n     * By default, it will also update the value and validity of its ancestors.\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype.updateValueAndValidity = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this._errors = this._runValidator();\n            this._status = this._calculateStatus();\n            if (this._status === VALID || this._status === PENDING) {\n                this._runAsyncValidator(emitEvent);\n            }\n        }\n        if (emitEvent !== false) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent && !onlySelf) {\n            this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTreeValidity = function (_a) {\n        var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n        this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._runValidator = function () {\n        return this.validator ? this.validator(this) : null;\n    };\n    /**\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (this.asyncValidator) {\n            this._status = PENDING;\n            var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe(function (errors) { return _this.setErrors(errors, { emitEvent: emitEvent }); });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run manually by the user, rather than automatically.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ### Example\n     *\n     * ```\n     * const login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.setValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} __1\n     * @return {?}\n     */\n    AbstractControl.prototype.setErrors = function (errors, _a) {\n        var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n        this._errors = errors;\n        this._updateControlsErrors(emitEvent !== false);\n    };\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * Paths can be passed in as an array or a string delimited by a dot.\n     *\n     * To get a control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns null or undefined.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        var /** @type {?} */ control = path ? this.get(path) : this;\n        return control && control._errors ? control._errors[errorCode] : null;\n    };\n    /**\n     * Returns true if the control with the given path has the error specified. Otherwise\n     * returns false.\n     *\n     * If no path is given, it checks for the error on the present control.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return !!this.getError(errorCode, path);\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        /**\n         * Retrieves the top-level ancestor of this control.\n         * @return {?}\n         */\n        get: function () {\n            var /** @type {?} */ x = this;\n            while (x._parent) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this._statusChanges = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n    };\n    /**\n     * @return {?}\n     */\n    AbstractControl.prototype._calculateStatus = function () {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this._errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status === status; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updatePristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = !this._anyControlsDirty();\n        if (this._parent && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?=} __0\n     * @return {?}\n     */\n    AbstractControl.prototype._updateTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = this._anyControlsTouched();\n        if (this._parent && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    AbstractControl.prototype._isBoxedValue = function (formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    };\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n    return AbstractControl;\n}());\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n *\n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n *\n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n *\n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n *\n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n *\n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n *\n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n *\n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormControl = (function (_super) {\n    __extends(FormControl, _super);\n    /**\n     * @param {?=} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormControl(formState, validator, asyncValidator) {\n        if (formState === void 0) { formState = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator)) || this;\n        /**\n         * \\@internal\n         */\n        _this._onChange = [];\n        _this._applyFormState(formState);\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        _this._initObservables();\n        return _this;\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. This defaults to false.\n     *\n     * If `emitEvent` is `true`, this\n     * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n     * to true (as it falls through to `updateValueAndValidity`).\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormControl.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n        this._value = value;\n        if (this._onChange.length && emitModelToViewChange !== false) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n        }\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl.setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n     * where it does behave differently.\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * Resets the form control. This means by default:\n     *\n     * * it is marked as `pristine`\n     * * it is marked as `untouched`\n     * * value is set to null\n     *\n     * You can also reset to a specific form state by passing through a standalone\n     * value or a form state object that contains both a value and a disabled state\n     * (these are the only two properties that cannot be calculated).\n     *\n     * Ex:\n     *\n     * ```ts\n     * this.control.reset('Nancy');\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * ```\n     *\n     * OR\n     *\n     * ```\n     * this.control.reset({value: 'Nancy', disabled: true});\n     *\n     * console.log(this.control.value);  // 'Nancy'\n     * console.log(this.control.status);  // 'DISABLED'\n     * ```\n     * @param {?=} formState\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormControl.prototype.reset = function (formState, _a) {\n        if (formState === void 0) { formState = null; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._applyFormState(formState);\n        this.markAsPristine({ onlySelf: onlySelf });\n        this.markAsUntouched({ onlySelf: onlySelf });\n        this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n    /**\n     * Register a listener for change events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormControl.prototype._clearChangeFns = function () {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = function () { };\n    };\n    /**\n     * Register a listener for disabled events.\n     * @param {?} fn\n     * @return {?}\n     */\n    FormControl.prototype.registerOnDisabledChange = function (fn) {\n        this._onDisabledChange.push(fn);\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    FormControl.prototype._applyFormState = function (formState) {\n        if (this._isBoxedValue(formState)) {\n            this._value = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this._value = formState;\n        }\n    };\n    return FormControl;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n *\n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Example\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormGroup = (function (_super) {\n    __extends(FormGroup, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormGroup(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, validator, asyncValidator) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update value or validity of the control, so for\n     * most cases you'll want to use {\\@link FormGroup.addControl} instead.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove a control from this group.\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} name\n     * @param {?} control\n     * @return {?}\n     */\n    FormGroup.prototype.setControl = function (name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(function () { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * It will return false for disabled controls. If you'd like to check for\n     * existence in the group only, use {\\@link AbstractControl.get} instead.\n     * @param {?} controlName\n     * @return {?}\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    };\n    /**\n     *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n     *  the structure of the group, with control names as keys.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.setValue({first: 'Nancy', last: 'Drew'});\n     *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(function (name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n     *  names as keys, and will do its best to match the values to the correct controls\n     *  in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const form = new FormGroup({\n     *     first: new FormControl(),\n     *     last: new FormControl()\n     *  });\n     *  console.log(form.value);   // {first: null, last: null}\n     *\n     *  form.patchValue({first: 'Nancy'});\n     *  console.log(form.value);   // {first: 'Nancy', last: null}\n     *\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        Object.keys(value).forEach(function (name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Resets the {\\@link FormGroup}. This means by default:\n     *\n     * * The group and all descendants are marked `pristine`\n     * * The group and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * can be a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.form.reset({first: 'name', last: 'last name'});\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormGroup.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = {}; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /**\n     * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the group.\n     * @return {?}\n     */\n    FormGroup.prototype.getRawValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new Error(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormGroup.prototype._forEachChild = function (cb) {\n        var _this = this;\n        Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) {\n            control.setParent(_this);\n            control._registerOnCollectionChange(_this._onCollectionChange);\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var /** @type {?} */ res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._reduceValue = function () {\n        var _this = this;\n        return this._reduceChildren({}, function (acc, control, name) {\n            if (control.enabled || _this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var /** @type {?} */ res = initValue;\n        this._forEachChild(function (control, name) { res = fn(res, control, name); });\n        return res;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroup.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n            var controlName = _a[_i];\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n *\n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n *\n * \\@howToUse\n *\n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n *\n * ### Example\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ### Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * * **npm package**: `\\@angular/forms`\n *\n * \\@stable\n */\nvar FormArray = (function (_super) {\n    __extends(FormArray, _super);\n    /**\n     * @param {?} controls\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     */\n    function FormArray(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var _this = _super.call(this, validator, asyncValidator) || this;\n        _this.controls = controls;\n        _this._initObservables();\n        _this._setUpControls();\n        _this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        return _this;\n    }\n    /**\n     * Get the {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {\\@link AbstractControl} at the end of the array.\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.insert = function (index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype.removeAt = function (index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    /**\n     * Replace an existing control.\n     * @param {?} index\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype.setControl = function (index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(function () { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         * @return {?}\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n     *  the structure of the control.\n     *\n     * This method performs strict checks, so it will throw an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.setValue(['Nancy', 'Drew']);\n     *  console.log(arr.value);   // ['Nancy', 'Drew']\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n     *  structure of the control, and will do its best to match the values to the correct\n     *  controls in the group.\n     *\n     *  It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     *  ### Example\n     *\n     *  ```\n     *  const arr = new FormArray([\n     *     new FormControl(),\n     *     new FormControl()\n     *  ]);\n     *  console.log(arr.value);   // [null, null]\n     *\n     *  arr.patchValue(['Nancy']);\n     *  console.log(arr.value);   // ['Nancy', null]\n     *  ```\n     * @param {?} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * Resets the {\\@link FormArray}. This means by default:\n     *\n     * * The array and all descendants are marked `pristine`\n     * * The array and all descendants are marked `untouched`\n     * * The value of all descendants will be null or null maps\n     *\n     * You can also reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state can be a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * ### Example\n     *\n     * ```ts\n     * this.arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * - OR -\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} __1\n     * @return {?}\n     */\n    FormArray.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = []; }\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * If you'd like to include all values regardless of disabled status, use this method.\n     * Otherwise, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    FormArray.prototype.getRawValue = function () {\n        return this.controls.map(function (control) {\n            return control instanceof FormControl ? control.value : ((control)).getRawValue();\n        });\n    };\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new Error(\"Cannot find form control at index \" + index);\n        }\n    };\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._updateValue = function () {\n        var _this = this;\n        this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n            .map(function (control) { return control.value; });\n    };\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return control.enabled && condition(control); });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._setUpControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { return _this._registerControl(control); });\n    };\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormArray.prototype._allControlsDisabled = function () {\n        for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    };\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    FormArray.prototype._registerControl = function (control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    };\n    return FormArray;\n}(AbstractControl));\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * \\@howToUse\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgForm = (function (_super) {\n    __extends(NgForm, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgForm(validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._submitted = false;\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        _this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        return _this;\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            dir._control = (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            var /** @type {?} */ group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ container = _this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n            ctrl.setValue(value);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    NgForm.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    NgForm.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    NgForm.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return path.length ? (this.form.get(path)) : this.form;\n    };\n    return NgForm;\n}(ControlContainer));\nNgForm.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgForm.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; index as i\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + FormErrorExamples.ngModelWithFormGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    /**\n     * @return {?}\n     */\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgModelGroup; })\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `FormsModule`\n *\n * \\@stable\n */\nvar NgModelGroup = (function (_super) {\n    __extends(NgModelGroup, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function NgModelGroup(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    return NgModelGroup;\n}(AbstractFormGroupDirective));\nNgModelGroup.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n];\n/**\n * @nocollapse\n */\nNgModelGroup.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nNgModelGroup.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngModelGroup',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return NgModel; })\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nvar resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n *\n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * \\@howToUse\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional {\\@link \\@Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: `FormsModule`\n *\n *  \\@stable\n */\nvar NgModel = (function (_super) {\n    __extends(NgModel, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function NgModel(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        /**\n         * \\@internal\n         */\n        _this._control = new FormControl();\n        /**\n         * \\@internal\n         */\n        _this._registered = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || (this.options && this.options.standalone);\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._setUpStandalone = function () {\n        setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgModel.prototype._updateDisabled = function (changes) {\n        var _this = this;\n        var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n        var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(function () {\n            if (isDisabled && !_this.control.disabled) {\n                _this.control.disable();\n            }\n            else if (!isDisabled && _this.control.disabled) {\n                _this.control.enable();\n            }\n        });\n    };\n    return NgModel;\n}(NgControl));\nNgModel.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] },\n];\n/**\n * @nocollapse\n */\nNgModel.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nNgModel.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['disabled',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'options': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngModelOptions',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.controlParentException = function () {\n        throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + FormErrorExamples.ngModelGroup);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.missingFormException = function () {\n        throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + FormErrorExamples.formControlName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.groupParentException = function () {\n        throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + FormErrorExamples.formGroupName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.arrayParentException = function () {\n        throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + FormErrorExamples.formArrayName);\n    };\n    /**\n     * @return {?}\n     */\n    ReactiveErrors.disabledAttrWarning = function () {\n        console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n    };\n    return ReactiveErrors;\n}());\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return FormControlDirective; })\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n *\n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n *\n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl.setValue} or\n * {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n *  \\@stable\n */\nvar FormControlDirective = (function (_super) {\n    __extends(FormControlDirective, _super);\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlDirective(validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return changes.hasOwnProperty('form');\n    };\n    return FormControlDirective;\n}(NgControl));\nFormControlDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n];\n/**\n * @nocollapse\n */\nFormControlDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['formControl',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return FormGroupDirective; })\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n *\n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n * re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormGroupDirective = (function (_super) {\n    __extends(FormGroupDirective, _super);\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    function FormGroupDirective(_validators, _asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._validators = _validators;\n        _this._asyncValidators = _asyncValidators;\n        _this._submitted = false;\n        _this.directives = [];\n        _this.form = null;\n        _this.ngSubmit = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        return _this;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeControl = function (dir) { remove(this.directives, dir); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var /** @type {?} */ ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var /** @type {?} */ ctrl = (this.form.get(dir.path));\n        ctrl.setValue(value);\n    };\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onSubmit = function ($event) {\n        this._submitted = true;\n        this.ngSubmit.emit($event);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    FormGroupDirective.prototype.resetForm = function (value) {\n        if (value === void 0) { value = undefined; }\n        this.form.reset(value);\n        this._submitted = false;\n    };\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n            if (dir._control !== newCtrl) {\n                cleanUpControl(dir._control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                dir._control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateRegistrations = function () {\n        var _this = this;\n        this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(function () { });\n        this._oldForm = this.form;\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._updateValidators = function () {\n        var /** @type {?} */ sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([this.form.validator, sync]);\n        var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n    };\n    /**\n     * @return {?}\n     */\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    };\n    return FormGroupDirective;\n}(ControlContainer));\nFormGroupDirective.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] },\n];\n/**\n * @nocollapse\n */\nFormGroupDirective.ctorParameters = function () { return [\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupDirective.propDecorators = {\n    'form': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['formGroup',] },],\n    'ngSubmit': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n};\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return FormGroupName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormGroupName = (function (_super) {\n    __extends(FormGroupName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormGroupName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    };\n    return FormGroupName;\n}(AbstractFormGroupDirective));\nFormGroupName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormGroupName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormGroupName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['formGroupName',] },],\n};\nvar formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return FormArrayName; })\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl.get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl.valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl.statusChanges} event to be notified when the validation\n * status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray.push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * * **npm package**: `\\@angular/forms`\n *\n * * **NgModule**: `ReactiveFormsModule`\n *\n * \\@stable\n */\nvar FormArrayName = (function (_super) {\n    __extends(FormArrayName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    function FormArrayName(parent, validators, asyncValidators) {\n        var _this = _super.call(this) || this;\n        _this._parent = parent;\n        _this._validators = validators;\n        _this._asyncValidators = asyncValidators;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    };\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this.formDirective.getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._parent ? (this._parent.formDirective) : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    };\n    return FormArrayName;\n}(ControlContainer));\nFormArrayName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n];\n/**\n * @nocollapse\n */\nFormArrayName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n]; };\nFormArrayName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['formArrayName',] },],\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar controlNameBinding = {\n    provide: NgControl,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return FormControlName; })\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n *\n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n *\n * \\@howToUse\n *\n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n *\n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl.get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n *\n * **npm package**: `\\@angular/forms`\n *\n * **NgModule**: {\\@link ReactiveFormsModule}\n *\n *  \\@stable\n */\nvar FormControlName = (function (_super) {\n    __extends(FormControlName, _super);\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n        var _this = _super.call(this) || this;\n        _this._added = false;\n        _this.update = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        _this._parent = parent;\n        _this._rawValidators = validators || [];\n        _this._rawAsyncValidators = asyncValidators || [];\n        _this.valueAccessor = selectValueAccessor(_this, valueAccessors);\n        return _this;\n    }\n    Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype.ngOnDestroy = function () {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    };\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return composeValidators(this._rawValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return composeAsyncValidators(this._rawAsyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    FormControlName.prototype._setUpControl = function () {\n        this._checkParentType();\n        this._control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    };\n    return FormControlName;\n}(NgControl));\nFormControlName.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n];\n/**\n * @nocollapse\n */\nFormControlName.ctorParameters = function () { return [\n    { type: ControlContainer, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Host\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"SkipSelf\"] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_ASYNC_VALIDATORS,] },] },\n    { type: Array, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Self\"] }, { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [NG_VALUE_ACCESSOR,] },] },\n]; };\nFormControlName.propDecorators = {\n    'name': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['formControlName',] },],\n    'model': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['ngModel',] },],\n    'update': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"], args: ['ngModelChange',] },],\n    'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"], args: ['disabled',] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return RequiredValidator; }),\n    multi: true\n};\nvar CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return CheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@stable\n */\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    Object.defineProperty(RequiredValidator.prototype, \"required\", {\n        /**\n         * @return {?}\n         */\n        get: function () { return this._required; },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._required = value != null && value !== false && \"\" + value !== 'false';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    RequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.required(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return RequiredValidator;\n}());\nRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nRequiredValidator.ctorParameters = function () { return []; };\nRequiredValidator.propDecorators = {\n    'required': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n */\nvar CheckboxRequiredValidator = (function (_super) {\n    __extends(CheckboxRequiredValidator, _super);\n    function CheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    CheckboxRequiredValidator.prototype.validate = function (c) {\n        return this.required ? Validators.requiredTrue(c) : null;\n    };\n    return CheckboxRequiredValidator;\n}(RequiredValidator));\nCheckboxRequiredValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nCheckboxRequiredValidator.ctorParameters = function () { return []; };\n/**\n * Provider which adds {@link EmailValidator} to {@link NG_VALIDATORS}.\n */\nvar EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return EmailValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n *\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n */\nvar EmailValidator = (function () {\n    function EmailValidator() {\n    }\n    Object.defineProperty(EmailValidator.prototype, \"email\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._enabled = value === '' || value === true || value === 'true';\n            if (this._onChange)\n                this._onChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    EmailValidator.prototype.validate = function (c) {\n        return this._enabled ? Validators.email(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    EmailValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    return EmailValidator;\n}());\nEmailValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] },\n];\n/**\n * @nocollapse\n */\nEmailValidator.ctorParameters = function () { return []; };\nEmailValidator.propDecorators = {\n    'email': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='min'}\n */\nvar MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MinLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@stable\n */\nvar MinLengthValidator = (function () {\n    function MinLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MinLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MinLengthValidator.prototype.validate = function (c) {\n        return this.minlength == null ? null : this._validator(c);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MinLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    };\n    return MinLengthValidator;\n}());\nMinLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMinLengthValidator.ctorParameters = function () { return []; };\nMinLengthValidator.propDecorators = {\n    'minlength': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='max'}\n */\nvar MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return MaxLengthValidator; }),\n    multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@stable\n */\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.validate = function (c) {\n        return this.maxlength != null ? this._validator(c) : null;\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    MaxLengthValidator.prototype._createValidator = function () {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    };\n    return MaxLengthValidator;\n}());\nMaxLengthValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nMaxLengthValidator.ctorParameters = function () { return []; };\nMaxLengthValidator.propDecorators = {\n    'maxlength': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\nvar PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"forwardRef\"])(function () { return PatternValidator; }),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nvar PatternValidator = (function () {\n    function PatternValidator() {\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PatternValidator.prototype.ngOnChanges = function (changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n    /**\n     * @return {?}\n     */\n    PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n    return PatternValidator;\n}());\nPatternValidator.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] },\n];\n/**\n * @nocollapse\n */\nPatternValidator.ctorParameters = function () { return []; };\nPatternValidator.propDecorators = {\n    'pattern': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n *\n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n *\n * \\@howToUse\n *\n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n *\n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n *\n *  * **npm package**: `\\@angular/forms`\n *\n *  * **NgModule**: {\\@link ReactiveFormsModule}\n *\n * \\@stable\n */\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {\\@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n     *\n     * See the {\\@link FormGroup} constructor for more details.\n     * @param {?} controlsConfig\n     * @param {?=} extra\n     * @return {?}\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n        var /** @type {?} */ validator = extra != null ? extra['validator'] : null;\n        var /** @type {?} */ asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n     * `asyncValidator`.\n     *\n     * `formState` can either be a standalone value for the form control or an object\n     * that contains both a value and a disabled status.\n     *\n     * @param {?} formState\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        return new FormControl(formState, validator, asyncValidator);\n    };\n    /**\n     * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     * @param {?} controlsConfig\n     * @param {?=} validator\n     * @param {?=} asyncValidator\n     * @return {?}\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new FormArray(controls, validator, asyncValidator);\n    };\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var /** @type {?} */ controls = {};\n        Object.keys(controlsConfig).forEach(function (controlName) {\n            controls[controlName] = _this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    };\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            var /** @type {?} */ value = controlConfig[0];\n            var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    return FormBuilder;\n}());\nFormBuilder.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n];\n/**\n * @nocollapse\n */\nFormBuilder.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Version\"]('4.0.3');\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n */\nvar NgNoValidate = (function () {\n    function NgNoValidate() {\n    }\n    return NgNoValidate;\n}());\nNgNoValidate.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] },\n];\n/**\n * @nocollapse\n */\nNgNoValidate.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\nvar TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nvar REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    return InternalFormsSharedModule;\n}());\nInternalFormsSharedModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] },\n];\n/**\n * @nocollapse\n */\nInternalFormsSharedModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The ng module for forms.\n * \\@stable\n */\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    return FormsModule;\n}());\nFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nFormsModule.ctorParameters = function () { return []; };\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    return ReactiveFormsModule;\n}());\nReactiveFormsModule.decorators = [\n    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] },\n];\n/**\n * @nocollapse\n */\nReactiveFormsModule.ctorParameters = function () { return []; };\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl}\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n\n/***/ }),\n\n/***/ 94:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__webpack_require__(108);\r\n__webpack_require__(109);\r\n__webpack_require__(121);\r\n__webpack_require__(51);\r\n__webpack_require__(49);\r\nvar platform_browser_dynamic_1 = __webpack_require__(48);\r\nvar main_module_1 = __webpack_require__(101);\r\nvar core_1 = __webpack_require__(4);\r\nif (true) {\r\n    core_1.enableProdMode();\r\n}\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(main_module_1.MainModule).then(function (MODULE_REF) { if (false) {\r\n    module[\"hot\"][\"accept\"]();\r\n    if (MODULE_REF.instance[\"hmrOnInit\"]) {\r\n        module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnStatus\"]) {\r\n        module[\"hot\"][\"apply\"](function (status) { MODULE_REF.instance[\"hmrOnStatus\"](status); });\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnCheck\"]) {\r\n        module[\"hot\"][\"check\"](function (err, outdatedModules) { MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules); });\r\n    }\r\n    if (MODULE_REF.instance[\"hmrOnDecline\"]) {\r\n        module[\"hot\"][\"decline\"](function (dependencies) { MODULE_REF.instance[\"hmrOnDecline\"](dependencies); });\r\n    }\r\n    module[\"hot\"][\"dispose\"](function (store) { MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store); MODULE_REF.destroy(); MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store); });\r\n} return MODULE_REF; });\r\n\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = __webpack_require__(12);\r\nvar core_1 = __webpack_require__(4);\r\nvar AppComponent = (function () {\r\n    function AppComponent() {\r\n        this.logoUrl = __webpack_require__(110);\r\n        this.url = 'https://servicestack.net/vs-templates/AngularApp';\r\n    }\r\n    return AppComponent;\r\n}());\r\nAppComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'app-root',\r\n        template: \"\\n    <div mdl class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-header\\\">\\n\\n        <app-header></app-header>\\n\\n        <main class=\\\"mdl-layout__content\\\">\\n\\n            <div class=\\\"mdl-layout__tab-panel is-active\\\" id=\\\"overview\\\">\\n                <router-outlet></router-outlet>\\n            </div>\\n\\n            <h4 style=\\\"text-align: center\\\">\\n                <img [src]=\\\"logoUrl\\\" />\\n                <a [href]=\\\"url\\\">Learn about this Angular4 VS.NET template</a>\\n            </h4>\\n\\n            <app-footer></app-footer>\\n\\n        </main>\\n    </div>\\n    \"\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [])\r\n], AppComponent);\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ })\n\n},[386]);\n\n\n// WEBPACK FOOTER //\n// app.987702c990d6a66b3e1f.bundle.js","/* Options:\nDate: 2017-01-01 12:00:00\nVersion: 4\nTip: To override a DTO option, remove \"//\" prefix before updating\nBaseUrl: http://localhost:61322/\n\n//GlobalNamespace: \nExportAsTypes: True\n//MakePropertiesOptional: True\n//AddServiceStackTypes: True\n//AddResponseStatus: False\n//AddImplicitVersion: \n//AddDescriptionAsComments: True\n//IncludeTypes: \n//ExcludeTypes: \n//DefaultImports: \n*/\n\n\nexport interface IReturn<T> {\n}\n\nexport class HelloResponse {\n    result: string;\n}\n\n// @Route(\"/hello\")\n// @Route(\"/hello/{Name}\")\nexport class Hello implements IReturn<HelloResponse>\n{\n    name: string;\n    createResponse() { return new HelloResponse(); }\n    getTypeName() { return \"Hello\"; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/dtos.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './shared/header';\nimport { FooterComponent } from './shared/footer';\nimport { AppModule } from './modules/app/app.module';\n\nimport { MDL } from './shared/utils';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'main/0', pathMatch: 'full' },\n];\n\n@NgModule({\n    declarations: [\n        MDL,\n        AppComponent,\n        HeaderComponent,\n        FooterComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n        RouterModule.forRoot(routes),\n        AppModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class MainModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/main.module.ts","import { Component, Input, ChangeDetectorRef } from '@angular/core';\nimport { client } from '../../../shared/utils';\nimport { Hello } from '../../../dtos';\n\n@Component({\n    selector: 'hello',\n    template: require('./hello.html'),\n    styles: [require('./hello.css')]\n})\nexport class HelloComponent {\n    result: string;\n\n    constructor(private cdref: ChangeDetectorRef) { }\n\n    @Input() name: string;\n\n    ngOnInit() {\n        this.nameChanged(this.name);\n    }\n\n    async nameChanged(name: string) {\n        if (name) {\n            var req = new Hello();\n            req.name = name;\n            var r = await client.get(req);\n            this.result = r.result;\n        } else {\n            this.result = '';\n        }\n        this.cdref.detectChanges();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/modules/app/home/hello.ts","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HelloComponent } from './hello';\n\n@Component({\n    selector: 'home',\n    template: `\n        <section class=\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\">\n            <header class=\"section__play-btn mdl-cell mdl-cell--3-col-desktop mdl-cell--2-col-tablet mdl-cell--4-col-phone mdl-color--teal-100 mdl-color-text--white\">\n                <i class=\"material-icons\">play_circle_filled</i>\n            </header>\n\n            <div class=\"mdl-card mdl-cell mdl-cell--9-col-desktop mdl-cell--6-col-tablet mdl-cell--4-col-phone\">\n\n                <hello [name]=\"name\"></hello> \n\n                <div class=\"mdl-card__actions\">\n                    <a href=\"http://docs.servicestack.net/typescript-add-servicestack-reference\" class=\"mdl-button\">More info on TypeScript ServiceStack Reference</a>\n                </div>\n            </div>\n        </section>\n    `\n})\nexport class HomeComponent {\n    name: string;\n    heading: string;\n\n    constructor(private route: ActivatedRoute) {\n        this.heading = \"Home\";\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(x => this.name = x.name);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/modules/app/home/home.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'products', \n    template: `\n        <section class=\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\">\n            <div class=\"mdl-card mdl-cell mdl-cell--12-col\">\n                <div class=\"mdl-card__supporting-text mdl-grid mdl-grid--no-spacing\">\n                <h4 class=\"mdl-cell mdl-cell--12-col\">{{heading}}</h4>\n                <div class=\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\">\n                    <div class=\"section__circle-container__circle mdl-color--primary\"></div>\n                </div>\n                <div class=\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\">\n                    <h5>Lorem ipsum dolor sit amet</h5>\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\"#\">proident minim</a>.\n                </div>\n                <div class=\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\">\n                    <div class=\"section__circle-container__circle mdl-color--primary\"></div>\n                </div>\n                <div class=\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\">\n                    <h5>Lorem ipsum dolor sit amet</h5>\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\"#\">proident minim</a>.\n                </div>\n                <div class=\"section__circle-container mdl-cell mdl-cell--2-col mdl-cell--1-col-phone\">\n                    <div class=\"section__circle-container__circle mdl-color--primary\"></div>\n                </div>\n                <div class=\"section__text mdl-cell mdl-cell--10-col-desktop mdl-cell--6-col-tablet mdl-cell--3-col-phone\">\n                    <h5>Lorem ipsum dolor sit amet</h5>\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. Duis nulla tempor do aute et eiusmod velit exercitation nostrud quis <a href=\"#\">proident minim</a>.\n                </div>\n                </div>\n                <div class=\"mdl-card__actions\">\n                <a href=\"#\" class=\"mdl-button\">Read our features</a>\n                </div>\n            </div>\n        </section>\n    `,\n    styles: [require('./products.scss')]\n})\nexport class ProductsComponent {\n    heading: string;\n\n    constructor() {\n        this.heading = \"Products\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/modules/app/products/products.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'technology',\n    template: `\n        <section class=\"section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp\">\n            <div class=\"mdl-card mdl-cell mdl-cell--12-col\">\n                <div class=\"mdl-card__supporting-text\">\n                    <h4>{{heading}}</h4>\n                    Dolore ex deserunt aute fugiat aute nulla ea sunt aliqua nisi cupidatat eu. \n                    Nostrud in laboris labore nisi amet do dolor eu fugiat consectetur elit cillum esse. \n                    Pariatur occaecat nisi laboris tempor laboris eiusmod qui id Lorem esse commodo in. \n                    Exercitation aute dolore deserunt culpa consequat elit labore incididunt elit anim.\n                </div>\n                <div class=\"mdl-card__actions\">\n                    <a href=\"#\" class=\"mdl-button\">Read our features</a>\n                </div>\n            </div>\n        </section>\n    `\n})\nexport class TechnologyComponent {\n    heading: string;\n\n    constructor() {\n        this.heading = \"Technology\";\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/modules/app/technology/technology.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    template: `\n        <section class=\"section--footer mdl-grid\"></section>\n        <footer class=\"mdl-mega-footer\">\n            <div class=\"mdl-mega-footer--middle-section\">\n                <div class=\"mdl-mega-footer--drop-down-section\">\n                    <input class=\"mdl-mega-footer--heading-checkbox\" type=\"checkbox\" checked>\n                    <h1 class=\"mdl-mega-footer--heading\">Features</h1>\n                    <ul class=\"mdl-mega-footer--link-list\">\n                        <li><a href=\"#\">About</a></li>\n                        <li><a href=\"#\">Terms</a></li>\n                        <li><a href=\"#\">Partners</a></li>\n                        <li><a href=\"#\">Updates</a></li>\n                    </ul>\n                </div>\n                <div class=\"mdl-mega-footer--drop-down-section\">\n                    <input class=\"mdl-mega-footer--heading-checkbox\" type=\"checkbox\" checked>\n                    <h1 class=\"mdl-mega-footer--heading\">Details</h1>\n                    <ul class=\"mdl-mega-footer--link-list\">\n                        <li><a href=\"#\">Spec</a></li>\n                        <li><a href=\"#\">Tools</a></li>\n                        <li><a href=\"#\">Resources</a></li>\n                    </ul>\n                </div>\n                <div class=\"mdl-mega-footer--drop-down-section\">\n                    <input class=\"mdl-mega-footer--heading-checkbox\" type=\"checkbox\" checked>\n                    <h1 class=\"mdl-mega-footer--heading\">Technology</h1>\n                    <ul class=\"mdl-mega-footer--link-list\">\n                        <li><a href=\"#\">How it works</a></li>\n                        <li><a href=\"#\">Patterns</a></li>\n                        <li><a href=\"#\">Usage</a></li>\n                        <li><a href=\"#\">Products</a></li>\n                        <li><a href=\"#\">Contracts</a></li>\n                    </ul>\n                </div>\n                <div class=\"mdl-mega-footer--drop-down-section\">\n                    <input class=\"mdl-mega-footer--heading-checkbox\" type=\"checkbox\" checked>\n                    <h1 class=\"mdl-mega-footer--heading\">FAQ</h1>\n                    <ul class=\"mdl-mega-footer--link-list\">\n                        <li><a href=\"#\">Questions</a></li>\n                        <li><a href=\"#\">Answers</a></li>\n                        <li><a href=\"#\">Contact us</a></li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"mdl-mega-footer--bottom-section\">\n                <div class=\"mdl-logo\">\n                    More Information\n                </div>\n                <ul class=\"mdl-mega-footer--link-list\">\n                    <li><a href=\"https://github.com/ServiceStack/ServiceStackVS\">ServiceStack VS.NET Templates</a></li>\n                </ul>\n            </div>\n        </footer>\n    `\n})\nexport class FooterComponent {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/shared/footer.ts","import { Component, Injectable, Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { routes } from '../modules/app/app.module';\n\n@Component({\n    selector: 'app-header',\n    template: `\n        <header class=\"mdl-layout__header mdl-layout__header--scroll mdl-color--primary\">\n            <div class=\"mdl-layout--large-screen-only mdl-layout__header-row\"></div>\n            <div class=\"mdl-layout--large-screen-only mdl-layout__header-row\">\n                <h3>{{title}}</h3>\n            </div>\n            <div class=\"mdl-layout--large-screen-only mdl-layout__header-row\"></div>\n            <div class=\"mdl-layout__tab-bar mdl-js-ripple-effect mdl-color--primary-dark\">\n\n                <span *ngFor=\"let route of routes\">\n                    <a *ngIf=\"route.data\" class=\"mdl-layout__tab\" [class.is-active]=\"isActive(route.path)\"\n                        routerLink=\"{{route.path}}\">{{route.data.title}}</a>\n                </span>\n\n                <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored mdl-shadow--4dp mdl-color--accent\" id=\"add\">\n                    <i class=\"material-icons\" role=\"presentation\">add</i>\n                    <span class=\"visuallyhidden\">Add</span>\n                </button>\n            </div>\n        </header>\n    `\n})\nexport class HeaderComponent {\n    title = 'Angular4 App';\n    routes = routes.filter((val) => val.path != '');\n\n    constructor(private route: ActivatedRoute, private router: Router) {}\n\n    isActive(path: string): boolean {\n        return this.router.url.substring(1) === path;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/shared/header.ts","module.exports = __webpack_public_path__ + \"img/logo.36166adfacf0c8cc11d493f2161164fd.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/img/logo.png\n// module id = 110\n// module chunks = 0","module.exports = \"<div class=\\\"mdl-card__supporting-text\\\">\\n    <h4>Welcome</h4>\\n\\n    Ajax request using ServiceStack's TypeScript JsonServiceClient and Typed DTOs:\\n\\n    <div class=\\\"mdl-textfield mdl-js-textfield\\\" style=\\\"width:auto\\\">\\n\\n        <input type=\\\"text\\\" class=\\\"mdl-textfield__input\\\" id=\\\"Name\\\"\\n               placeholder=\\\"Type your name\\\" autocomplete=\\\"off\\\"\\n               [(ngModel)]=\\\"name\\\"\\n               (ngModelChange)=\\\"nameChanged($event)\\\" />\\n\\n        <span class=\\\"result\\\">{{result}}</span>\\n    </div>\\n\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/app/home/hello.html\n// module id = 111\n// module chunks = 0","module.exports = \"input[type=text] {\\n  display: inline-block;\\n  width: auto;\\n  margin: 0 10px 0 0; }\\n\\n.result {\\n  font-size: 20px;\\n  color: #7a1ea1; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/app/home/hello.css\n// module id = 112\n// module chunks = 0","module.exports = \"div {\\n  background: #3e2280;\\n  color: #fff; }\\n\\na {\\n  color: #ff73a3; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/modules/app/products/products.scss\n// module id = 113\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tslib/tslib.es6.js\n// module id = 12\n// module chunks = 0","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                var href = tab.href.split('#')[1];\n                var panel = ctx.element_.querySelector('#' + href);\n                ctx.resetTabState_();\n                ctx.resetPanelState_();\n                tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n                panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            }\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n\n\n// WEBPACK FOOTER //\n// tabs.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    if (!layout.tabBar_.classList.contains(layout.CssClasses_.TAB_MANUAL_SWITCH)) {\n        tab.addEventListener('click', function (e) {\n            if (tab.getAttribute('href').charAt(0) === '#') {\n                e.preventDefault();\n                selectTab();\n            }\n        });\n    }\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n\n\n// WEBPACK FOOTER //\n// layout.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Create an event object.\n   *\n   * @param {string} eventType The type name of the event.\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\n   * @param {boolean} cancelable Whether the event can be canceled.\n   * @returns {!Event}\n   */\n  function createEvent_(eventType, bubbles, cancelable) {\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n      return new CustomEvent(eventType, {\n        bubbles: bubbles,\n        cancelable: cancelable\n      });\n    } else {\n      var ev = document.createEvent('Events');\n      ev.initEvent(eventType, bubbles, cancelable);\n      return ev;\n    }\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    // Allow upgrade to be canceled by canceling emitted event.\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\n    element.dispatchEvent(upgradingEv);\n    if (upgradingEv.defaultPrevented) {\n      return;\n    }\n\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\n      element.dispatchEvent(upgradedEv);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n\n\n\n// WEBPACK FOOTER //\n// mdlComponentHandler.js","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n     * Date.now polyfill.\n     * @return {number} the current Date\n     */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n     * requestAnimationFrame polyfill.\n     * @param  {!Function} callback the callback function.\n     */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\n\n\n// WEBPACK FOOTER //\n// rAF.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// button.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// checkbox.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// icon-toggle.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// menu.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// progress.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\n                radios[i]['MaterialRadio'].updateClasses_();\n            }\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// radio.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// slider.js","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// snackbar.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// spinner.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// switch.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n\n\n// WEBPACK FOOTER //\n// textfield.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n\n\n// WEBPACK FOOTER //\n// tooltip.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n\n\n// WEBPACK FOOTER //\n// data-table.js","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n\n\n// WEBPACK FOOTER //\n// ripple.js","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home';\nimport { HelloComponent } from './home/hello';\nimport { ProductsComponent } from './products/products';\nimport { TechnologyComponent } from './technology/technology';\n\nexport const routes: Routes = [\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    { path: 'home', component: HomeComponent, data: { title: 'Home', name: 'Angular4' } },\n    { path: 'products', component: ProductsComponent, data: { title: 'Products' } },\n    { path: 'technology', component: TechnologyComponent, data: { title: 'Technology' } },\n    { path: '**', redirectTo: 'home' },\n];\n\n@NgModule({\n    declarations: [\n        HomeComponent,\n        HelloComponent,\n        ProductsComponent,\n        TechnologyComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        RouterModule.forRoot(routes)\n    ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/modules/app/app.module.ts","import { Directive, AfterViewInit } from '@angular/core';\nimport { JsonServiceClient } from 'servicestack-client';\n\ndeclare var global; //populated from package.json/karma/globals\n\nexport var client = new JsonServiceClient(global.BaseUrl || '/');\n\n\n@Directive({\n    selector: '[mdl]'\n})\nexport class MDL implements AfterViewInit {\n    ngAfterViewInit() {\n        if (typeof componentHandler !== \"undefined\") {\n            componentHandler.upgradeDom();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/shared/utils.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, ɵisObservable as isObservable, ɵisPromise as isPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {forkJoin} from 'rxjs/observable/forkJoin';\nimport {fromPromise} from 'rxjs/observable/fromPromise';\nimport {map} from 'rxjs/operator/map';\nimport {AsyncValidatorFn, ValidationErrors, Validator, ValidatorFn} from './directives/validators';\nimport {AbstractControl, FormControl} from './model';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value: any): boolean {\n  // we don't check for string here so it also works with arrays\n  return value == null || value.length === 0;\n}\n/**\n * Providers for validators to be used for {\\@link FormControl}s in a form.\n * \n * Provide this using `multi: true` to add validators.\n * \n * ### Example\n * \n * {\\@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * \\@stable\n */\nexport const NG_VALIDATORS = new InjectionToken<Array<Validator|Function>>('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {\\@link FormControl}s\n * in a form.\n * \n * Provide this using `multi: true` to add validators.\n * \n * See {\\@link NG_VALIDATORS} for more details.\n * \n * \\@stable\n */\nexport const NG_ASYNC_VALIDATORS =\n    new InjectionToken<Array<Validator|Function>>('NgAsyncValidators');\n\nconst /** @type {?} */ EMAIL_REGEXP =\n    /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * Provides a set of validators used by form controls.\n * \n * A validator is a function that processes a {\\@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n * \n * ### Example\n * \n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n * \n * \\@stable\n */\nexport class Validators {\n/**\n * Validator that requires controls to have a non-empty value.\n * @param {?} control\n * @return {?}\n */\nstatic required(control: AbstractControl): ValidationErrors|null {\n    return isEmptyInputValue(control.value) ? {'required': true} : null;\n  }\n/**\n * Validator that requires control value to be true.\n * @param {?} control\n * @return {?}\n */\nstatic requiredTrue(control: AbstractControl): ValidationErrors|null {\n    return control.value === true ? null : {'required': true};\n  }\n/**\n * Validator that performs email validation.\n * @param {?} control\n * @return {?}\n */\nstatic email(control: AbstractControl): ValidationErrors|null {\n    return EMAIL_REGEXP.test(control.value) ? null : {'email': true};\n  }\n/**\n * Validator that requires controls to have a value of a minimum length.\n * @param {?} minLength\n * @return {?}\n */\nstatic minLength(minLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ length: number = control.value ? control.value.length : 0;\n      return length < minLength ?\n          {'minlength': {'requiredLength': minLength, 'actualLength': length}} :\n          null;\n    };\n  }\n/**\n * Validator that requires controls to have a value of a maximum length.\n * @param {?} maxLength\n * @return {?}\n */\nstatic maxLength(maxLength: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const /** @type {?} */ length: number = control.value ? control.value.length : 0;\n      return length > maxLength ?\n          {'maxlength': {'requiredLength': maxLength, 'actualLength': length}} :\n          null;\n    };\n  }\n/**\n * Validator that requires a control to match a regex to its value.\n * @param {?} pattern\n * @return {?}\n */\nstatic pattern(pattern: string|RegExp): ValidatorFn {\n    if (!pattern) return Validators.nullValidator;\n    let /** @type {?} */ regex: RegExp;\n    let /** @type {?} */ regexStr: string;\n    if (typeof pattern === 'string') {\n      regexStr = `^${pattern}$`;\n      regex = new RegExp(regexStr);\n    } else {\n      regexStr = pattern.toString();\n      regex = pattern;\n    }\n    return (control: AbstractControl): ValidationErrors | null => {\n      if (isEmptyInputValue(control.value)) {\n        return null;  // don't validate empty values to allow optional controls\n      }\n      const /** @type {?} */ value: string = control.value;\n      return regex.test(value) ? null :\n                                 {'pattern': {'requiredPattern': regexStr, 'actualValue': value}};\n    };\n  }\n/**\n * No-op validator.\n * @param {?} c\n * @return {?}\n */\nstatic nullValidator(c: AbstractControl): ValidationErrors|null { return null; }\n/**\n * Compose multiple validators into a single function that returns the union\n * of the individual error maps.\n * @param {?} validators\n * @return {?}\n */\nstatic compose(validators: ValidatorFn[]): ValidatorFn {\n    if (!validators) return null;\n    const /** @type {?} */ presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      return _mergeErrors(_executeValidators(control, presentValidators));\n    };\n  }\n/**\n * @param {?} validators\n * @return {?}\n */\nstatic composeAsync(validators: AsyncValidatorFn[]): AsyncValidatorFn {\n    if (!validators) return null;\n    const /** @type {?} */ presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0) return null;\n\n    return function(control: AbstractControl) {\n      const /** @type {?} */ observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o: any): boolean {\n  return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nexport function toObservable(r: any): Observable<any> {\n  const /** @type {?} */ obs = isPromise(r) ? fromPromise(r) : r;\n  if (!(isObservable(obs))) {\n    throw new Error(`Expected validator to return Promise or Observable.`);\n  }\n  return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control: AbstractControl, validators: ValidatorFn[]): any[] {\n  return validators.map(v => v(control));\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control: AbstractControl, validators: AsyncValidatorFn[]): any[] {\n  return validators.map(v => v(control));\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors: ValidationErrors[]): ValidationErrors|null {\n  const /** @type {?} */ res: {[key: string]: any} =\n      arrayOfErrors.reduce((res: ValidationErrors | null, errors: ValidationErrors | null) => {\n        return errors != null ? {...res, ...errors} : res;\n      }, {});\n  return Object.keys(res).length === 0 ? null : res;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/validators.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * A bridge between a control and a native element.\n *\n * A `ControlValueAccessor` abstracts the operations of writing a new value to a\n * DOM element representing an input control.\n *\n * Please see {@link DefaultValueAccessor} for more information.\n *\n * @stable\n */\nexport interface ControlValueAccessor {\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: any): void;\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  registerOnChange(fn: any): void;\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: any): void;\n\n  /**\n   * This function is called when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState?(isDisabled: boolean): void;\n}\n/**\n * Used to provide a {\\@link ControlValueAccessor} for form controls.\n * \n * See {\\@link DefaultValueAccessor} for how to implement one.\n * \\@stable\n */\nexport const NG_VALUE_ACCESSOR = new InjectionToken<ControlValueAccessor>('NgValueAccessor');\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControl} from '../model';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} validator\n * @return {?}\n */\nexport function normalizeValidator(validator: ValidatorFn | Validator): ValidatorFn {\n  if (( /** @type {?} */((<Validator>validator))).validate) {\n    return (c: AbstractControl) => ( /** @type {?} */((<Validator>validator))).validate(c);\n  } else {\n    return /** @type {?} */(( <ValidatorFn>validator));\n  }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nexport function normalizeAsyncValidator(validator: AsyncValidatorFn | AsyncValidator):\n    AsyncValidatorFn {\n  if (( /** @type {?} */((<AsyncValidator>validator))).validate) {\n    return (c: AbstractControl) => ( /** @type {?} */((<AsyncValidator>validator))).validate(c);\n  } else {\n    return /** @type {?} */(( <AsyncValidatorFn>validator));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/normalize_validator.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Provider, Renderer, forwardRef, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n/**\n * \\@whatItDoes Writes values and listens to changes on a select element.\n * \n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n * \n * \\@howToUse \n * \n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n * \n * ### How to use select controls with form directives\n * \n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n * \n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n * \n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n * \n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n * \n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n * \n * ### Caveat: Option selection\n * \n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class SelectControlValueAccessor implements ControlValueAccessor {\n  value: any;\n/**\n * \\@internal\n */\n_optionMap: Map<string, any> = new Map<string, any>();\n/**\n * \\@internal\n */\n_idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    const /** @type {?} */ id: string = this._getOptionId(value);\n    if (id == null) {\n      this._renderer.setElementProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n    }\n    const /** @type {?} */ valueString = _buildValueString(id, value);\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (valueString: string) => {\n      this.value = valueString;\n      fn(this._getOptionValue(valueString));\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_registerOption(): string { return (this._idCounter++).toString(); }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id), value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n  host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n  providers: [SELECT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'compareWith': [{ type: Input },],\n};\n}\n\nfunction SelectControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * \\@howToUse \n * \n * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n * \n * \\@stable\n */\nexport class NgSelectOption implements OnDestroy {\n  id: string;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer,\nprivate _select: SelectControlValueAccessor) {\n    if (this._select) this.id = this._select._registerOption();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._select._optionMap.set(this.id, value);\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    this._setElementValue(value);\n    if (this._select) this._select.writeValue(this._select.value);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectOption.ctorParameters;\n/** @type {?} */\nNgSelectOption.propDecorators;\n/** @type {?} */\nNgSelectOption.prototype.id;\n/** @type {?} */\nNgSelectOption.prototype._element;\n/** @type {?} */\nNgSelectOption.prototype._renderer;\n/** @type {?} */\nNgSelectOption.prototype._select;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/select_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Host, Input, OnDestroy, Optional, Provider, Renderer, forwardRef, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id: string, value: any): string {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString: string): string {\n  return valueString.split(':')[0];\n}\n\n/** Mock interface for HTML Options */\ninterface HTMLOption {\n  value: string;\n  selected: boolean;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nabstract class HTMLCollection {\n  length: number;\n/**\n * @abstract\n * @param {?} _\n * @return {?}\n */\nitem(_: number) {}\n}\n\nfunction HTMLCollection_tsickle_Closure_declarations() {\n/** @type {?} */\nHTMLCollection.prototype.length;\n}\n\n/**\n * The accessor for writing a value and listening to changes on a select element.\n * \n *  ### Caveat: Options selection\n * \n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n * \n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n * \n * #### Syntax\n * \n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n * \n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n * \n * \\@stable\n */\nexport class SelectMultipleControlValueAccessor implements ControlValueAccessor {\n  value: any;\n/**\n * \\@internal\n */\n_optionMap: Map<string, NgSelectMultipleOption> = new Map<string, NgSelectMultipleOption>();\n/**\n * \\@internal\n */\n_idCounter: number = 0;\n\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n    }\n    this._compareWith = fn;\n  }\nprivate _compareWith: (o1: any, o2: any) => boolean = looseIdentical;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.value = value;\n    let /** @type {?} */ optionSelectedStateSetter: (opt: NgSelectMultipleOption, o: any) => void;\n    if (Array.isArray(value)) {\n      // convert values to ids\n      const /** @type {?} */ ids = value.map((v) => this._getOptionId(v));\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); };\n    } else {\n      optionSelectedStateSetter = (opt, o) => { opt._setSelected(false); };\n    }\n    this._optionMap.forEach(optionSelectedStateSetter);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => any): void {\n    this.onChange = (_: any) => {\n      const /** @type {?} */ selected: Array<any> = [];\n      if (_.hasOwnProperty('selectedOptions')) {\n        const /** @type {?} */ options: HTMLCollection = _.selectedOptions;\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: any = options.item(i);\n          const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n          selected.push(val);\n        }\n      }\n      // Degrade on IE\n      else {\n        const /** @type {?} */ options: HTMLCollection = /** @type {?} */(( <HTMLCollection>_.options));\n        for (let /** @type {?} */ i = 0; i < options.length; i++) {\n          const /** @type {?} */ opt: HTMLOption = options.item(i);\n          if (opt.selected) {\n            const /** @type {?} */ val: any = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n      }\n      this.value = selected;\n      fn(selected);\n    };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => any): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_registerOption(value: NgSelectMultipleOption): string {\n    const /** @type {?} */ id: string = (this._idCounter++).toString();\n    this._optionMap.set(id, value);\n    return id;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_getOptionId(value: any): string {\n    for (const /** @type {?} */ id of Array.from(this._optionMap.keys())) {\n      if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n    }\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} valueString\n * @return {?}\n */\n_getOptionValue(valueString: string): any {\n    const /** @type {?} */ id: string = _extractId(valueString);\n    return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n  host: {'(change)': 'onChange($event.target)', '(blur)': 'onTouched()'},\n  providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'compareWith': [{ type: Input },],\n};\n}\n\nfunction SelectMultipleControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectMultipleControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelectMultipleControlValueAccessor.ctorParameters;\n/** @type {?} */\nSelectMultipleControlValueAccessor.propDecorators;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.value;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._optionMap;\n/**\n * \\@internal\n * @type {?}\n */\nSelectMultipleControlValueAccessor.prototype._idCounter;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onChange;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._compareWith;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._renderer;\n/** @type {?} */\nSelectMultipleControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n * \n * ### Example\n * \n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n */\nexport class NgSelectMultipleOption implements OnDestroy {\n  id: string;\n/**\n * \\@internal\n */\n_value: any;\n/**\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _select\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _renderer: Renderer,\nprivate _select: SelectMultipleControlValueAccessor) {\n    if (this._select) {\n      this.id = this._select._registerOption(this);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset ngValue(value: any) {\n    if (this._select == null) return;\n    this._value = value;\n    this._setElementValue(_buildValueString(this.id, value));\n    this._select.writeValue(this._select.value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._select) {\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    } else {\n      this._setElementValue(value);\n    }\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_setElementValue(value: string): void {\n    this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n  }\n/**\n * \\@internal\n * @param {?} selected\n * @return {?}\n */\n_setSelected(selected: boolean) {\n    this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._select) {\n      this._select._optionMap.delete(this.id);\n      this._select.writeValue(this._select.value);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'option'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n{type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngValue': [{ type: Input, args: ['ngValue', ] },],\n'value': [{ type: Input, args: ['value', ] },],\n};\n}\n\nfunction NgSelectMultipleOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSelectMultipleOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSelectMultipleOption.ctorParameters;\n/** @type {?} */\nNgSelectMultipleOption.propDecorators;\n/** @type {?} */\nNgSelectMultipleOption.prototype.id;\n/**\n * \\@internal\n * @type {?}\n */\nNgSelectMultipleOption.prototype._value;\n/** @type {?} */\nNgSelectMultipleOption.prototype._element;\n/** @type {?} */\nNgSelectMultipleOption.prototype._renderer;\n/** @type {?} */\nNgSelectMultipleOption.prototype._select;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/select_multiple_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../model';\nimport {Validators} from '../validators';\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {CheckboxControlValueAccessor} from './checkbox_value_accessor';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {DefaultValueAccessor} from './default_value_accessor';\nimport {NgControl} from './ng_control';\nimport {normalizeAsyncValidator, normalizeValidator} from './normalize_validator';\nimport {NumberValueAccessor} from './number_value_accessor';\nimport {RadioControlValueAccessor} from './radio_control_value_accessor';\nimport {RangeValueAccessor} from './range_value_accessor';\nimport {FormArrayName} from './reactive_directives/form_group_name';\nimport {SelectControlValueAccessor} from './select_control_value_accessor';\nimport {SelectMultipleControlValueAccessor} from './select_multiple_control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nexport function controlPath(name: string, parent: ControlContainer): string[] {\n  return [...parent.path, name];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpControl(control: FormControl, dir: NgControl): void {\n  if (!control) _throwError(dir, 'Cannot find control with');\n  if (!dir.valueAccessor) _throwError(dir, 'No value accessor for form control with');\n\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n  dir.valueAccessor.writeValue(control.value);\n\n  // view -> model\n  dir.valueAccessor.registerOnChange((newValue: any) => {\n    dir.viewToModelUpdate(newValue);\n    control.markAsDirty();\n    control.setValue(newValue, {emitModelToViewChange: false});\n  });\n\n  // touched\n  dir.valueAccessor.registerOnTouched(() => control.markAsTouched());\n\n  control.registerOnChange((newValue: any, emitModelEvent: boolean) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  });\n\n  if (dir.valueAccessor.setDisabledState) {\n    control.registerOnDisabledChange(\n        (isDisabled: boolean) => { dir.valueAccessor.setDisabledState(isDisabled); });\n  }\n\n  // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  dir._rawValidators.forEach((validator: Validator | ValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange)\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n\n  dir._rawAsyncValidators.forEach((validator: AsyncValidator | AsyncValidatorFn) => {\n    if (( /** @type {?} */((<Validator>validator))).registerOnValidatorChange)\n      ( /** @type {?} */((<Validator>validator))).registerOnValidatorChange(() => control.updateValueAndValidity());\n  });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function cleanUpControl(control: FormControl, dir: NgControl) {\n  dir.valueAccessor.registerOnChange(() => _noControlError(dir));\n  dir.valueAccessor.registerOnTouched(() => _noControlError(dir));\n\n  dir._rawValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  dir._rawAsyncValidators.forEach((validator: any) => {\n    if (validator.registerOnValidatorChange) {\n      validator.registerOnValidatorChange(null);\n    }\n  });\n\n  if (control) control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nexport function setUpFormContainer(\n    control: FormGroup | FormArray, dir: AbstractFormGroupDirective | FormArrayName) {\n  if (control == null) _throwError(dir, 'Cannot find control with');\n  control.validator = Validators.compose([control.validator, dir.validator]);\n  control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir: NgControl) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir: AbstractControlDirective, message: string): void {\n  let /** @type {?} */ messageEnd: string;\n  if (dir.path.length > 1) {\n    messageEnd = `path: '${dir.path.join(' -> ')}'`;\n  } else if (dir.path[0]) {\n    messageEnd = `name: '${dir.path}'`;\n  } else {\n    messageEnd = 'unspecified name attribute';\n  }\n  throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeValidators(validators: Array<Validator|Function>): ValidatorFn {\n  return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nexport function composeAsyncValidators(validators: Array<Validator|Function>): AsyncValidatorFn {\n  return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n                              null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nexport function isPropertyUpdated(changes: {[key: string]: any}, viewModel: any): boolean {\n  if (!changes.hasOwnProperty('model')) return false;\n  const /** @type {?} */ change = changes['model'];\n\n  if (change.isFirstChange()) return true;\n  return !looseIdentical(viewModel, change.currentValue);\n}\n\nconst /** @type {?} */ BUILTIN_ACCESSORS = [\n  CheckboxControlValueAccessor,\n  RangeValueAccessor,\n  NumberValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nexport function isBuiltInAccessor(valueAccessor: ControlValueAccessor): boolean {\n  return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nexport function selectValueAccessor(\n    dir: NgControl, valueAccessors: ControlValueAccessor[]): ControlValueAccessor {\n  if (!valueAccessors) return null;\n\n  let /** @type {?} */ defaultAccessor: ControlValueAccessor;\n  let /** @type {?} */ builtinAccessor: ControlValueAccessor;\n  let /** @type {?} */ customAccessor: ControlValueAccessor;\n  valueAccessors.forEach((v: ControlValueAccessor) => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor)\n        _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n\n    } else {\n      if (customAccessor)\n        _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n\n  _throwError(dir, 'No valid value accessor for form control with');\n  return null;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/shared.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {EventEmitter} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {composeAsyncValidators, composeValidators} from './directives/shared';\nimport {AsyncValidatorFn, ValidationErrors, ValidatorFn} from './directives/validators';\nimport {toObservable} from './validators';\n\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexport const /** @type {?} */ VALID = 'VALID';\n\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexport const /** @type {?} */ INVALID = 'INVALID';\n\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexport const /** @type {?} */ PENDING = 'PENDING';\n\n/**\n * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n * calculations of validity or value.\n */\nexport const /** @type {?} */ DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control: AbstractControl, path: Array<string|number>| string, delimiter: string) {\n  if (path == null) return null;\n\n  if (!(path instanceof Array)) {\n    path = ( /** @type {?} */((<string>path))).split(delimiter);\n  }\n  if (path instanceof Array && (path.length === 0)) return null;\n\n  return ( /** @type {?} */((<Array<string|number>>path))).reduce((v, name) => {\n    if (v instanceof FormGroup) {\n      return v.controls[name] || null;\n    }\n\n    if (v instanceof FormArray) {\n      return v.at( /** @type {?} */((<number>name))) || null;\n    }\n\n    return null;\n  }, control);\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction coerceToValidator(validator: ValidatorFn | ValidatorFn[]): ValidatorFn {\n  return Array.isArray(validator) ? composeValidators(validator) : validator;\n}\n/**\n * @param {?} asyncValidator\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator: AsyncValidatorFn | AsyncValidatorFn[]):\n    AsyncValidatorFn {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n * {\\@link FormArray}.\n * \n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class AbstractControl {\n/**\n * \\@internal\n */\n_value: any;\n/**\n * \\@internal\n */\n_onCollectionChange = () => {};\nprivate _valueChanges: EventEmitter<any>;\nprivate _statusChanges: EventEmitter<any>;\nprivate _status: string;\nprivate _errors: ValidationErrors|null;\nprivate _pristine: boolean = true;\nprivate _touched: boolean = false;\nprivate _parent: FormGroup|FormArray;\nprivate _asyncValidationSubscription: any;\n/**\n * @param {?} validator\n * @param {?} asyncValidator\n */\nconstructor(public validator: ValidatorFn,\npublic asyncValidator: AsyncValidatorFn) {}\n/**\n * The value of the control.\n * @return {?}\n */\nget value(): any { return this._value; }\n/**\n * The parent control.\n * @return {?}\n */\nget parent(): FormGroup|FormArray { return this._parent; }\n/**\n * The validation status of the control. There are four possible\n * validation statuses:\n * \n * * **VALID**:  control has passed all validation checks\n * * **INVALID**: control has failed at least one validation check\n * * **PENDING**: control is in the midst of conducting a validation check\n * * **DISABLED**: control is exempt from validation checks\n * \n * These statuses are mutually exclusive, so a control cannot be\n * both valid AND invalid or invalid AND disabled.\n * @return {?}\n */\nget status(): string { return this._status; }\n/**\n * A control is `valid` when its `status === VALID`.\n * \n * In order to have this status, the control must have passed all its\n * validation checks.\n * @return {?}\n */\nget valid(): boolean { return this._status === VALID; }\n/**\n * A control is `invalid` when its `status === INVALID`.\n * \n * In order to have this status, the control must have failed\n * at least one of its validation checks.\n * @return {?}\n */\nget invalid(): boolean { return this._status === INVALID; }\n/**\n * A control is `pending` when its `status === PENDING`.\n * \n * In order to have this status, the control must be in the\n * middle of conducting a validation check.\n * @return {?}\n */\nget pending(): boolean { return this._status == PENDING; }\n/**\n * A control is `disabled` when its `status === DISABLED`.\n * \n * Disabled controls are exempt from validation checks and\n * are not included in the aggregate value of their ancestor\n * controls.\n * @return {?}\n */\nget disabled(): boolean { return this._status === DISABLED; }\n/**\n * A control is `enabled` as long as its `status !== DISABLED`.\n * \n * In other words, it has a status of `VALID`, `INVALID`, or\n * `PENDING`.\n * @return {?}\n */\nget enabled(): boolean { return this._status !== DISABLED; }\n/**\n * Returns any errors generated by failing validation. If there\n * are no errors, it will return null.\n * @return {?}\n */\nget errors(): ValidationErrors|null { return this._errors; }\n/**\n * A control is `pristine` if the user has not yet changed\n * the value in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget pristine(): boolean { return this._pristine; }\n/**\n * A control is `dirty` if the user has changed the value\n * in the UI.\n * \n * Note that programmatic changes to a control's value will\n * *not* mark it dirty.\n * @return {?}\n */\nget dirty(): boolean { return !this.pristine; }\n/**\n * A control is marked `touched` once the user has triggered\n * a `blur` event on it.\n * @return {?}\n */\nget touched(): boolean { return this._touched; }\n/**\n * A control is `untouched` if the user has not yet triggered\n * a `blur` event on it.\n * @return {?}\n */\nget untouched(): boolean { return !this._touched; }\n/**\n * Emits an event every time the value of the control changes, in\n * the UI or programmatically.\n * @return {?}\n */\nget valueChanges(): Observable<any> { return this._valueChanges; }\n/**\n * Emits an event every time the validation status of the control\n * is re-calculated.\n * @return {?}\n */\nget statusChanges(): Observable<any> { return this._statusChanges; }\n/**\n * Sets the synchronous validators that are active on this control.  Calling\n * this will overwrite any existing sync validators.\n * @param {?} newValidator\n * @return {?}\n */\nsetValidators(newValidator: ValidatorFn|ValidatorFn[]): void {\n    this.validator = coerceToValidator(newValidator);\n  }\n/**\n * Sets the async validators that are active on this control. Calling this\n * will overwrite any existing async validators.\n * @param {?} newValidator\n * @return {?}\n */\nsetAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]): void {\n    this.asyncValidator = coerceToAsyncValidator(newValidator);\n  }\n/**\n * Empties out the sync validator list.\n * @return {?}\n */\nclearValidators(): void { this.validator = null; }\n/**\n * Empties out the async validator list.\n * @return {?}\n */\nclearAsyncValidators(): void { this.asyncValidator = null; }\n/**\n * Marks the control as `touched`.\n * \n * This will also mark all direct ancestors as `touched` to maintain\n * the model.\n * @param {?=} __0\n * @return {?}\n */\nmarkAsTouched({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._touched = true;\n\n    if (this._parent && !onlySelf) {\n      this._parent.markAsTouched({onlySelf});\n    }\n  }\n/**\n * Marks the control as `untouched`.\n * \n * If the control has any children, it will also mark all children as `untouched`\n * to maintain the model, and re-calculate the `touched` status of all parent\n * controls.\n * @param {?=} __0\n * @return {?}\n */\nmarkAsUntouched({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._touched = false;\n\n    this._forEachChild(\n        (control: AbstractControl) => { control.markAsUntouched({onlySelf: true}); });\n\n    if (this._parent && !onlySelf) {\n      this._parent._updateTouched({onlySelf});\n    }\n  }\n/**\n * Marks the control as `dirty`.\n * \n * This will also mark all direct ancestors as `dirty` to maintain\n * the model.\n * @param {?=} __0\n * @return {?}\n */\nmarkAsDirty({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._pristine = false;\n\n    if (this._parent && !onlySelf) {\n      this._parent.markAsDirty({onlySelf});\n    }\n  }\n/**\n * Marks the control as `pristine`.\n * \n * If the control has any children, it will also mark all children as `pristine`\n * to maintain the model, and re-calculate the `pristine` status of all parent\n * controls.\n * @param {?=} __0\n * @return {?}\n */\nmarkAsPristine({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._pristine = true;\n\n    this._forEachChild((control: AbstractControl) => { control.markAsPristine({onlySelf: true}); });\n\n    if (this._parent && !onlySelf) {\n      this._parent._updatePristine({onlySelf});\n    }\n  }\n/**\n * Marks the control as `pending`.\n * @param {?=} __0\n * @return {?}\n */\nmarkAsPending({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._status = PENDING;\n\n    if (this._parent && !onlySelf) {\n      this._parent.markAsPending({onlySelf});\n    }\n  }\n/**\n * Disables the control. This means the control will be exempt from validation checks and\n * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n * \n * If the control has children, all children will be disabled to maintain the model.\n * @param {?=} __0\n * @return {?}\n */\ndisable({onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._status = DISABLED;\n    this._errors = null;\n    this._forEachChild((control: AbstractControl) => { control.disable({onlySelf: true}); });\n    this._updateValue();\n\n    if (emitEvent !== false) {\n      this._valueChanges.emit(this._value);\n      this._statusChanges.emit(this._status);\n    }\n\n    this._updateAncestors(onlySelf);\n    this._onDisabledChange.forEach((changeFn) => changeFn(true));\n  }\n/**\n * Enables the control. This means the control will be included in validation checks and\n * the aggregate value of its parent. Its status is re-calculated based on its value and\n * its validators.\n * \n * If the control has children, all children will be enabled.\n * @param {?=} __0\n * @return {?}\n */\nenable({onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._status = VALID;\n    this._forEachChild((control: AbstractControl) => { control.enable({onlySelf: true}); });\n    this.updateValueAndValidity({onlySelf: true, emitEvent});\n\n    this._updateAncestors(onlySelf);\n    this._onDisabledChange.forEach((changeFn) => changeFn(false));\n  }\n/**\n * @param {?} onlySelf\n * @return {?}\n */\nprivate _updateAncestors(onlySelf: boolean) {\n    if (this._parent && !onlySelf) {\n      this._parent.updateValueAndValidity();\n      this._parent._updatePristine();\n      this._parent._updateTouched();\n    }\n  }\n/**\n * @param {?} parent\n * @return {?}\n */\nsetParent(parent: FormGroup|FormArray): void { this._parent = parent; }\n/**\n * Sets the value of the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\nsetValue(value: any, options?: Object) {}\n/**\n * Patches the value of the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: any, options?: Object) {}\n/**\n * Resets the control. Abstract method (implemented in sub-classes).\n * @abstract\n * @param {?=} value\n * @param {?=} options\n * @return {?}\n */\nreset(value?: any, options?: Object) {}\n/**\n * Re-calculates the value and validation status of the control.\n * \n * By default, it will also update the value and validity of its ancestors.\n * @param {?=} __0\n * @return {?}\n */\nupdateValueAndValidity({onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._setInitialStatus();\n    this._updateValue();\n\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this._errors = this._runValidator();\n      this._status = this._calculateStatus();\n\n      if (this._status === VALID || this._status === PENDING) {\n        this._runAsyncValidator(emitEvent);\n      }\n    }\n\n    if (emitEvent !== false) {\n      this._valueChanges.emit(this._value);\n      this._statusChanges.emit(this._status);\n    }\n\n    if (this._parent && !onlySelf) {\n      this._parent.updateValueAndValidity({onlySelf, emitEvent});\n    }\n  }\n/**\n * \\@internal\n * @param {?=} __0\n * @return {?}\n */\n_updateTreeValidity({emitEvent}: {emitEvent?: boolean} = {emitEvent: true}) {\n    this._forEachChild((ctrl: AbstractControl) => ctrl._updateTreeValidity({emitEvent}));\n    this.updateValueAndValidity({onlySelf: true, emitEvent});\n  }\n/**\n * @return {?}\n */\nprivate _setInitialStatus() { this._status = this._allControlsDisabled() ? DISABLED : VALID; }\n/**\n * @return {?}\n */\nprivate _runValidator(): ValidationErrors|null {\n    return this.validator ? this.validator(this) : null;\n  }\n/**\n * @param {?} emitEvent\n * @return {?}\n */\nprivate _runAsyncValidator(emitEvent: boolean): void {\n    if (this.asyncValidator) {\n      this._status = PENDING;\n      const /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription =\n          obs.subscribe((errors: ValidationErrors | null) => this.setErrors(errors, {emitEvent}));\n    }\n  }\n/**\n * @return {?}\n */\nprivate _cancelExistingSubscription(): void {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n    }\n  }\n/**\n * Sets errors on a form control.\n * \n * This is used when validations are run manually by the user, rather than automatically.\n * \n * Calling `setErrors` will also update the validity of the parent control.\n * \n * ### Example\n * \n * ```\n * const login = new FormControl(\"someLogin\");\n * login.setErrors({\n *   \"notUnique\": true\n * });\n * \n * expect(login.valid).toEqual(false);\n * expect(login.errors).toEqual({\"notUnique\": true});\n * \n * login.setValue(\"someOtherLogin\");\n * \n * expect(login.valid).toEqual(true);\n * ```\n * @param {?} errors\n * @param {?=} __1\n * @return {?}\n */\nsetErrors(errors: ValidationErrors|null, {emitEvent}: {emitEvent?: boolean} = {}): void {\n    this._errors = errors;\n    this._updateControlsErrors(emitEvent !== false);\n  }\n/**\n * Retrieves a child control given the control's name or path.\n * \n * Paths can be passed in as an array or a string delimited by a dot.\n * \n * To get a control nested within a `person` sub-group:\n * \n * * `this.form.get('person.name');`\n * \n * -OR-\n * \n * * `this.form.get(['person', 'name']);`\n * @param {?} path\n * @return {?}\n */\nget(path: Array<string|number>|string): AbstractControl { return _find(this, path, '.'); }\n/**\n * Returns true if the control with the given path has the error specified. Otherwise\n * returns null or undefined.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\ngetError(errorCode: string, path: string[] = null): any {\n    const /** @type {?} */ control = path ? this.get(path) : this;\n    return control && control._errors ? control._errors[errorCode] : null;\n  }\n/**\n * Returns true if the control with the given path has the error specified. Otherwise\n * returns false.\n * \n * If no path is given, it checks for the error on the present control.\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\nhasError(errorCode: string, path: string[] = null): boolean {\n    return !!this.getError(errorCode, path);\n  }\n/**\n * Retrieves the top-level ancestor of this control.\n * @return {?}\n */\nget root(): AbstractControl {\n    let /** @type {?} */ x: AbstractControl = this;\n\n    while (x._parent) {\n      x = x._parent;\n    }\n\n    return x;\n  }\n/**\n * \\@internal\n * @param {?} emitEvent\n * @return {?}\n */\n_updateControlsErrors(emitEvent: boolean): void {\n    this._status = this._calculateStatus();\n\n    if (emitEvent) {\n      this._statusChanges.emit(this._status);\n    }\n\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_initObservables() {\n    this._valueChanges = new EventEmitter();\n    this._statusChanges = new EventEmitter();\n  }\n/**\n * @return {?}\n */\nprivate _calculateStatus(): string {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this._errors) return INVALID;\n    if (this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n/**\n * \\@internal\n * @abstract\n * @return {?}\n */\n_updateValue() {}\n/**\n * \\@internal\n * @abstract\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function) {}\n/**\n * \\@internal\n * @abstract\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function) {}\n/**\n * \\@internal\n * @abstract\n * @return {?}\n */\n_allControlsDisabled() {}\n/**\n * \\@internal\n * @param {?} status\n * @return {?}\n */\n_anyControlsHaveStatus(status: string): boolean {\n    return this._anyControls((control: AbstractControl) => control.status === status);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_anyControlsDirty(): boolean {\n    return this._anyControls((control: AbstractControl) => control.dirty);\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_anyControlsTouched(): boolean {\n    return this._anyControls((control: AbstractControl) => control.touched);\n  }\n/**\n * \\@internal\n * @param {?=} __0\n * @return {?}\n */\n_updatePristine({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._pristine = !this._anyControlsDirty();\n\n    if (this._parent && !onlySelf) {\n      this._parent._updatePristine({onlySelf});\n    }\n  }\n/**\n * \\@internal\n * @param {?=} __0\n * @return {?}\n */\n_updateTouched({onlySelf}: {onlySelf?: boolean} = {}): void {\n    this._touched = this._anyControlsTouched();\n\n    if (this._parent && !onlySelf) {\n      this._parent._updateTouched({onlySelf});\n    }\n  }\n/**\n * \\@internal\n */\n_onDisabledChange: Function[] = [];\n/**\n * \\@internal\n * @param {?} formState\n * @return {?}\n */\n_isBoxedValue(formState: any): boolean {\n    return typeof formState === 'object' && formState !== null &&\n        Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n  }\n/**\n * \\@internal\n * @param {?} fn\n * @return {?}\n */\n_registerOnCollectionChange(fn: () => void): void { this._onCollectionChange = fn; }\n}\n\nfunction AbstractControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._value;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._onCollectionChange;\n/** @type {?} */\nAbstractControl.prototype._valueChanges;\n/** @type {?} */\nAbstractControl.prototype._statusChanges;\n/** @type {?} */\nAbstractControl.prototype._status;\n/** @type {?} */\nAbstractControl.prototype._errors;\n/** @type {?} */\nAbstractControl.prototype._pristine;\n/** @type {?} */\nAbstractControl.prototype._touched;\n/** @type {?} */\nAbstractControl.prototype._parent;\n/** @type {?} */\nAbstractControl.prototype._asyncValidationSubscription;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractControl.prototype._onDisabledChange;\n/** @type {?} */\nAbstractControl.prototype.validator;\n/** @type {?} */\nAbstractControl.prototype.asyncValidator;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validation status of an individual form control.\n * \n * It is one of the three fundamental building blocks of Angular forms, along with\n * {\\@link FormGroup} and {\\@link FormArray}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n * first argument. Example:\n * \n * ```ts\n * const ctrl = new FormControl('some value');\n * console.log(ctrl.value);     // 'some value'\n * ```\n * \n * You can also initialize the control with a form state object on instantiation,\n * which includes both the value and whether or not the control is disabled.\n * You can't use the value key without the disabled key; both are required\n * to use this way of initialization.\n * \n * ```ts\n * const ctrl = new FormControl({value: 'n/a', disabled: true});\n * console.log(ctrl.value);     // 'n/a'\n * console.log(ctrl.status);   // 'DISABLED'\n * ```\n * \n * To include a sync validator (or an array of sync validators) with the control,\n * pass it in as the second argument. Async validators are also supported, but\n * have to be passed in separately as the third arg.\n * \n * ```ts\n * const ctrl = new FormControl('', Validators.required);\n * console.log(ctrl.value);     // ''\n * console.log(ctrl.status);   // 'INVALID'\n * ```\n * \n * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormControl extends AbstractControl {\n/**\n * \\@internal\n */\n_onChange: Function[] = [];\n/**\n * @param {?=} formState\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\n      formState: any = null, validator: ValidatorFn|ValidatorFn[] = null,\n      asyncValidator: AsyncValidatorFn|AsyncValidatorFn[] = null) {\n    super(coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n    this._applyFormState(formState);\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n    this._initObservables();\n  }\n/**\n * Set the value of the form control to `value`.\n * \n * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n * and not its parent component. This defaults to false.\n * \n * If `emitEvent` is `true`, this\n * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n * to true (as it falls through to `updateValueAndValidity`).\n * \n * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n * specified.\n * \n * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\nsetValue(value: any, {onlySelf, emitEvent, emitModelToViewChange, emitViewToModelChange}: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    this._value = value;\n    if (this._onChange.length && emitModelToViewChange !== false) {\n      this._onChange.forEach((changeFn) => changeFn(this._value, emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity({onlySelf, emitEvent});\n  }\n/**\n * Patches the value of a control.\n * \n * This function is functionally the same as {\\@link FormControl.setValue} at this level.\n * It exists for symmetry with {\\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n * where it does behave differently.\n * @param {?} value\n * @param {?=} options\n * @return {?}\n */\npatchValue(value: any, options: {\n    onlySelf?: boolean,\n    emitEvent?: boolean,\n    emitModelToViewChange?: boolean,\n    emitViewToModelChange?: boolean\n  } = {}): void {\n    this.setValue(value, options);\n  }\n/**\n * Resets the form control. This means by default:\n * \n * * it is marked as `pristine`\n * * it is marked as `untouched`\n * * value is set to null\n * \n * You can also reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n * \n * Ex:\n * \n * ```ts\n * this.control.reset('Nancy');\n * \n * console.log(this.control.value);  // 'Nancy'\n * ```\n * \n * OR\n * \n * ```\n * this.control.reset({value: 'Nancy', disabled: true});\n * \n * console.log(this.control.value);  // 'Nancy'\n * console.log(this.control.status);  // 'DISABLED'\n * ```\n * @param {?=} formState\n * @param {?=} __1\n * @return {?}\n */\nreset(formState: any = null, {onlySelf, emitEvent}: {onlySelf?: boolean,\n                                                       emitEvent?: boolean} = {}): void {\n    this._applyFormState(formState);\n    this.markAsPristine({onlySelf});\n    this.markAsUntouched({onlySelf});\n    this.setValue(this._value, {onlySelf, emitEvent});\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue() {}\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean { return false; }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean { return this.disabled; }\n/**\n * Register a listener for change events.\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void { this._onChange.push(fn); }\n/**\n * \\@internal\n * @return {?}\n */\n_clearChangeFns(): void {\n    this._onChange = [];\n    this._onDisabledChange = [];\n    this._onCollectionChange = () => {};\n  }\n/**\n * Register a listener for disabled events.\n * @param {?} fn\n * @return {?}\n */\nregisterOnDisabledChange(fn: (isDisabled: boolean) => void): void {\n    this._onDisabledChange.push(fn);\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function): void {}\n/**\n * @param {?} formState\n * @return {?}\n */\nprivate _applyFormState(formState: any) {\n    if (this._isBoxedValue(formState)) {\n      this._value = formState.value;\n      formState.disabled ? this.disable({onlySelf: true, emitEvent: false}) :\n                           this.enable({onlySelf: true, emitEvent: false});\n    } else {\n      this._value = formState;\n    }\n  }\n}\n\nfunction FormControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nFormControl.prototype._onChange;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n * instances.\n * \n * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n * with each control name as the key.  It calculates its status by reducing the statuses\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n * \n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormArray}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n * argument. The key for each child will be the name under which it is registered.\n * \n * ### Example\n * \n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n * \n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n * \n * You can also include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n * \n * ### Example\n * \n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n * \n * \n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormGroup extends AbstractControl {\n/**\n * @param {?} controls\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\npublic controls: {[key: string]: AbstractControl}, validator: ValidatorFn = null,\n      asyncValidator: AsyncValidatorFn = null) {\n    super(validator, asyncValidator);\n    this._initObservables();\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n/**\n * Registers a control with the group's list of controls.\n * \n * This method does not update value or validity of the control, so for\n * most cases you'll want to use {\\@link FormGroup.addControl} instead.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\nregisterControl(name: string, control: AbstractControl): AbstractControl {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n/**\n * Add a control to this group.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\naddControl(name: string, control: AbstractControl): void {\n    this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Remove a control from this group.\n * @param {?} name\n * @return {?}\n */\nremoveControl(name: string): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Replace an existing control.\n * @param {?} name\n * @param {?} control\n * @return {?}\n */\nsetControl(name: string, control: AbstractControl): void {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete (this.controls[name]);\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Check whether there is an enabled control with the given name in the group.\n * \n * It will return false for disabled controls. If you'd like to check for\n * existence in the group only, use {\\@link AbstractControl.get} instead.\n * @param {?} controlName\n * @return {?}\n */\ncontains(controlName: string): boolean {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n/**\n *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n *  the structure of the group, with control names as keys.\n * \n * This method performs strict checks, so it will throw an error if you try\n * to set the value of a control that doesn't exist or if you exclude the\n * value of a control.\n * \n *  ### Example\n * \n *  ```\n *  const form = new FormGroup({\n *     first: new FormControl(),\n *     last: new FormControl()\n *  });\n *  console.log(form.value);   // {first: null, last: null}\n * \n *  form.setValue({first: 'Nancy', last: 'Drew'});\n *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n * \n *  ```\n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\nsetValue(\n      value: {[key: string]: any},\n      {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    this._checkAllValuesPresent(value);\n    Object.keys(value).forEach(name => {\n      this._throwIfControlMissing(name);\n      this.controls[name].setValue(value[name], {onlySelf: true, emitEvent});\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n  }\n/**\n *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n *  names as keys, and will do its best to match the values to the correct controls\n *  in the group.\n * \n *  It accepts both super-sets and sub-sets of the group without throwing an error.\n * \n *  ### Example\n * \n *  ```\n *  const form = new FormGroup({\n *     first: new FormControl(),\n *     last: new FormControl()\n *  });\n *  console.log(form.value);   // {first: null, last: null}\n * \n *  form.patchValue({first: 'Nancy'});\n *  console.log(form.value);   // {first: 'Nancy', last: null}\n * \n *  ```\n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\npatchValue(\n      value: {[key: string]: any},\n      {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}): void {\n    Object.keys(value).forEach(name => {\n      if (this.controls[name]) {\n        this.controls[name].patchValue(value[name], {onlySelf: true, emitEvent});\n      }\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n  }\n/**\n * Resets the {\\@link FormGroup}. This means by default:\n * \n * * The group and all descendants are marked `pristine`\n * * The group and all descendants are marked `untouched`\n * * The value of all descendants will be null or null maps\n * \n * You can also reset to a specific form state by passing in a map of states\n * that matches the structure of your form, with control names as keys. The state\n * can be a standalone value or a form state object with both a value and a disabled\n * status.\n * \n * ### Example\n * \n * ```ts\n * this.form.reset({first: 'name', last: 'last name'});\n * \n * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n * ```\n * \n * - OR -\n * \n * ```\n * this.form.reset({\n *   first: {value: 'name', disabled: true},\n *   last: 'last'\n * });\n * \n * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n * console.log(this.form.get('first').status);  // 'DISABLED'\n * ```\n * @param {?=} value\n * @param {?=} __1\n * @return {?}\n */\nreset(value: any = {}, {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      control.reset(value[name], {onlySelf: true, emitEvent});\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n    this._updatePristine({onlySelf});\n    this._updateTouched({onlySelf});\n  }\n/**\n * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n * \n * If you'd like to include all values regardless of disabled status, use this method.\n * Otherwise, the `value` property is the best way to get the value of the group.\n * @return {?}\n */\ngetRawValue(): any {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          acc[name] = control instanceof FormControl ? control.value : ( /** @type {?} */((<any>control))).getRawValue();\n          return acc;\n        });\n  }\n/**\n * \\@internal\n * @param {?} name\n * @return {?}\n */\n_throwIfControlMissing(name: string): void {\n    if (!Object.keys(this.controls).length) {\n      throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.controls[name]) {\n      throw new Error(`Cannot find form control with name: ${name}.`);\n    }\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: (v: any, k: string) => void): void {\n    Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue(): void { this._value = this._reduceValue(); }\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean {\n    let /** @type {?} */ res = false;\n    this._forEachChild((control: AbstractControl, name: string) => {\n      res = res || (this.contains(name) && condition(control));\n    });\n    return res;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reduceValue() {\n    return this._reduceChildren(\n        {}, (acc: {[k: string]: AbstractControl}, control: AbstractControl, name: string) => {\n          if (control.enabled || this.disabled) {\n            acc[name] = control.value;\n          }\n          return acc;\n        });\n  }\n/**\n * \\@internal\n * @param {?} initValue\n * @param {?} fn\n * @return {?}\n */\n_reduceChildren(initValue: any, fn: Function) {\n    let /** @type {?} */ res = initValue;\n    this._forEachChild(\n        (control: AbstractControl, name: string) => { res = fn(res, control, name); });\n    return res;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean {\n    for (const /** @type {?} */ controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, name: string) => {\n      if (value[name] === undefined) {\n        throw new Error(`Must supply a value for form control with name: '${name}'.`);\n      }\n    });\n  }\n}\n\nfunction FormGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroup.prototype.controls;\n}\n\n/**\n * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n * {\\@link FormGroup} or {\\@link FormArray} instances.\n * \n * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n * It calculates its status by reducing the statuses of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n * \n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {\\@link FormControl} and {\\@link FormGroup}.\n * \n * \\@howToUse \n * \n * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n * argument.\n * \n * ### Example\n * \n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n * \n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n * \n * You can also include array-level validators as the second arg, or array-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n * \n * ### Adding or removing controls\n * \n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n * \n * * **npm package**: `\\@angular/forms`\n * \n * \\@stable\n */\nexport class FormArray extends AbstractControl {\n/**\n * @param {?} controls\n * @param {?=} validator\n * @param {?=} asyncValidator\n */\nconstructor(\npublic controls: AbstractControl[], validator: ValidatorFn = null,\n      asyncValidator: AsyncValidatorFn = null) {\n    super(validator, asyncValidator);\n    this._initObservables();\n    this._setUpControls();\n    this.updateValueAndValidity({onlySelf: true, emitEvent: false});\n  }\n/**\n * Get the {\\@link AbstractControl} at the given `index` in the array.\n * @param {?} index\n * @return {?}\n */\nat(index: number): AbstractControl { return this.controls[index]; }\n/**\n * Insert a new {\\@link AbstractControl} at the end of the array.\n * @param {?} control\n * @return {?}\n */\npush(control: AbstractControl): void {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n * @param {?} index\n * @param {?} control\n * @return {?}\n */\ninsert(index: number, control: AbstractControl): void {\n    this.controls.splice(index, 0, control);\n\n    this._registerControl(control);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Remove the control at the given `index` in the array.\n * @param {?} index\n * @return {?}\n */\nremoveAt(index: number): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Replace an existing control.\n * @param {?} index\n * @param {?} control\n * @return {?}\n */\nsetControl(index: number, control: AbstractControl): void {\n    if (this.controls[index]) this.controls[index]._registerOnCollectionChange(() => {});\n    this.controls.splice(index, 1);\n\n    if (control) {\n      this.controls.splice(index, 0, control);\n      this._registerControl(control);\n    }\n\n    this.updateValueAndValidity();\n    this._onCollectionChange();\n  }\n/**\n * Length of the control array.\n * @return {?}\n */\nget length(): number { return this.controls.length; }\n/**\n *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n *  the structure of the control.\n * \n * This method performs strict checks, so it will throw an error if you try\n * to set the value of a control that doesn't exist or if you exclude the\n * value of a control.\n * \n *  ### Example\n * \n *  ```\n *  const arr = new FormArray([\n *     new FormControl(),\n *     new FormControl()\n *  ]);\n *  console.log(arr.value);   // [null, null]\n * \n *  arr.setValue(['Nancy', 'Drew']);\n *  console.log(arr.value);   // ['Nancy', 'Drew']\n *  ```\n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\nsetValue(value: any[], {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._checkAllValuesPresent(value);\n    value.forEach((newValue: any, index: number) => {\n      this._throwIfControlMissing(index);\n      this.at(index).setValue(newValue, {onlySelf: true, emitEvent});\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n  }\n/**\n *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n *  structure of the control, and will do its best to match the values to the correct\n *  controls in the group.\n * \n *  It accepts both super-sets and sub-sets of the array without throwing an error.\n * \n *  ### Example\n * \n *  ```\n *  const arr = new FormArray([\n *     new FormControl(),\n *     new FormControl()\n *  ]);\n *  console.log(arr.value);   // [null, null]\n * \n *  arr.patchValue(['Nancy']);\n *  console.log(arr.value);   // ['Nancy', null]\n *  ```\n * @param {?} value\n * @param {?=} __1\n * @return {?}\n */\npatchValue(value: any[], {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    value.forEach((newValue: any, index: number) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {onlySelf: true, emitEvent});\n      }\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n  }\n/**\n * Resets the {\\@link FormArray}. This means by default:\n * \n * * The array and all descendants are marked `pristine`\n * * The array and all descendants are marked `untouched`\n * * The value of all descendants will be null or null maps\n * \n * You can also reset to a specific form state by passing in an array of states\n * that matches the structure of the control. The state can be a standalone value\n * or a form state object with both a value and a disabled status.\n * \n * ### Example\n * \n * ```ts\n * this.arr.reset(['name', 'last name']);\n * \n * console.log(this.arr.value);  // ['name', 'last name']\n * ```\n * \n * - OR -\n * \n * ```\n * this.arr.reset([\n *   {value: 'name', disabled: true},\n *   'last'\n * ]);\n * \n * console.log(this.arr.value);  // ['name', 'last name']\n * console.log(this.arr.get(0).status);  // 'DISABLED'\n * ```\n * @param {?=} value\n * @param {?=} __1\n * @return {?}\n */\nreset(value: any = [], {onlySelf, emitEvent}: {onlySelf?: boolean, emitEvent?: boolean} = {}):\n      void {\n    this._forEachChild((control: AbstractControl, index: number) => {\n      control.reset(value[index], {onlySelf: true, emitEvent});\n    });\n    this.updateValueAndValidity({onlySelf, emitEvent});\n    this._updatePristine({onlySelf});\n    this._updateTouched({onlySelf});\n  }\n/**\n * The aggregate value of the array, including any disabled controls.\n * \n * If you'd like to include all values regardless of disabled status, use this method.\n * Otherwise, the `value` property is the best way to get the value of the array.\n * @return {?}\n */\ngetRawValue(): any[] {\n    return this.controls.map((control: AbstractControl) => {\n      return control instanceof FormControl ? control.value : ( /** @type {?} */((<any>control))).getRawValue();\n    });\n  }\n/**\n * \\@internal\n * @param {?} index\n * @return {?}\n */\n_throwIfControlMissing(index: number): void {\n    if (!this.controls.length) {\n      throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n    }\n    if (!this.at(index)) {\n      throw new Error(`Cannot find form control at index ${index}`);\n    }\n  }\n/**\n * \\@internal\n * @param {?} cb\n * @return {?}\n */\n_forEachChild(cb: Function): void {\n    this.controls.forEach((control: AbstractControl, index: number) => { cb(control, index); });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateValue(): void {\n    this._value = this.controls.filter((control) => control.enabled || this.disabled)\n                      .map((control) => control.value);\n  }\n/**\n * \\@internal\n * @param {?} condition\n * @return {?}\n */\n_anyControls(condition: Function): boolean {\n    return this.controls.some((control: AbstractControl) => control.enabled && condition(control));\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_setUpControls(): void {\n    this._forEachChild((control: AbstractControl) => this._registerControl(control));\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_checkAllValuesPresent(value: any): void {\n    this._forEachChild((control: AbstractControl, i: number) => {\n      if (value[i] === undefined) {\n        throw new Error(`Must supply a value for form control at index: ${i}.`);\n      }\n    });\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_allControlsDisabled(): boolean {\n    for (const /** @type {?} */ control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n/**\n * @param {?} control\n * @return {?}\n */\nprivate _registerControl(control: AbstractControl) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n}\n\nfunction FormArray_tsickle_Closure_declarations() {\n/** @type {?} */\nFormArray.prototype.controls;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/model.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../../validators';\nimport {ControlContainer} from '../control_container';\nimport {Form} from '../form_interface';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {cleanUpControl, composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from '../shared';\n\nimport {FormControlName} from './form_control_name';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n * and {\\@link FormArrayName} directives.\n * \n * **Set value**: You can set the form's initial value when instantiating the\n * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n * re-calculated.\n * \n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormGroupDirective extends ControlContainer implements Form,\n    OnChanges {\nprivate _submitted: boolean = false;\nprivate _oldForm: FormGroup;\n  directives: FormControlName[] = [];\n\n   form: FormGroup = null;\n   ngSubmit = new EventEmitter();\n/**\n * @param {?} _validators\n * @param {?} _asyncValidators\n */\nconstructor(\nprivate _validators: any[],\nprivate _asyncValidators: any[]) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (changes.hasOwnProperty('form')) {\n      this._updateValidators();\n      this._updateDomValue();\n      this._updateRegistrations();\n    }\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: FormControlName): FormControl {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n    return ctrl;\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: FormControlName): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: FormControlName): void { remove(this.directives, dir); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: FormGroupName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: FormGroupName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: FormGroupName): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormArray(dir: FormArrayName): void {\n    const /** @type {?} */ ctrl: any = this.form.get(dir.path);\n    setUpFormContainer(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormArray(dir: FormArrayName): void {}\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormArray(dir: FormArrayName): FormArray { return /** @type {?} */(( <FormArray>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: FormControlName, value: any): void {\n    const /** @type {?} */ ctrl  = /** @type {?} */(( <FormControl>this.form.get(dir.path)));\n    ctrl.setValue(value);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_updateDomValue() {\n    this.directives.forEach(dir => {\n      const /** @type {?} */ newCtrl: any = this.form.get(dir.path);\n      if (dir._control !== newCtrl) {\n        cleanUpControl(dir._control, dir);\n        if (newCtrl) setUpControl(newCtrl, dir);\n        dir._control = newCtrl;\n      }\n    });\n\n    this.form._updateTreeValidity({emitEvent: false});\n  }\n/**\n * @return {?}\n */\nprivate _updateRegistrations() {\n    this.form._registerOnCollectionChange(() => this._updateDomValue());\n    if (this._oldForm) this._oldForm._registerOnCollectionChange(() => {});\n    this._oldForm = this.form;\n  }\n/**\n * @return {?}\n */\nprivate _updateValidators() {\n    const /** @type {?} */ sync = composeValidators(this._validators);\n    this.form.validator = Validators.compose([this.form.validator, sync]);\n\n    const /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n    this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n  }\n/**\n * @return {?}\n */\nprivate _checkFormPresent() {\n    if (!this.form) {\n      ReactiveErrors.missingFormException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[formGroup]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  exportAs: 'ngForm'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input, args: ['formGroup', ] },],\n'ngSubmit': [{ type: Output },],\n};\n}\n\nfunction FormGroupDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupDirective.ctorParameters;\n/** @type {?} */\nFormGroupDirective.propDecorators;\n/** @type {?} */\nFormGroupDirective.prototype._submitted;\n/** @type {?} */\nFormGroupDirective.prototype._oldForm;\n/** @type {?} */\nFormGroupDirective.prototype.directives;\n/** @type {?} */\nFormGroupDirective.prototype.form;\n/** @type {?} */\nFormGroupDirective.prototype.ngSubmit;\n/** @type {?} */\nFormGroupDirective.prototype._validators;\n/** @type {?} */\nFormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_group_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormArray} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath} from '../shared';\nimport {AsyncValidatorFn, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\n\nexport const /** @type {?} */ formGroupNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n * will look for a {\\@link FormGroup} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n * \n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n * \n * **Access the group**: You can access the associated {\\@link FormGroup} using the\n * {\\@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n * \n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n * \n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormGroup}, or you can set it programmatically later using\n * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n * \\@stable\n */\nexport class FormGroupName extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.groupParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formGroupName]', providers: [formGroupNameProvider]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formGroupName', ] },],\n};\n}\n\nfunction FormGroupName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormGroupName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormGroupName.ctorParameters;\n/** @type {?} */\nFormGroupName.propDecorators;\n/** @type {?} */\nFormGroupName.prototype.name;\n}\n\n\nexport const /** @type {?} */ formArrayNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n * \n * \\@howToUse \n * \n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n * will look for a {\\@link FormArray} registered with that name in the parent\n * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n * \n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n * \n * **Access the array**: You can access the associated {\\@link FormArray} using the\n * {\\@link AbstractControl.get} method on the parent {\\@link FormGroup}.\n * Ex: `this.form.get('cities')`.\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n * \n * **Set the value**: You can set an initial value for each child control when instantiating\n * the {\\@link FormArray}, or you can set the value programmatically later using the\n * {\\@link FormArray}'s {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}\n * methods.\n * \n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl.valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl.statusChanges} event to be notified when the validation\n * status is re-calculated.\n * \n * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n * calling its {\\@link FormArray.push} method.\n *  Ex: `this.form.get('cities').push(new FormControl());`\n * \n * ### Example\n * \n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n * \\@stable\n */\nexport class FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n/**\n * \\@internal\n */\n_parent: ControlContainer;\n/**\n * \\@internal\n */\n_validators: any[];\n/**\n * \\@internal\n */\n_asyncValidators: any[];\n\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._checkParentType();\n    this.formDirective.addFormArray(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormArray(this);\n    }\n  }\n/**\n * @return {?}\n */\nget control(): FormArray { return this.formDirective.getFormArray(this); }\n/**\n * @return {?}\n */\nget formDirective(): FormGroupDirective {\n    return this._parent ? /** @type {?} */(( <FormGroupDirective>this._parent.formDirective)) : null;\n  }\n/**\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._validators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.arrayParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formArrayName]', providers: [formArrayNameProvider]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formArrayName', ] },],\n};\n}\n\nfunction FormArrayName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormArrayName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormArrayName.ctorParameters;\n/** @type {?} */\nFormArrayName.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._parent;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._validators;\n/**\n * \\@internal\n * @type {?}\n */\nFormArrayName.prototype._asyncValidators;\n/** @type {?} */\nFormArrayName.prototype.name;\n}\n\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent: ControlContainer): boolean {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n      !(parent instanceof FormArrayName);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_group_name.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\nimport {FormArrayName, FormGroupName} from './form_group_name';\n\nexport const /** @type {?} */ controlNameBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlName)\n};\n/**\n * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n * element by name.\n * \n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n * \n * \\@howToUse \n * \n * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n * `[formGroup]`).\n * \n * It accepts the string name of the {\\@link FormControl} instance you want to\n * link, and will look for a {\\@link FormControl} registered with that name in the\n * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n * \n * **Access the control**: You can access the {\\@link FormControl} associated with\n * this directive by using the {\\@link AbstractControl.get} method.\n * Ex: `this.form.get('first');`\n * \n * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n * See a full list of available properties in {\\@link AbstractControl}.\n * \n *  **Set value**: You can set an initial value for the control when instantiating the\n *  {\\@link FormControl}, or you can set it programmatically later using\n *  {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * In this example, we create form controls for first name and last name.\n * \n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n * \n * To see `formControlName` examples with different form control types, see:\n * \n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: {\\@link ReactiveFormsModule}\n * \n *  \\@stable\n */\nexport class FormControlName extends NgControl implements OnChanges, OnDestroy {\nprivate _added = false;\n/**\n * \\@internal\n */\nviewModel: any;\n/**\n * \\@internal\n */\n_control: FormControl;\n\n   name: string;\n\n  // TODO(kara):  Replace ngModel with reactive API\n   model: any;\n   update = new EventEmitter();\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset isDisabled(isDisabled: boolean) { ReactiveErrors.disabledAttrWarning(); }\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(\n         parent: ControlContainer,\n         validators: Array<Validator|ValidatorFn>,\n         asyncValidators:\n          Array<AsyncValidator|AsyncValidatorFn>,\n         valueAccessors: ControlValueAccessor[]) {\n    super();\n    this._parent = parent;\n    this._rawValidators = validators || [];\n    this._rawAsyncValidators = asyncValidators || [];\n    this.valueAccessor = selectValueAccessor(this, valueAccessors);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (!this._added) this._setUpControl();\n    if (isPropertyUpdated(changes, this.viewModel)) {\n      this.viewModel = this.model;\n      this.formDirective.updateModel(this, this.model);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeControl(this);\n    }\n  }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n    this.viewModel = newValue;\n    this.update.emit(newValue);\n  }\n/**\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * @return {?}\n */\nget formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn {\n    return composeAsyncValidators(this._rawAsyncValidators);\n  }\n/**\n * @return {?}\n */\nget control(): FormControl { return this._control; }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n    if (!(this._parent instanceof FormGroupName) &&\n        this._parent instanceof AbstractFormGroupDirective) {\n      ReactiveErrors.ngModelGroupException();\n    } else if (\n        !(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n        !(this._parent instanceof FormArrayName)) {\n      ReactiveErrors.controlParentException();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _setUpControl() {\n    this._checkParentType();\n    this._control = this.formDirective.addControl(this);\n    if (this.control.disabled && this.valueAccessor.setDisabledState) {\n      this.valueAccessor.setDisabledState(true);\n    }\n    this._added = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName]', providers: [controlNameBinding]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formControlName', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction FormControlName_tsickle_Closure_declarations() {\n/** @type {?} */\nFormControlName.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormControlName.ctorParameters;\n/** @type {?} */\nFormControlName.propDecorators;\n/** @type {?} */\nFormControlName.prototype._added;\n/**\n * \\@internal\n * @type {?}\n */\nFormControlName.prototype.viewModel;\n/**\n * \\@internal\n * @type {?}\n */\nFormControlName.prototype._control;\n/** @type {?} */\nFormControlName.prototype.name;\n/** @type {?} */\nFormControlName.prototype.model;\n/** @type {?} */\nFormControlName.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_control_name.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractControl} from '../model';\nimport {ValidationErrors} from './validators';\n/**\n * Base class for control directives.\n * \n * Only used internally in the forms module.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class AbstractControlDirective {\n/**\n * @return {?}\n */\nget control(): AbstractControl { throw new Error('unimplemented'); }\n/**\n * @return {?}\n */\nget value(): any { return this.control ? this.control.value : null; }\n/**\n * @return {?}\n */\nget valid(): boolean { return this.control ? this.control.valid : null; }\n/**\n * @return {?}\n */\nget invalid(): boolean { return this.control ? this.control.invalid : null; }\n/**\n * @return {?}\n */\nget pending(): boolean { return this.control ? this.control.pending : null; }\n/**\n * @return {?}\n */\nget errors(): ValidationErrors|null { return this.control ? this.control.errors : null; }\n/**\n * @return {?}\n */\nget pristine(): boolean { return this.control ? this.control.pristine : null; }\n/**\n * @return {?}\n */\nget dirty(): boolean { return this.control ? this.control.dirty : null; }\n/**\n * @return {?}\n */\nget touched(): boolean { return this.control ? this.control.touched : null; }\n/**\n * @return {?}\n */\nget untouched(): boolean { return this.control ? this.control.untouched : null; }\n/**\n * @return {?}\n */\nget disabled(): boolean { return this.control ? this.control.disabled : null; }\n/**\n * @return {?}\n */\nget enabled(): boolean { return this.control ? this.control.enabled : null; }\n/**\n * @return {?}\n */\nget statusChanges(): Observable<any> { return this.control ? this.control.statusChanges : null; }\n/**\n * @return {?}\n */\nget valueChanges(): Observable<any> { return this.control ? this.control.valueChanges : null; }\n/**\n * @return {?}\n */\nget path(): string[] { return null; }\n/**\n * @param {?=} value\n * @return {?}\n */\nreset(value: any = undefined): void {\n    if (this.control) this.control.reset(value);\n  }\n/**\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\nhasError(errorCode: string, path: string[] = null): boolean {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n/**\n * @param {?} errorCode\n * @param {?=} path\n * @return {?}\n */\ngetError(errorCode: string, path: string[] = null): any {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/abstract_control_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {Form} from './form_interface';\n/**\n * A directive that contains multiple {\\@link NgControl}s.\n * \n * Only used by the forms module.\n * \n * \\@stable\n */\nexport class ControlContainer extends AbstractControlDirective {\n  name: string;\n/**\n * Get the form to which this container belongs.\n * @return {?}\n */\nget formDirective(): Form { return null; }\n/**\n * Get the path to this container.\n * @return {?}\n */\nget path(): string[] { return null; }\n}\n\nfunction ControlContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nControlContainer.prototype.name;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/control_container.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Renderer, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n * \n *  ### Example\n *  ```\n *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n *  ```\n * \n *  \\@stable\n */\nexport class CheckboxControlValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n  host: {'(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()'},\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\nfunction CheckboxControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxControlValueAccessor.ctorParameters;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype.onChange;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype._renderer;\n/** @type {?} */\nCheckboxControlValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/checkbox_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Inject, InjectionToken, Optional, Renderer, forwardRef} from '@angular/core';\nimport {ɵgetDOM as getDOM} from '@angular/platform-browser';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ DEFAULT_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid(): boolean {\n  const /** @type {?} */ userAgent = getDOM() ? getDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n */\nexport const COMPOSITION_BUFFER_MODE = new InjectionToken<boolean>('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"text\" name=\"searchQuery\" ngModel>\n *  ```\n * \n *  \\@stable\n */\nexport class DefaultValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\nprivate _composing = false;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _compositionMode\n */\nconstructor(\nprivate _renderer: Renderer,\nprivate _elementRef: ElementRef,\nprivate _compositionMode: boolean) {\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid();\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => void): void { this.onChange = fn; }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\n_handleInput(value: any): void {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this.onChange(value);\n    }\n  }\n/**\n * @return {?}\n */\n_compositionStart(): void { this._composing = true; }\n/**\n * @param {?} value\n * @return {?}\n */\n_compositionEnd(value: any): void {\n    this._composing = false;\n    this._compositionMode && this.onChange(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n  // TODO: vsavkin replace the above selector with the one below it once\n  // https://github.com/angular/angular/issues/3011 is implemented\n  // selector: '[ngModel],[formControl],[formControlName]',\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)'\n  },\n  providers: [DEFAULT_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE, ] }, ]},\n];\n}\n\nfunction DefaultValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDefaultValueAccessor.ctorParameters;\n/** @type {?} */\nDefaultValueAccessor.prototype.onChange;\n/** @type {?} */\nDefaultValueAccessor.prototype.onTouched;\n/**\n * Whether the user is creating a composition string (IME events).\n * @type {?}\n */\nDefaultValueAccessor.prototype._composing;\n/** @type {?} */\nDefaultValueAccessor.prototype._renderer;\n/** @type {?} */\nDefaultValueAccessor.prototype._elementRef;\n/** @type {?} */\nDefaultValueAccessor.prototype._compositionMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/default_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Renderer, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ NUMBER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"number\" [(ngModel)]=\"age\">\n *  ```\n */\nexport class NumberValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: number): void {\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n    const /** @type {?} */ normalizedValue = value == null ? '' : value;\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [NUMBER_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\nfunction NumberValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nNumberValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNumberValueAccessor.ctorParameters;\n/** @type {?} */\nNumberValueAccessor.prototype.onChange;\n/** @type {?} */\nNumberValueAccessor.prototype.onTouched;\n/** @type {?} */\nNumberValueAccessor.prototype._renderer;\n/** @type {?} */\nNumberValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/number_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor} from './control_value_accessor';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n/**\n * @return {?}\n */\nfunction unimplemented(): any {\n  throw new Error('unimplemented');\n}\n/**\n * A base class that all control directive extend.\n * It binds a {\\@link FormControl} object to a DOM element.\n * \n * Used internally by Angular forms.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgControl extends AbstractControlDirective {\n/**\n * \\@internal\n */\n_parent: ControlContainer = null;\n  name: string = null;\n  valueAccessor: ControlValueAccessor = null;\n/**\n * \\@internal\n */\n_rawValidators: Array<Validator|ValidatorFn> = [];\n/**\n * \\@internal\n */\n_rawAsyncValidators: Array<AsyncValidator|AsyncValidatorFn> = [];\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return /** @type {?} */(( <ValidatorFn>unimplemented())); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn { return /** @type {?} */(( <AsyncValidatorFn>unimplemented())); }\n/**\n * @abstract\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any) {}\n}\n\nfunction NgControl_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._parent;\n/** @type {?} */\nNgControl.prototype.name;\n/** @type {?} */\nNgControl.prototype.valueAccessor;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawValidators;\n/**\n * \\@internal\n * @type {?}\n */\nNgControl.prototype._rawAsyncValidators;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_control.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Injectable, Injector, Input, OnDestroy, OnInit, Renderer, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\n\nexport const /** @type {?} */ RADIO_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nexport class RadioControlRegistry {\nprivate _accessors: any[] = [];\n/**\n * @param {?} control\n * @param {?} accessor\n * @return {?}\n */\nadd(control: NgControl, accessor: RadioControlValueAccessor) {\n    this._accessors.push([control, accessor]);\n  }\n/**\n * @param {?} accessor\n * @return {?}\n */\nremove(accessor: RadioControlValueAccessor) {\n    for (let /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n      if (this._accessors[i][1] === accessor) {\n        this._accessors.splice(i, 1);\n        return;\n      }\n    }\n  }\n/**\n * @param {?} accessor\n * @return {?}\n */\nselect(accessor: RadioControlValueAccessor) {\n    this._accessors.forEach((c) => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n/**\n * @param {?} controlPair\n * @param {?} accessor\n * @return {?}\n */\nprivate _isSameGroup(\n      controlPair: [NgControl, RadioControlValueAccessor],\n      accessor: RadioControlValueAccessor): boolean {\n    if (!controlPair[0].control) return false;\n    return controlPair[0]._parent === accessor._control._parent &&\n        controlPair[1].name === accessor.name;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RadioControlRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioControlRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioControlRegistry.ctorParameters;\n/** @type {?} */\nRadioControlRegistry.prototype._accessors;\n}\n\n/**\n * \\@whatItDoes Writes radio control values and listens to radio control changes.\n * \n * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n * to keep the view synced with the {\\@link FormControl} model.\n * \n * \\@howToUse \n * \n * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n * \n * ### How to use radio buttons with form directives\n * \n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n * \n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n * \n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n * \n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n * \n *  * **npm package**: `\\@angular/forms`\n * \n *  \\@stable\n */\nexport class RadioControlValueAccessor implements ControlValueAccessor,\n    OnDestroy, OnInit {\n/**\n * \\@internal\n */\n_state: boolean;\n/**\n * \\@internal\n */\n_control: NgControl;\n/**\n * \\@internal\n */\n_fn: Function;\n  onChange = () => {};\n  onTouched = () => {};\n\n   name: string;\n   formControlName: string;\n   value: any;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _registry\n * @param {?} _injector\n */\nconstructor(\nprivate _renderer: Renderer,\nprivate _elementRef: ElementRef,\nprivate _registry: RadioControlRegistry,\nprivate _injector: Injector) {}\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._control = this._injector.get(NgControl);\n    this._checkName();\n    this._registry.add(this._control, this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this._registry.remove(this); }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._state = value === this.value;\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: any) => {}): void {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nfireUncheck(value: any): void { this.writeValue(value); }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n/**\n * @return {?}\n */\nprivate _checkName(): void {\n    if (this.name && this.formControlName && this.name !== this.formControlName) {\n      this._throwNameError();\n    }\n    if (!this.name && this.formControlName) this.name = this.formControlName;\n  }\n/**\n * @return {?}\n */\nprivate _throwNameError(): void {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n  host: {'(change)': 'onChange()', '(blur)': 'onTouched()'},\n  providers: [RADIO_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n{type: RadioControlRegistry, },\n{type: Injector, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'formControlName': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction RadioControlValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nRadioControlValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRadioControlValueAccessor.ctorParameters;\n/** @type {?} */\nRadioControlValueAccessor.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._state;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._control;\n/**\n * \\@internal\n * @type {?}\n */\nRadioControlValueAccessor.prototype._fn;\n/** @type {?} */\nRadioControlValueAccessor.prototype.onChange;\n/** @type {?} */\nRadioControlValueAccessor.prototype.onTouched;\n/** @type {?} */\nRadioControlValueAccessor.prototype.name;\n/** @type {?} */\nRadioControlValueAccessor.prototype.formControlName;\n/** @type {?} */\nRadioControlValueAccessor.prototype.value;\n/** @type {?} */\nRadioControlValueAccessor.prototype._renderer;\n/** @type {?} */\nRadioControlValueAccessor.prototype._elementRef;\n/** @type {?} */\nRadioControlValueAccessor.prototype._registry;\n/** @type {?} */\nRadioControlValueAccessor.prototype._injector;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/radio_control_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Provider, Renderer, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const /** @type {?} */ RANGE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n * \n *  ### Example\n *  ```\n *  <input type=\"range\" [(ngModel)]=\"age\" >\n *  ```\n */\nexport class RangeValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(private _renderer: Renderer,\nprivate _elementRef: ElementRef) {}\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (_: number) => void): void {\n    this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void { this.onTouched = fn; }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n  host: {\n    '(change)': 'onChange($event.target.value)',\n    '(input)': 'onChange($event.target.value)',\n    '(blur)': 'onTouched()'\n  },\n  providers: [RANGE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\nfunction RangeValueAccessor_tsickle_Closure_declarations() {\n/** @type {?} */\nRangeValueAccessor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRangeValueAccessor.ctorParameters;\n/** @type {?} */\nRangeValueAccessor.prototype.onChange;\n/** @type {?} */\nRangeValueAccessor.prototype.onTouched;\n/** @type {?} */\nRangeValueAccessor.prototype._renderer;\n/** @type {?} */\nRangeValueAccessor.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/range_value_accessor.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n/**\n * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n * \n * \\@stable\n */\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n/**\n * \\@internal\n */\n_parent: ControlContainer;\n/**\n * \\@internal\n */\n_validators: any[];\n/**\n * \\@internal\n */\n_asyncValidators: any[];\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this._checkParentType();\n    this.formDirective.addFormGroup(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this.formDirective) {\n      this.formDirective.removeFormGroup(this);\n    }\n  }\n/**\n * Get the {\\@link FormGroup} backing this binding.\n * @return {?}\n */\nget control(): FormGroup { return this.formDirective.getFormGroup(this); }\n/**\n * Get the path to this control group.\n * @return {?}\n */\nget path(): string[] { return controlPath(this.name, this._parent); }\n/**\n * Get the {\\@link Form} to which this group belongs.\n * @return {?}\n */\nget formDirective(): Form { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._validators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {}\n}\n\nfunction AbstractFormGroupDirective_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._parent;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._validators;\n/**\n * \\@internal\n * @type {?}\n */\nAbstractFormGroupDirective.prototype._asyncValidators;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/abstract_form_group_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Self} from '@angular/core';\n\nimport {AbstractControlDirective} from './abstract_control_directive';\nimport {ControlContainer} from './control_container';\nimport {NgControl} from './ng_control';\nexport class AbstractControlStatus {\nprivate _cd: AbstractControlDirective;\n/**\n * @param {?} cd\n */\nconstructor(cd: AbstractControlDirective) { this._cd = cd; }\n/**\n * @return {?}\n */\nget ngClassUntouched(): boolean { return this._cd.control ? this._cd.control.untouched : false; }\n/**\n * @return {?}\n */\nget ngClassTouched(): boolean { return this._cd.control ? this._cd.control.touched : false; }\n/**\n * @return {?}\n */\nget ngClassPristine(): boolean { return this._cd.control ? this._cd.control.pristine : false; }\n/**\n * @return {?}\n */\nget ngClassDirty(): boolean { return this._cd.control ? this._cd.control.dirty : false; }\n/**\n * @return {?}\n */\nget ngClassValid(): boolean { return this._cd.control ? this._cd.control.valid : false; }\n/**\n * @return {?}\n */\nget ngClassInvalid(): boolean { return this._cd.control ? this._cd.control.invalid : false; }\n/**\n * @return {?}\n */\nget ngClassPending(): boolean { return this._cd.control ? this._cd.control.pending : false; }\n}\n\nfunction AbstractControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractControlStatus.prototype._cd;\n}\n\n\nexport const /** @type {?} */ ngControlStatusHost = {\n  '[class.ng-untouched]': 'ngClassUntouched',\n  '[class.ng-touched]': 'ngClassTouched',\n  '[class.ng-pristine]': 'ngClassPristine',\n  '[class.ng-dirty]': 'ngClassDirty',\n  '[class.ng-valid]': 'ngClassValid',\n  '[class.ng-invalid]': 'ngClassInvalid',\n  '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatus extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: NgControl) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgControl, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatus.ctorParameters;\n}\n\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n * \n * \\@stable\n */\nexport class NgControlStatusGroup extends AbstractControlStatus {\n/**\n * @param {?} cd\n */\nconstructor( cd: ControlContainer) { super(cd); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n  host: ngControlStatusHost\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Self }, ]},\n];\n}\n\nfunction NgControlStatusGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgControlStatusGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgControlStatusGroup.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_control_status.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Optional, Self, forwardRef} from '@angular/core';\n\nimport {AbstractControl, FormControl, FormGroup} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {NgControl} from './ng_control';\nimport {NgModel} from './ng_model';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, setUpControl, setUpFormContainer} from './shared';\n\nexport const /** @type {?} */ formDirectiveProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgForm)\n};\n\nconst /** @type {?} */ resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n * to track aggregate form value and validation status.\n * \n * \\@howToUse \n * \n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n * \n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n * \n * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n * sub-groups within the form.\n * \n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n * \n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `FormsModule`\n * \n *  \\@stable\n */\nexport class NgForm extends ControlContainer implements Form {\nprivate _submitted: boolean = false;\n\n  form: FormGroup;\n  ngSubmit = new EventEmitter();\n/**\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this.form =\n        new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n  }\n/**\n * @return {?}\n */\nget submitted(): boolean { return this._submitted; }\n/**\n * @return {?}\n */\nget formDirective(): Form { return this; }\n/**\n * @return {?}\n */\nget control(): FormGroup { return this.form; }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @return {?}\n */\nget controls(): {[key: string]: AbstractControl} { return this.form.controls; }\n/**\n * @param {?} dir\n * @return {?}\n */\naddControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      dir._control = /** @type {?} */(( <FormControl>container.registerControl(dir.name, dir.control)));\n      setUpControl(dir.control, dir);\n      dir.control.updateValueAndValidity({emitEvent: false});\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetControl(dir: NgModel): FormControl { return /** @type {?} */(( <FormControl>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveControl(dir: NgModel): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\naddFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      const /** @type {?} */ group = new FormGroup({});\n      setUpFormContainer(group, dir);\n      container.registerControl(dir.name, group);\n      group.updateValueAndValidity({emitEvent: false});\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\nremoveFormGroup(dir: NgModelGroup): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ container = this._findContainer(dir.path);\n      if (container) {\n        container.removeControl(dir.name);\n      }\n    });\n  }\n/**\n * @param {?} dir\n * @return {?}\n */\ngetFormGroup(dir: NgModelGroup): FormGroup { return /** @type {?} */(( <FormGroup>this.form.get(dir.path))); }\n/**\n * @param {?} dir\n * @param {?} value\n * @return {?}\n */\nupdateModel(dir: NgControl, value: any): void {\n    resolvedPromise.then(() => {\n      const /** @type {?} */ ctrl = /** @type {?} */(( <FormControl>this.form.get(dir.path)));\n      ctrl.setValue(value);\n    });\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nsetValue(value: {[key: string]: any}): void { this.control.setValue(value); }\n/**\n * @param {?} $event\n * @return {?}\n */\nonSubmit($event: Event): boolean {\n    this._submitted = true;\n    this.ngSubmit.emit($event);\n    return false;\n  }\n/**\n * @return {?}\n */\nonReset(): void { this.resetForm(); }\n/**\n * @param {?=} value\n * @return {?}\n */\nresetForm(value: any = undefined): void {\n    this.form.reset(value);\n    this._submitted = false;\n  }\n/**\n * \\@internal\n * @param {?} path\n * @return {?}\n */\n_findContainer(path: string[]): FormGroup {\n    path.pop();\n    return path.length ? /** @type {?} */(( <FormGroup>this.form.get(path))) : this.form;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n  providers: [formDirectiveProvider],\n  host: {'(submit)': 'onSubmit($event)', '(reset)': 'onReset()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\nfunction NgForm_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForm.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForm.ctorParameters;\n/** @type {?} */\nNgForm.prototype._submitted;\n/** @type {?} */\nNgForm.prototype.form;\n/** @type {?} */\nNgForm.prototype.ngSubmit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_form.ts","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const FormErrorExamples = {\n  formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n\n  formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n\n  formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n\n  ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n\n  ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/error_examples.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {FormErrorExamples as Examples} from './error_examples';\nexport class TemplateDrivenErrors {\n/**\n * @return {?}\n */\nstatic modelParentException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${Examples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${Examples.ngModelWithFormGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic formGroupNameException(): void {\n    throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic missingNameException() {\n    throw new Error(\n        `If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n  }\n/**\n * @return {?}\n */\nstatic modelGroupParentException() {\n    throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${Examples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${Examples.ngModelGroup}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/template_driven_errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {NgForm} from './ng_form';\nimport {TemplateDrivenErrors} from './template_driven_errors';\n\nexport const /** @type {?} */ modelGroupProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n * \n * \\@howToUse \n * \n * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n * within `<form>` tags).\n * \n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n * \n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n * \n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `FormsModule`\n * \n * \\@stable\n */\nexport class NgModelGroup extends AbstractFormGroupDirective implements OnInit, OnDestroy {\n   name: string;\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n */\nconstructor(\n        parent: ControlContainer,\n         validators: any[],\n         asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_checkParentType(): void {\n    if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n      TemplateDrivenErrors.modelGroupParentException();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['ngModelGroup', ] },],\n};\n}\n\nfunction NgModelGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModelGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModelGroup.ctorParameters;\n/** @type {?} */\nNgModelGroup.propDecorators;\n/** @type {?} */\nNgModelGroup.prototype.name;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_model_group.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {NgForm} from './ng_form';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl} from './shared';\nimport {TemplateDrivenErrors} from './template_driven_errors';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from './validators';\n\nexport const /** @type {?} */ formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst /** @type {?} */ resolvedPromise = Promise.resolve(null);\n/**\n * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n * to a form control element.\n * \n * The {\\@link FormControl} instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n * \n * \\@howToUse \n * \n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n * \n * It accepts a domain model as an optional {\\@link \\@Input}. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n * \n * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in {\\@link AbstractControlDirective}.\n * \n * The following is an example of a simple standalone control using `ngModel`:\n * \n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n * \n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n * \n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n * \n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n * \n * Take a look at an example of using `ngModel` within a form:\n * \n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n * \n * To see `ngModel` examples with different form control types, see:\n * \n * * Radio buttons: {\\@link RadioControlValueAccessor}\n * * Selects: {\\@link SelectControlValueAccessor}\n * \n * **npm package**: `\\@angular/forms`\n * \n * **NgModule**: `FormsModule`\n * \n *  \\@stable\n */\nexport class NgModel extends NgControl implements OnChanges,\n    OnDestroy {\n/**\n * \\@internal\n */\n_control = new FormControl();\n/**\n * \\@internal\n */\n_registered = false;\n  viewModel: any;\n\n   name: string;\n   isDisabled: boolean;\n   model: any;\n   options: {name?: string, standalone?: boolean};\n\n   update = new EventEmitter();\n/**\n * @param {?} parent\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(  parent: ControlContainer,\n                 validators: Array<Validator|ValidatorFn>,\n                 asyncValidators: Array<AsyncValidator|AsyncValidatorFn>,\n                \n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this._parent = parent;\n                this._rawValidators = validators || [];\n                this._rawAsyncValidators = asyncValidators || [];\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n                this._checkForErrors();\n                if (!this._registered) this._setUpControl();\n                if ('isDisabled' in changes) {\n                  this._updateDisabled(changes);\n                }\n\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this._updateValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this.formDirective && this.formDirective.removeControl(this); }\n/**\n * @return {?}\n */\nget control(): FormControl { return this._control; }\n/**\n * @return {?}\n */\nget path(): string[] {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n              }\n/**\n * @return {?}\n */\nget formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn {\n                return composeAsyncValidators(this._rawAsyncValidators);\n              }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                this.update.emit(newValue);\n              }\n/**\n * @return {?}\n */\nprivate _setUpControl(): void {\n                this._isStandalone() ? this._setUpStandalone() :\n                                       this.formDirective.addControl(this);\n                this._registered = true;\n              }\n/**\n * @return {?}\n */\nprivate _isStandalone(): boolean {\n                return !this._parent || (this.options && this.options.standalone);\n              }\n/**\n * @return {?}\n */\nprivate _setUpStandalone(): void {\n                setUpControl(this._control, this);\n                this._control.updateValueAndValidity({emitEvent: false});\n              }\n/**\n * @return {?}\n */\nprivate _checkForErrors(): void {\n                if (!this._isStandalone()) {\n                  this._checkParentType();\n                }\n                this._checkName();\n              }\n/**\n * @return {?}\n */\nprivate _checkParentType(): void {\n                if (!(this._parent instanceof NgModelGroup) &&\n                    this._parent instanceof AbstractFormGroupDirective) {\n                  TemplateDrivenErrors.formGroupNameException();\n                } else if (\n                    !(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                  TemplateDrivenErrors.modelParentException();\n                }\n              }\n/**\n * @return {?}\n */\nprivate _checkName(): void {\n                if (this.options && this.options.name) this.name = this.options.name;\n\n                if (!this._isStandalone() && !this.name) {\n                  TemplateDrivenErrors.missingNameException();\n                }\n              }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _updateValue(value: any): void {\n                resolvedPromise.then(\n                    () => { this.control.setValue(value, {emitViewToModelChange: false}); });\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _updateDisabled(changes: SimpleChanges) {\n                const /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n\n                const /** @type {?} */ isDisabled =\n                    disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\n                resolvedPromise.then(() => {\n                  if (isDisabled && !this.control.disabled) {\n                    this.control.disable();\n                  } else if (!isDisabled && this.control.disabled) {\n                    this.control.enable();\n                  }\n                });\n              }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngModel]:not([formControlName]):not([formControl])',\n  providers: [formControlBinding],\n  exportAs: 'ngModel'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'options': [{ type: Input, args: ['ngModelOptions', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n};\n}\n\nfunction NgModel_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgModel.ctorParameters;\n/** @type {?} */\nNgModel.propDecorators;\n/**\n * \\@internal\n * @type {?}\n */\nNgModel.prototype._control;\n/**\n * \\@internal\n * @type {?}\n */\nNgModel.prototype._registered;\n/** @type {?} */\nNgModel.prototype.viewModel;\n/** @type {?} */\nNgModel.prototype.name;\n/** @type {?} */\nNgModel.prototype.isDisabled;\n/** @type {?} */\nNgModel.prototype.model;\n/** @type {?} */\nNgModel.prototype.options;\n/** @type {?} */\nNgModel.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_model.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {FormErrorExamples as Examples} from './error_examples';\nexport class ReactiveErrors {\n/**\n * @return {?}\n */\nstatic controlParentException(): void {\n    throw new Error(\n        `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formControlName}`);\n  }\n/**\n * @return {?}\n */\nstatic ngModelGroupException(): void {\n    throw new Error(\n        `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${Examples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${Examples.ngModelGroup}`);\n  }\n/**\n * @return {?}\n */\nstatic missingFormException(): void {\n    throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${Examples.formControlName}`);\n  }\n/**\n * @return {?}\n */\nstatic groupParentException(): void {\n    throw new Error(\n        `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${Examples.formGroupName}`);\n  }\n/**\n * @return {?}\n */\nstatic arrayParentException(): void {\n    throw new Error(\n        `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${Examples.formArrayName}`);\n  }\n/**\n * @return {?}\n */\nstatic disabledAttrWarning(): void {\n    console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_errors.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Inject, Input, OnChanges, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {FormControl} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '../control_value_accessor';\nimport {NgControl} from '../ng_control';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl} from '../shared';\nimport {AsyncValidator, AsyncValidatorFn, Validator, ValidatorFn} from '../validators';\n\nexport const /** @type {?} */ formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n * \n * In other words, this directive ensures that any values written to the {\\@link FormControl}\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * {\\@link FormControl} instance (view -> model).\n * \n * \\@howToUse \n * \n * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n * {\\@link FormControlDirective}.\n * \n * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n * it does not require that your {\\@link FormControl} instance be part of any parent\n * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n * exists above it.\n * \n * **Get the value**: the `value` property is always synced and available on the\n * {\\@link FormControl} instance. See a full list of available properties in\n * {\\@link AbstractControl}.\n * \n * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n * or you can set it programmatically later using {\\@link AbstractControl.setValue} or\n * {\\@link AbstractControl.patchValue}.\n * \n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n * re-calculated.\n * \n * ### Example\n * \n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n * \n * * **npm package**: `\\@angular/forms`\n * \n * * **NgModule**: `ReactiveFormsModule`\n * \n *  \\@stable\n */\nexport class FormControlDirective extends NgControl implements OnChanges {\n  viewModel: any;\n\n   form: FormControl;\n   model: any;\n   update = new EventEmitter();\n/**\n * @param {?} isDisabled\n * @return {?}\n */\nset isDisabled(isDisabled: boolean) { ReactiveErrors.disabledAttrWarning(); }\n/**\n * @param {?} validators\n * @param {?} asyncValidators\n * @param {?} valueAccessors\n */\nconstructor(   validators: Array<Validator|ValidatorFn>,\n                 asyncValidators: Array<AsyncValidator|AsyncValidatorFn>,\n                \n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this._rawValidators = validators || [];\n                this._rawAsyncValidators = asyncValidators || [];\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n                if (this._isControlChanged(changes)) {\n                  setUpControl(this.form, this);\n                  if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                  }\n                  this.form.updateValueAndValidity({emitEvent: false});\n                }\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this.form.setValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n/**\n * @return {?}\n */\nget path(): string[] { return []; }\n/**\n * @return {?}\n */\nget validator(): ValidatorFn { return composeValidators(this._rawValidators); }\n/**\n * @return {?}\n */\nget asyncValidator(): AsyncValidatorFn {\n                return composeAsyncValidators(this._rawAsyncValidators);\n              }\n/**\n * @return {?}\n */\nget control(): FormControl { return this.form; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nviewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                this.update.emit(newValue);\n              }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _isControlChanged(changes: {[key: string]: any}): boolean {\n                return changes.hasOwnProperty('form');\n              }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'form': [{ type: Input, args: ['formControl', ] },],\n'model': [{ type: Input, args: ['ngModel', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n'isDisabled': [{ type: Input, args: ['disabled', ] },],\n};\n}\n\nfunction FormControlDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFormControlDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormControlDirective.ctorParameters;\n/** @type {?} */\nFormControlDirective.propDecorators;\n/** @type {?} */\nFormControlDirective.prototype.viewModel;\n/** @type {?} */\nFormControlDirective.prototype.form;\n/** @type {?} */\nFormControlDirective.prototype.model;\n/** @type {?} */\nFormControlDirective.prototype.update;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/reactive_directives/form_control_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input, OnChanges, Provider, SimpleChanges, forwardRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {AbstractControl} from '../model';\nimport {NG_VALIDATORS, Validators} from '../validators';\n\n/** @experimental */\nexport type ValidationErrors = {\n  [key: string]: any\n};\n\n/**\n * An interface that can be implemented by classes that can act as validators.\n *\n * ## Usage\n *\n * ```typescript\n * @Directive({\n *   selector: '[custom-validator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(c: Control): {[key: string]: any} {\n *     return {\"custom\": true};\n *   }\n * }\n * ```\n *\n * @stable\n */\nexport interface Validator {\n  validate(c: AbstractControl): ValidationErrors|null;\n  registerOnValidatorChange?(fn: () => void): void;\n}\n\n/** @experimental */\nexport interface AsyncValidator extends Validator {\n  validate(c: AbstractControl): Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n\nexport const /** @type {?} */ REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => RequiredValidator),\n  multi: true\n};\n\nexport const /** @type {?} */ CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n * \n * \\@stable\n */\nexport class RequiredValidator implements Validator {\nprivate _required: boolean;\nprivate _onChange: () => void;\n/**\n * @return {?}\n */\nget required(): boolean|string { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean|string) {\n    this._required = value != null && value !== false && `${value}` !== 'false';\n    if (this._onChange) this._onChange();\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.required(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n  providers: [REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'required': [{ type: Input },],\n};\n}\n\nfunction RequiredValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nRequiredValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRequiredValidator.ctorParameters;\n/** @type {?} */\nRequiredValidator.propDecorators;\n/** @type {?} */\nRequiredValidator.prototype._required;\n/** @type {?} */\nRequiredValidator.prototype._onChange;\n}\n\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n * \n * \\@experimental\n */\nexport class CheckboxRequiredValidator extends RequiredValidator {\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.required ? Validators.requiredTrue(c) : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n  providers: [CHECKBOX_REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CheckboxRequiredValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckboxRequiredValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckboxRequiredValidator.ctorParameters;\n}\n\n\n/**\n * Provider which adds {@link EmailValidator} to {@link NG_VALIDATORS}.\n */\nexport const /** @type {?} */ EMAIL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the {\\@link NG_VALIDATORS} binding.\n * \n * ### Example\n * \n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n * \n * \\@experimental\n */\nexport class EmailValidator implements Validator {\nprivate _enabled: boolean;\nprivate _onChange: () => void;\n/**\n * @param {?} value\n * @return {?}\n */\nset email(value: boolean|string) {\n    this._enabled = value === '' || value === true || value === 'true';\n    if (this._onChange) this._onChange();\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this._enabled ? Validators.email(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n  providers: [EMAIL_VALIDATOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'email': [{ type: Input },],\n};\n}\n\nfunction EmailValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nEmailValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEmailValidator.ctorParameters;\n/** @type {?} */\nEmailValidator.propDecorators;\n/** @type {?} */\nEmailValidator.prototype._enabled;\n/** @type {?} */\nEmailValidator.prototype._onChange;\n}\n\n\n/**\n * @stable\n */\nexport interface ValidatorFn { (c: AbstractControl): ValidationErrors|null; }\n\n/**\n * @stable\n */\nexport interface AsyncValidatorFn {\n  (c: AbstractControl): Promise<ValidationErrors|null>|Observable<ValidationErrors|null>;\n}\n\n/**\n * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='min'}\n */\nexport const /** @type {?} */ MIN_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n * \n * \\@stable\n */\nexport class MinLengthValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   minlength: string;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('minlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.minlength == null ? null : this._validator(c);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void {\n    this._validator = Validators.minLength(parseInt(this.minlength, 10));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n  providers: [MIN_LENGTH_VALIDATOR],\n  host: {'[attr.minlength]': 'minlength ? minlength : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minlength': [{ type: Input },],\n};\n}\n\nfunction MinLengthValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nMinLengthValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMinLengthValidator.ctorParameters;\n/** @type {?} */\nMinLengthValidator.propDecorators;\n/** @type {?} */\nMinLengthValidator.prototype._validator;\n/** @type {?} */\nMinLengthValidator.prototype._onChange;\n/** @type {?} */\nMinLengthValidator.prototype.minlength;\n}\n\n\n/**\n * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='max'}\n */\nexport const /** @type {?} */ MAX_LENGTH_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n * `formControl`,\n * or control with `ngModel` that also has a `maxlength` attribute.\n * \n * \\@stable\n */\nexport class MaxLengthValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   maxlength: string;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('maxlength' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null {\n    return this.maxlength != null ? this._validator(c) : null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void {\n    this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n  providers: [MAX_LENGTH_VALIDATOR],\n  host: {'[attr.maxlength]': 'maxlength ? maxlength : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'maxlength': [{ type: Input },],\n};\n}\n\nfunction MaxLengthValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nMaxLengthValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaxLengthValidator.ctorParameters;\n/** @type {?} */\nMaxLengthValidator.propDecorators;\n/** @type {?} */\nMaxLengthValidator.prototype._validator;\n/** @type {?} */\nMaxLengthValidator.prototype._onChange;\n/** @type {?} */\nMaxLengthValidator.prototype.maxlength;\n}\n\n\n\nexport const /** @type {?} */ PATTERN_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n * \n * ### Example\n * \n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n * \\@stable\n */\nexport class PatternValidator implements Validator,\n    OnChanges {\nprivate _validator: ValidatorFn;\nprivate _onChange: () => void;\n\n   pattern: string|RegExp;\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('pattern' in changes) {\n      this._createValidator();\n      if (this._onChange) this._onChange();\n    }\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors|null { return this._validator(c); }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n/**\n * @return {?}\n */\nprivate _createValidator(): void { this._validator = Validators.pattern(this.pattern); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n  providers: [PATTERN_VALIDATOR],\n  host: {'[attr.pattern]': 'pattern ? pattern : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pattern': [{ type: Input },],\n};\n}\n\nfunction PatternValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nPatternValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPatternValidator.ctorParameters;\n/** @type {?} */\nPatternValidator.propDecorators;\n/** @type {?} */\nPatternValidator.prototype._validator;\n/** @type {?} */\nPatternValidator.prototype._onChange;\n/** @type {?} */\nPatternValidator.prototype.pattern;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/validators.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\nimport {AsyncValidatorFn, ValidatorFn} from './directives/validators';\nimport {AbstractControl, FormArray, FormControl, FormGroup} from './model';\n/**\n * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n * \n * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n * forms.\n * \n * \\@howToUse \n * \n * To use, inject `FormBuilder` into your component class. You can then call its methods\n * directly.\n * \n * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n * \n *  * **npm package**: `\\@angular/forms`\n * \n *  * **NgModule**: {\\@link ReactiveFormsModule}\n * \n * \\@stable\n */\nexport class FormBuilder {\n/**\n * Construct a new {\\@link FormGroup} with the given map of configuration.\n * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n * \n * See the {\\@link FormGroup} constructor for more details.\n * @param {?} controlsConfig\n * @param {?=} extra\n * @return {?}\n */\ngroup(controlsConfig: {[key: string]: any}, extra: {[key: string]: any} = null): FormGroup {\n    const /** @type {?} */ controls = this._reduceControls(controlsConfig);\n    const /** @type {?} */ validator: ValidatorFn = extra != null ? extra['validator'] : null;\n    const /** @type {?} */ asyncValidator: AsyncValidatorFn = extra != null ? extra['asyncValidator'] : null;\n    return new FormGroup(controls, validator, asyncValidator);\n  }\n/**\n * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n * `asyncValidator`.\n * \n * `formState` can either be a standalone value for the form control or an object\n * that contains both a value and a disabled status.\n * \n * @param {?} formState\n * @param {?=} validator\n * @param {?=} asyncValidator\n * @return {?}\n */\ncontrol(\n      formState: Object, validator: ValidatorFn|ValidatorFn[] = null,\n      asyncValidator: AsyncValidatorFn|AsyncValidatorFn[] = null): FormControl {\n    return new FormControl(formState, validator, asyncValidator);\n  }\n/**\n * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n * configuration, with the given optional `validator` and `asyncValidator`.\n * @param {?} controlsConfig\n * @param {?=} validator\n * @param {?=} asyncValidator\n * @return {?}\n */\narray(\n      controlsConfig: any[], validator: ValidatorFn = null,\n      asyncValidator: AsyncValidatorFn = null): FormArray {\n    const /** @type {?} */ controls = controlsConfig.map(c => this._createControl(c));\n    return new FormArray(controls, validator, asyncValidator);\n  }\n/**\n * \\@internal\n * @param {?} controlsConfig\n * @return {?}\n */\n_reduceControls(controlsConfig: {[k: string]: any}): {[key: string]: AbstractControl} {\n    const /** @type {?} */ controls: {[key: string]: AbstractControl} = {};\n    Object.keys(controlsConfig).forEach(controlName => {\n      controls[controlName] = this._createControl(controlsConfig[controlName]);\n    });\n    return controls;\n  }\n/**\n * \\@internal\n * @param {?} controlConfig\n * @return {?}\n */\n_createControl(controlConfig: any): AbstractControl {\n    if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n        controlConfig instanceof FormArray) {\n      return controlConfig;\n\n    } else if (Array.isArray(controlConfig)) {\n      const /** @type {?} */ value = controlConfig[0];\n      const /** @type {?} */ validator: ValidatorFn = controlConfig.length > 1 ? controlConfig[1] : null;\n      const /** @type {?} */ asyncValidator: AsyncValidatorFn = controlConfig.length > 2 ? controlConfig[2] : null;\n      return this.control(value, validator, asyncValidator);\n\n    } else {\n      return this.control(controlConfig);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FormBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nFormBuilder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormBuilder.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/form_builder.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive} from '@angular/core';\n/**\n * \\@whatItDoes Adds `novalidate` attribute to all forms by default.\n * \n * `novalidate` is used to disable browser's native form validation.\n * \n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n * \n * ```\n * <form ngNativeValidate></form>\n * ```\n * \n * \\@experimental\n */\nexport class NgNoValidate {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n  host: {'novalidate': ''},\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgNoValidate_tsickle_Closure_declarations() {\n/** @type {?} */\nNgNoValidate.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgNoValidate.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives/ng_no_validate_directive.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, Type} from '@angular/core';\n\nimport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nimport {DefaultValueAccessor} from './directives/default_value_accessor';\nimport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nimport {NgForm} from './directives/ng_form';\nimport {NgModel} from './directives/ng_model';\nimport {NgModelGroup} from './directives/ng_model_group';\nimport {NgNoValidate} from './directives/ng_no_validate_directive';\nimport {NumberValueAccessor} from './directives/number_value_accessor';\nimport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nimport {RangeValueAccessor} from './directives/range_value_accessor';\nimport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nimport {FormControlName} from './directives/reactive_directives/form_control_name';\nimport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nimport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nimport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nimport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nimport {CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlValueAccessor} from './directives/control_value_accessor';\nexport {DefaultValueAccessor} from './directives/default_value_accessor';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus, NgControlStatusGroup} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {RangeValueAccessor} from './directives/range_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\n\nexport const /** @type {?} */ SHARED_FORM_DIRECTIVES: Type<any>[] = [\n  NgNoValidate,\n  NgSelectOption,\n  NgSelectMultipleOption,\n  DefaultValueAccessor,\n  NumberValueAccessor,\n  RangeValueAccessor,\n  CheckboxControlValueAccessor,\n  SelectControlValueAccessor,\n  SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor,\n  NgControlStatus,\n  NgControlStatusGroup,\n  RequiredValidator,\n  MinLengthValidator,\n  MaxLengthValidator,\n  PatternValidator,\n  CheckboxRequiredValidator,\n  EmailValidator,\n];\n\nexport const /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES: Type<any>[] = [NgModel, NgModelGroup, NgForm];\n\nexport const /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES: Type<any>[] =\n    [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nexport class InternalFormsSharedModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: SHARED_FORM_DIRECTIVES,\n  exports: SHARED_FORM_DIRECTIVES,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InternalFormsSharedModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInternalFormsSharedModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInternalFormsSharedModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/directives.ts","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES, TEMPLATE_DRIVEN_DIRECTIVES} from './directives';\nimport {RadioControlRegistry} from './directives/radio_control_value_accessor';\nimport {FormBuilder} from './form_builder';\n/**\n * The ng module for forms.\n * \\@stable\n */\nexport class FormsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n  providers: [RadioControlRegistry],\n  exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FormsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFormsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFormsModule.ctorParameters;\n}\n\n/**\n * The ng module for reactive forms.\n * \\@stable\n */\nexport class ReactiveFormsModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n  providers: [FormBuilder, RadioControlRegistry],\n  exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ReactiveFormsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nReactiveFormsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReactiveFormsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../../../packages/forms/src/form_providers.ts","import \"material-design-lite/dist/material.deep_purple-pink.min.css\";\nimport \"./app.css\";\nimport \"material-design-lite/material.min.js\";\n\nimport 'zone.js';\nimport 'reflect-metadata';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { MainModule } from './main.module';\n\nimport { enableProdMode } from '@angular/core';\nif (process.env.NODE_ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(MainModule).then(function(MODULE_REF) {   if (module[\"hot\"]) {     module[\"hot\"][\"accept\"]();          if (MODULE_REF.instance[\"hmrOnInit\"]) {       module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);     }     if (MODULE_REF.instance[\"hmrOnStatus\"]) {       module[\"hot\"][\"apply\"](function(status) {         MODULE_REF.instance[\"hmrOnStatus\"](status);       });     }     if (MODULE_REF.instance[\"hmrOnCheck\"]) {       module[\"hot\"][\"check\"](function(err, outdatedModules) {         MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules);       });     }     if (MODULE_REF.instance[\"hmrOnDecline\"]) {       module[\"hot\"][\"decline\"](function(dependencies) {         MODULE_REF.instance[\"hmrOnDecline\"](dependencies);       });     }     module[\"hot\"][\"dispose\"](function(store) {       MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store);       MODULE_REF.destroy();       MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store);     });   }   return MODULE_REF; });\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-root',\n    template: `\n    <div mdl class=\"mdl-layout mdl-js-layout mdl-layout--fixed-header\">\n\n        <app-header></app-header>\n\n        <main class=\"mdl-layout__content\">\n\n            <div class=\"mdl-layout__tab-panel is-active\" id=\"overview\">\n                <router-outlet></router-outlet>\n            </div>\n\n            <h4 style=\"text-align: center\">\n                <img [src]=\"logoUrl\" />\n                <a [href]=\"url\">Learn about this Angular4 VS.NET template</a>\n            </h4>\n\n            <app-footer></app-footer>\n\n        </main>\n    </div>\n    `\n})\nexport class AppComponent {\n    url: string;\n    logoUrl: string;\n\n    constructor() {\n        this.logoUrl = require(\"./assets/img/logo.png\");\n        this.url = 'https://servicestack.net/vs-templates/AngularApp';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./src/app.component.ts"],"sourceRoot":""}